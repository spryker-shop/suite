- pipeline: 'Snyk Validation'
  events:
      - type: 'PUSH'
        refs:
            - 'refs/pull/*'
            - 'refs/heads/master'
  terminate_stale_runs: true
  auto_clear_cache: true
  fail_on_prepare_env_warning: true
  concurrent_pipeline_runs: true
  clone_depth: 1
  resources: 'NANO'
  actions:
      - action: 'Snyk Validation'
        type: 'BUILD'
        docker_image_name: 'library/node'
        docker_image_tag: '18'
        execute_commands:
            - '.ci/snippet/PREPARE'
            - '.ci/snippet/REQUIRE npm install --location=global snyk'
            - '.ci/snippet/RUN snyk monitor --all-projects --org=c408eea4-f0a4-4d7a-846d-5457aefa0cac --exclude=project.json,docker'
            - '.ci/snippet/RUN snyk test --fail-on=all --all-projects --org=c408eea4-f0a4-4d7a-846d-5457aefa0cac --severity-threshold=high --exclude=project.json,docker'
            - '.ci/snippet/FINISH'
        setup_commands:
            - 'apt-get update && apt-get install -y golang-go'
        shell: 'BASH'
      - action: 'Master Job Slack Notification failure'
        type: 'BUILD'
        trigger_time: 'ON_FAILURE'
        docker_image_name: 'library/node'
        docker_image_tag: '18'
        variables:
            - key: 'PIPELINE_STATUS'
              value: 'FAILURE'
              type: 'VAR'
        execute_commands:
            - '.ci/snippet/SLACK_NOTIFICATIONS'
        setup_commands:
            - apt-get update && apt-get -y install jq
        shell: 'BASH'
        trigger_conditions:
            - trigger_condition: 'VAR_IS'
              trigger_variable_key: 'BUDDY_EXECUTION_BRANCH'
              trigger_variable_value: 'master'

- pipeline: 'Standard Validation'
  events:
      - type: 'PUSH'
        refs:
            - 'refs/pull/*'
            - 'refs/heads/master'
  terminate_stale_runs: true
  auto_clear_cache: true
  fail_on_prepare_env_warning: true
  concurrent_pipeline_runs: true
  clone_depth: 1
  resources: 'LARGE'
  actions:
      - action: 'Build Project'
        type: 'BUILD'
        main_service_name: 'post'
        docker_image_name: 'spryker/php'
        docker_image_tag: '8.2'
        execute_commands:
            - '.ci/snippet/PREPARE'
            - '.ci/snippet/REQUIRE composer config github-oauth.github.com ${GITHUB_TOKEN}'
            - '.ci/snippet/REQUIRE composer install --optimize-autoloader --no-interaction --prefer-install=auto'
            - 'SPRYKER_CURRENT_REGION=EU SPRYKER_DYNAMIC_STORE_MODE=true .ci/snippet/REQUIRE vendor/bin/install --no-ansi -r ci.code-generate'
            - '.ci/snippet/FINISH'
        services:
            - type: 'POSTGRE_SQL'
              version: '17'
              connection:
                  host: 'postgres'
                  user: 'postgres'
                  password: 'secret'
              volume_mappings: []
            - type: 'RABBIT_MQ'
              connection:
                  host: 'rabbitmq'
                  user: 'guest'
                  password: 'guest'
              volume_mappings: []
            - type: 'REDIS'
              connection:
                  host: 'redis'
              volume_mappings: []
        shell: 'BASH'
        run_next_parallel: false
      - action: 'Evaluator'
        type: 'BUILD'
        docker_image_name: 'spryker/php'
        docker_image_tag: '8.2'
        execute_commands:
            - '.ci/snippet/PREPARE'
            - '.ci/snippet/REQUIRE vendor/bin/evaluator evaluate --exclude-checkers=SPRYKER_DEV_PACKAGES_CHECKER,MINIMUM_ALLOWED_SHOP_VERSION --format=compact'
            - '.ci/snippet/FINISH'
        shell: 'BASH'
      - action: 'OpenAPI schema validation'
        type: 'BUILD'
        docker_image_name: 'library/node'
        docker_image_tag: '18'
        execute_commands:
            - '.ci/snippet/PREPARE'
            - '.ci/snippet/REQUIRE npm install'
            - '.ci/snippet/REQUIRE npm install speccy@0.11.0 -g'
            - '.ci/snippet/RUN speccy lint src/Generated/Glue/Specification/spryker_rest_api.schema.yml --rules=default'
            - '.ci/snippet/RUN speccy lint src/Generated/GlueStorefront/Specification/spryker_storefront_api.schema.yml --rules=default --skip openapi-tags'
            - '.ci/snippet/RUN speccy lint src/Generated/GlueBackend/Specification/spryker_backend_api.schema.yml --rules=default --skip openapi-tags'
            - '.ci/snippet/FINISH'
        ignore_errors: true
        shell: 'BASH'
      - action: 'Generic Validation'
        type: 'BUILD'
        docker_image_name: 'spryker/php'
        docker_image_tag: '8.2'
        execute_commands:
            - '.ci/snippet/PREPARE'
            - '.ci/snippet/RUN vendor/bin/console --no-ansi code:propel:validate-abstract'
            - '.ci/snippet/RUN vendor/bin/console --no-ansi propel:schema:validate'
            - '.ci/snippet/RUN vendor/bin/console --no-ansi propel:schema:validate-xml-names'
            - '.ci/snippet/RUN vendor/bin/console --no-ansi transfer:validate'
            - '.ci/snippet/RUN vendor/bin/spryker-dev-console dev:validate-module-schemas'
            - '.ci/snippet/RUN vendor/bin/spryker-dev-console dev:validate-module-databuilders'
            - '.ci/snippet/RUN vendor/bin/console --no-ansi dev:composer:replace -d -v'
            - '.ci/snippet/RUN vendor/bin/spryker-dev-console dev:sync-composer -d'
            - '.ci/snippet/RUN vendor/bin/spryker-dev-console dev:module-meta-files -d -v'
            - '.ci/snippet/RUN vendor/bin/console --no-ansi dev:composer:update-json-files -d -v'
            - '.ci/snippet/RUN vendor/bin/console --no-ansi dev:composer:validate-json-files'
            - '.ci/snippet/RUN vendor/bin/console --no-ansi code:sniff:style'
            - '.ci/snippet/RUN vendor/bin/phpmd src/ text vendor/spryker/architecture-sniffer/src/ruleset.xml --minimumpriority 2'
            - '.ci/snippet/RUN vendor/bin/phpstan analyze'
            - '.ci/snippet/RUN vendor/bin/psalm.phar --show-info=false --no-cache --threads=1'
            - '.ci/snippet/FINISH'
        shell: 'BASH'
        run_next_parallel: true
        variables:
            - key: 'STORAGE_REDIS_HOST'
              value: 'redis'
              type: 'VAR'
      - action: 'PHP 8.3 Validation'
        type: 'BUILD'
        docker_image_name: 'spryker/php'
        docker_image_tag: '8.3'
        execute_commands:
            - '.ci/snippet/PREPARE'
            - '.ci/snippet/RUN vendor/bin/phpstan analyze'
            - '.ci/snippet/RUN vendor/bin/console --no-ansi dev:dependency:find'
            - '.ci/snippet/RUN vendor/bin/spryker-dev-console dev:deprecation-links:check'
            - '.ci/snippet/RUN tests/ci_check_untracked.sh'
            - '.ci/snippet/RUN tests/ci_check_touched_modules.sh'
            - '.ci/snippet/FINISH'
        shell: 'BASH'
        run_next_parallel: true
      - action: 'PHP 8.3 MarketPlace Testing'
        type: 'BUILD'
        docker_image_name: 'library/node'
        docker_image_tag: '18'
        execute_commands:
            - '.ci/snippet/REQUIRE vendor/bin/console --no-ansi frontend:project:install-dependencies -vvv'
            - '.ci/snippet/REQUIRE npm install'
            - '.ci/snippet/RUN npm run mp:build:production'
            - '.ci/snippet/RUN npm run mp:stylelint'
            - '.ci/snippet/RUN npm run mp:lint'
            - '.ci/snippet/RUN npm run mp:test'
            - '.ci/snippet/FINISH'
        setup_commands:
            - 'apt-get update && apt-get -y install php8.2-cli php8.2-mbstring'
        shell: 'BASH'
      - action: 'Master Job Slack Notification failure'
        type: 'BUILD'
        trigger_time: 'ON_FAILURE'
        docker_image_name: 'library/node'
        docker_image_tag: '18'
        variables:
            - key: 'PIPELINE_STATUS'
              value: 'FAILURE'
              type: 'VAR'
        execute_commands:
            - '.ci/snippet/SLACK_NOTIFICATIONS'
        setup_commands:
            - apt-get update && apt-get -y install jq
        shell: 'BASH'
        trigger_conditions:
            - trigger_condition: 'VAR_IS'
              trigger_variable_key: 'BUDDY_EXECUTION_BRANCH'
              trigger_variable_value: 'master'

- pipeline: 'NPM Validation'
  events:
      - type: 'PUSH'
        refs:
            - 'refs/pull/*'
            - 'refs/heads/master'
  terminate_stale_runs: true
  auto_clear_cache: true
  fail_on_prepare_env_warning: true
  concurrent_pipeline_runs: true
  clone_depth: 1
  resources: 'LARGE'

  actions:
      - action: 'NPM Validation'
        type: 'BUILD'
        docker_image_name: 'library/node'
        docker_image_tag: '18'
        execute_commands:
            - '.ci/snippet/PREPARE'
            - '.ci/snippet/REQUIRE npm ci'
            - '.ci/snippet/RUN npm run formatter'
            - '.ci/snippet/RUN npm run yves:stylelint'
            - '.ci/snippet/RUN npm run yves:lint'
            - '.ci/snippet/FINISH'
        shell: 'BASH'
        run_next_parallel: true
      - action: 'Master Job Slack Notification failure'
        type: 'BUILD'
        trigger_time: 'ON_FAILURE'
        docker_image_name: 'library/node'
        docker_image_tag: '18'
        variables:
            - key: 'PIPELINE_STATUS'
              value: 'FAILURE'
              type: 'VAR'
        execute_commands:
            - '.ci/snippet/SLACK_NOTIFICATIONS'
        setup_commands:
            - apt-get update && apt-get -y install jq
        shell: 'BASH'
        trigger_conditions:
            - trigger_condition: 'VAR_IS'
              trigger_variable_key: 'BUDDY_EXECUTION_BRANCH'
              trigger_variable_value: 'master'

- pipeline: 'Validation / Prefer Lowest'
  events:
      - type: 'PUSH'
        refs:
            - 'refs/pull/*'
            - 'refs/heads/master'
  terminate_stale_runs: true
  auto_clear_cache: true
  fail_on_prepare_env_warning: true
  concurrent_pipeline_runs: true
  clone_depth: 1
  resources: 'LARGE'
  actions:
      - action: 'Build Project'
        type: 'BUILD'
        main_service_name: 'post'
        docker_image_name: 'spryker/php'
        docker_image_tag: '8.2'
        execute_commands:
            - '.ci/snippet/PREPARE'
            - '.ci/snippet/REQUIRE composer config github-oauth.github.com ${GITHUB_TOKEN}'
            - '.ci/snippet/REQUIRE composer update --prefer-lowest --optimize-autoloader --no-interaction --prefer-install=auto'
            - '.ci/snippet/REQUIRE composer require --dev dereuromark/composer-prefer-lowest:dev-master --with-all-dependencies;'
            - 'SPRYKER_CURRENT_REGION=EU SPRYKER_DYNAMIC_STORE_MODE=true .ci/snippet/REQUIRE vendor/bin/install --no-ansi -r ci.code-generate'
            - '.ci/snippet/FINISH'
        services:
            - type: 'POSTGRE_SQL'
              version: '9.6'
              connection:
                  host: 'postgres'
                  user: 'postgres'
                  password: 'secret'
            - type: 'RABBIT_MQ'
              connection:
                  host: 'rabbitmq'
                  user: 'guest'
                  password: 'guest'
            - type: 'REDIS'
              connection:
                  host: 'redis'
        shell: 'BASH'
      - action: 'PHP 8.2 Validation'
        type: 'BUILD'
        docker_image_name: 'spryker/php'
        docker_image_tag: '8.2'
        execute_commands:
            - '.ci/snippet/PREPARE'
            - '.ci/snippet/RUN vendor/bin/phpstan analyze'
            - '.ci/snippet/FINISH'
        shell: 'BASH'
        run_next_parallel: true

      - action: 'Master Job Slack Notification failure'
        type: 'BUILD'
        trigger_time: 'ON_FAILURE'
        docker_image_name: 'library/node'
        docker_image_tag: '18'
        variables:
            - key: 'PIPELINE_STATUS'
              value: 'FAILURE'
              type: 'VAR'
        execute_commands:
            - '.ci/snippet/SLACK_NOTIFICATIONS'
        setup_commands:
            - apt-get update && apt-get -y install jq
        shell: 'BASH'
        trigger_conditions:
            - trigger_condition: 'VAR_IS'
              trigger_variable_key: 'BUDDY_EXECUTION_BRANCH'
              trigger_variable_value: 'master'

- pipeline: 'PHPStan Validation'
  events:
      - type: 'PUSH'
        refs:
            - 'refs/pull/*'
            - 'refs/heads/master'
      - type: 'PULL_REQUEST'
        events:
            - 'labeled'
        branches:
            - '*'
  terminate_stale_runs: true
  auto_clear_cache: true
  fail_on_prepare_env_warning: true
  concurrent_pipeline_runs: true
  clone_depth: 1
  resources: 'LARGE'
  trigger_conditions:
      - trigger_condition: OR
        trigger_operands:
            - trigger_condition: 'VAR_CONTAINS'
              trigger_variable_value: 'run-phpstan-core-ci'
              trigger_variable_key: 'BUDDY_RUN_PR_LABELS'
            - trigger_condition: 'VAR_CONTAINS'
              trigger_variable_value: 'run-latest-ci'
              trigger_variable_key: 'BUDDY_RUN_PR_LABELS'
            - trigger_condition: 'VAR_CONTAINS'
              trigger_variable_value: 'run-ssp-latest-ci'
              trigger_variable_key: 'BUDDY_RUN_PR_LABELS'
            - trigger_condition: 'VAR_IS'
              trigger_variable_key: 'BUDDY_EXECUTION_BRANCH'
              trigger_variable_value: 'master'
  actions:
      - action: 'Build Project'
        type: 'BUILD'
        main_service_name: 'post'
        docker_image_name: 'spryker/php'
        docker_image_tag: '8.2'
        execute_commands:
            - '.ci/snippet/PREPARE'
            - '.ci/snippet/REQUIRE composer config github-oauth.github.com ${GITHUB_TOKEN}'
            - '.ci/snippet/REQUIRE composer install --optimize-autoloader --no-interaction --prefer-install=auto'
            - 'SPRYKER_CURRENT_REGION=EU SPRYKER_DYNAMIC_STORE_MODE=true .ci/snippet/REQUIRE vendor/bin/install --no-ansi -r ci.code-generate'
            - '.ci/snippet/FINISH'
        services:
            - type: 'POSTGRE_SQL'
              version: '17'
              connection:
                  host: 'postgres'
                  user: 'postgres'
                  password: 'secret'
              volume_mappings: []
            - type: 'RABBIT_MQ'
              connection:
                  host: 'rabbitmq'
                  user: 'guest'
                  password: 'guest'
              volume_mappings: []
            - type: 'REDIS'
              connection:
                  host: 'redis'
              volume_mappings: []
        shell: 'BASH'
        run_next_parallel: false
      - action: 'PHP 8.3 PHPStan spryker/spryker [1/5]'
        type: 'BUILD'
        docker_image_name: 'spryker/php'
        docker_image_tag: '8.3'
        execute_commands:
            - '.ci/snippet/PREPARE'
            - '.ci/snippet/RUN vendor/bin/console --no-ansi code:phpstan -m Spryker.all -v -o 0,275'
            - '.ci/snippet/FINISH'
        shell: 'BASH'
        run_next_parallel: true
      - action: 'PHP 8.3 PHPStan spryker/spryker [2/5]'
        type: 'BUILD'
        docker_image_name: 'spryker/php'
        docker_image_tag: '8.3'
        execute_commands:
            - '.ci/snippet/PREPARE'
            - '.ci/snippet/RUN vendor/bin/console --no-ansi code:phpstan -m Spryker.all -v -o 275,275'
            - '.ci/snippet/FINISH'
        shell: 'BASH'
        run_next_parallel: true
      - action: 'PHP 8.3 PHPStan spryker/spryker [3/5]'
        type: 'BUILD'
        docker_image_name: 'spryker/php'
        docker_image_tag: '8.3'
        execute_commands:
            - '.ci/snippet/PREPARE'
            - '.ci/snippet/RUN vendor/bin/console --no-ansi code:phpstan -m Spryker.all -v -o 550,150'
            - '.ci/snippet/FINISH'
        shell: 'BASH'
        run_next_parallel: true
      - action: 'PHP 8.3 PHPStan spryker/spryker [4/5]'
        type: 'BUILD'
        docker_image_name: 'spryker/php'
        docker_image_tag: '8.3'
        execute_commands:
            - '.ci/snippet/PREPARE'
            - '.ci/snippet/RUN vendor/bin/console --no-ansi code:phpstan -m Spryker.all -v -o 700,300'
            - '.ci/snippet/FINISH'
        shell: 'BASH'
        run_next_parallel: true
      - action: 'PHP 8.3 PHPStan spryker/spryker [5/5]'
        type: 'BUILD'
        docker_image_name: 'spryker/php'
        docker_image_tag: '8.3'
        execute_commands:
            - '.ci/snippet/PREPARE'
            - '.ci/snippet/RUN vendor/bin/console --no-ansi code:phpstan -m Spryker.all -v -o 1000'
            - '.ci/snippet/FINISH'
        shell: 'BASH'
        run_next_parallel: true
      - action: 'PHP 8.3 PHPStan spryker/spryker feature'
        type: 'BUILD'
        docker_image_name: 'spryker/php'
        docker_image_tag: '8.3'
        execute_commands:
            - '.ci/snippet/PREPARE'
            - '.ci/snippet/RUN vendor/bin/console --no-ansi code:phpstan -m SprykerFeature.all -v'
            - '.ci/snippet/FINISH'
        shell: 'BASH'
        run_next_parallel: true
        trigger_conditions:
            - trigger_condition: 'VAR_CONTAINS'
              trigger_variable_value: 'run-ssp-latest-ci'
              trigger_variable_key: 'BUDDY_RUN_PR_LABELS'
      - action: 'PHP 8.3 PHPStan spryker/spryker-shop'
        type: 'BUILD'
        docker_image_name: 'spryker/php'
        docker_image_tag: '8.3'
        execute_commands:
            - '.ci/snippet/PREPARE'
            - '.ci/snippet/RUN vendor/bin/console --no-ansi code:phpstan -m SprykerShop.all -v'
            - '.ci/snippet/FINISH'
        shell: 'BASH'
        run_next_parallel: true
      - action: 'Master Job Slack Notification failure'
        type: 'BUILD'
        trigger_time: 'ON_FAILURE'
        docker_image_name: 'library/node'
        docker_image_tag: '18'
        variables:
            - key: 'PIPELINE_STATUS'
              value: 'FAILURE'
              type: 'VAR'
        execute_commands:
            - '.ci/snippet/SLACK_NOTIFICATIONS'
        setup_commands:
            - apt-get update && apt-get -y install jq
        shell: 'BASH'
        trigger_conditions:
            - trigger_condition: 'VAR_IS'
              trigger_variable_key: 'BUDDY_EXECUTION_BRANCH'
              trigger_variable_value: 'master'

- pipeline: 'PHPStan Validation / Prefer Lowest'
  events:
      - type: 'PUSH'
        refs:
            - 'refs/pull/*'
            - 'refs/heads/master'
      - type: 'PULL_REQUEST'
        events:
            - 'labeled'
        branches:
            - '*'
  terminate_stale_runs: true
  auto_clear_cache: true
  fail_on_prepare_env_warning: true
  concurrent_pipeline_runs: true
  clone_depth: 1
  resources: 'LARGE'
  trigger_conditions:
      - trigger_condition: OR
        trigger_operands:
            - trigger_condition: 'VAR_CONTAINS'
              trigger_variable_value: 'run-phpstan-core-ci'
              trigger_variable_key: 'BUDDY_RUN_PR_LABELS'
            - trigger_condition: 'VAR_CONTAINS'
              trigger_variable_value: 'run-latest-ci'
              trigger_variable_key: 'BUDDY_RUN_PR_LABELS'
            - trigger_condition: 'VAR_CONTAINS'
              trigger_variable_value: 'run-ssp-latest-ci'
              trigger_variable_key: 'BUDDY_RUN_PR_LABELS'
            - trigger_condition: 'VAR_IS'
              trigger_variable_key: 'BUDDY_EXECUTION_BRANCH'
              trigger_variable_value: 'master'
  actions:
      - action: 'Build Project'
        type: 'BUILD'
        main_service_name: 'post'
        docker_image_name: 'spryker/php'
        docker_image_tag: '8.2'
        execute_commands:
            - '.ci/snippet/PREPARE'
            - '.ci/snippet/REQUIRE composer config github-oauth.github.com ${GITHUB_TOKEN}'
            - '.ci/snippet/REQUIRE composer update --prefer-lowest --optimize-autoloader --no-interaction --prefer-install=auto'
            - '.ci/snippet/REQUIRE composer require --dev dereuromark/composer-prefer-lowest:dev-master --with-all-dependencies;'
            - 'SPRYKER_CURRENT_REGION=EU SPRYKER_DYNAMIC_STORE_MODE=true .ci/snippet/REQUIRE vendor/bin/install --no-ansi -r ci.code-generate'
            - '.ci/snippet/FINISH'
        services:
            - type: 'POSTGRE_SQL'
              version: '9.6'
              connection:
                  host: 'postgres'
                  user: 'postgres'
                  password: 'secret'
            - type: 'RABBIT_MQ'
              connection:
                  host: 'rabbitmq'
                  user: 'guest'
                  password: 'guest'
            - type: 'REDIS'
              connection:
                  host: 'redis'
        shell: 'BASH'
        run_next_parallel: false
      - action: 'PHP 8.2 PHPStan spryker/spryker [1/5]'
        type: 'BUILD'
        docker_image_name: 'spryker/php'
        docker_image_tag: '8.2'
        execute_commands:
            - '.ci/snippet/PREPARE'
            - '.ci/snippet/RUN vendor/bin/console --no-ansi code:phpstan -m Spryker.all -v -o 0,275'
            - '.ci/snippet/FINISH'
        shell: 'BASH'
        run_next_parallel: true
      - action: 'PHP 8.2 PHPStan spryker/spryker [2/5]'
        type: 'BUILD'
        docker_image_name: 'spryker/php'
        docker_image_tag: '8.2'
        execute_commands:
            - '.ci/snippet/PREPARE'
            - '.ci/snippet/RUN vendor/bin/console --no-ansi code:phpstan -m Spryker.all -v -o 275,275'
            - '.ci/snippet/FINISH'
        shell: 'BASH'
        run_next_parallel: true
      - action: 'PHP 8.2 PHPStan spryker/spryker [3/5]'
        type: 'BUILD'
        docker_image_name: 'spryker/php'
        docker_image_tag: '8.2'
        execute_commands:
            - '.ci/snippet/PREPARE'
            - '.ci/snippet/RUN vendor/bin/console --no-ansi code:phpstan -m Spryker.all -v -o 550,150'
            - '.ci/snippet/FINISH'
        shell: 'BASH'
        run_next_parallel: true
      - action: 'PHP 8.2 PHPStan spryker/spryker [4/5]'
        type: 'BUILD'
        docker_image_name: 'spryker/php'
        docker_image_tag: '8.2'
        execute_commands:
            - '.ci/snippet/PREPARE'
            - '.ci/snippet/RUN vendor/bin/console --no-ansi code:phpstan -m Spryker.all -v -o 700,200'
            - '.ci/snippet/FINISH'
        shell: 'BASH'
        run_next_parallel: true
      - action: 'PHP 8.2 PHPStan spryker/spryker [5/5]'
        type: 'BUILD'
        docker_image_name: 'spryker/php'
        docker_image_tag: '8.2'
        execute_commands:
            - '.ci/snippet/PREPARE'
            - '.ci/snippet/RUN vendor/bin/console --no-ansi code:phpstan -m Spryker.all -v -o 900'
            - '.ci/snippet/FINISH'
        shell: 'BASH'
        run_next_parallel: true
      - action: 'PHP 8.2 PHPStan spryker/spryker feature'
        type: 'BUILD'
        docker_image_name: 'spryker/php'
        docker_image_tag: '8.2'
        execute_commands:
            - '.ci/snippet/PREPARE'
            - '.ci/snippet/RUN vendor/bin/console --no-ansi code:phpstan -m SprykerFeature.all -v'
            - '.ci/snippet/FINISH'
        shell: 'BASH'
        run_next_parallel: true
        trigger_conditions:
            - trigger_condition: 'VAR_CONTAINS'
              trigger_variable_value: 'run-ssp-latest-ci'
              trigger_variable_key: 'BUDDY_RUN_PR_LABELS'
      - action: 'PHP 8.2 PHPStan spryker/spryker-shop'
        type: 'BUILD'
        docker_image_name: 'spryker/php'
        docker_image_tag: '8.2'
        execute_commands:
            - '.ci/snippet/PREPARE'
            - '.ci/snippet/RUN vendor/bin/console --no-ansi code:phpstan -m SprykerShop.all -v'
            - '.ci/snippet/FINISH'
        shell: 'BASH'
      - action: 'Master Job Slack Notification failure'
        type: 'BUILD'
        trigger_time: 'ON_FAILURE'
        docker_image_name: 'library/node'
        docker_image_tag: '18'
        variables:
            - key: 'PIPELINE_STATUS'
              value: 'FAILURE'
              type: 'VAR'
        execute_commands:
            - '.ci/snippet/SLACK_NOTIFICATIONS'
        setup_commands:
            - apt-get update && apt-get -y install jq
        shell: 'BASH'
        trigger_conditions:
            - trigger_condition: 'VAR_IS'
              trigger_variable_key: 'BUDDY_EXECUTION_BRANCH'
              trigger_variable_value: 'master'

- pipeline: 'Docker / Alpine / PHP 8.2 / MariaDB / Functional Tests / Dynamic Store OFF'
  events:
      - type: 'PUSH'
        refs:
            - 'refs/pull/*'
            - 'refs/heads/master'
      - type: 'PULL_REQUEST'
        events:
            - 'labeled'
        branches:
            - '*'
  trigger_conditions:
      - trigger_condition: OR
        trigger_operands:
            - trigger_condition: 'VAR_CONTAINS'
              trigger_variable_value: 'run-compatibility-ci'
              trigger_variable_key: 'BUDDY_RUN_PR_LABELS'
            - trigger_condition: 'VAR_CONTAINS'
              trigger_variable_value: 'run-ssp-compatibility-ci'
              trigger_variable_key: 'BUDDY_RUN_PR_LABELS'
            - trigger_condition: 'VAR_IS'
              trigger_variable_key: 'BUDDY_EXECUTION_BRANCH'
              trigger_variable_value: 'master'
  terminate_stale_runs: true
  auto_clear_cache: true
  fail_on_prepare_env_warning: true
  concurrent_pipeline_runs: true
  clone_depth: 1
  resources: 'NANO'
  actions:
      - action: 'Run tests'
        type: 'NATIVE_BUILD_DOCKER_CLI'
        commands:
            - '.ci/snippet/PREPARE'
            - '.ci/snippet/REQUIRE docker/sdk boot -v deploy.ci.functional.mariadb.dynamic-store-off.yml'
            - '.ci/snippet/REQUIRE docker/sdk up -t'
            - '.ci/snippet/RUN docker/sdk testing composer dump-autoload -o -a --apcu'
            - |
                if [[ "$BUDDY_RUN_PR_LABELS" == *"run-compatibility-ci"* || "$BUDDY_EXECUTION_BRANCH" == "master" ]]; then
                  .ci/snippet/RUN docker/sdk testing codecept run --no-ansi -c codeception.functional.stage0.yml
                  .ci/snippet/RUN docker/sdk testing codecept run --no-ansi -c codeception.functional.stage1.yml
                  .ci/snippet/RUN docker/sdk testing codecept run --no-ansi -c codeception.functional.yml
                  .ci/snippet/RUN docker/sdk testing codecept run --no-ansi -c codeception.functional2.yml
                  .ci/snippet/RUN docker/sdk testing codecept run --no-ansi -c codeception.functional.stage2.yml
                  .ci/snippet/RUN docker/sdk testing codecept run --no-ansi -c codeception.functional.glue.yml
                fi
            - |
                if [[ "$BUDDY_RUN_PR_LABELS" == *"run-ssp-compatibility-ci"* || "$BUDDY_EXECUTION_BRANCH" == "master" ]]; then
                  .ci/snippet/RUN docker/sdk testing codecept run --no-ansi -c codeception.functional.feature.yml
                fi
            - '.ci/snippet/FINISH'
        run_next_parallel: true
        variables:
            - key: 'SPRYKER_PLATFORM_IMAGE'
              value: 'spryker/php:8.2'
              type: 'VAR'
            - key: 'TRAVIS'
              value: '1'
              type: 'VAR'
        sync_paths:
            - pipeline_path: '/'
              vm_path: '/home/ubuntu/build'
              direction: 'PIPELINE_TO_VM'
        docker_layer_caching_scope: 'ACTION'
        instance_type: 'GENERAL_MEDIUM'
      - action: 'Master Job Slack Notification failure'
        type: 'BUILD'
        trigger_time: 'ON_FAILURE'
        docker_image_name: 'library/node'
        docker_image_tag: '18'
        variables:
            - key: 'PIPELINE_STATUS'
              value: 'FAILURE'
              type: 'VAR'
        execute_commands:
            - '.ci/snippet/SLACK_NOTIFICATIONS'
        setup_commands:
            - apt-get update && apt-get -y install jq
        shell: 'BASH'
        trigger_conditions:
            - trigger_condition: 'VAR_IS'
              trigger_variable_key: 'BUDDY_EXECUTION_BRANCH'
              trigger_variable_value: 'master'

- pipeline: 'Docker / Alpine / PHP 8.2 / MariaDB / Functional Tests'
  events:
      - type: 'PUSH'
        refs:
            - 'refs/pull/*'
            - 'refs/heads/master'
      - type: 'PULL_REQUEST'
        events:
            - 'labeled'
        branches:
            - '*'
  trigger_conditions:
      - trigger_condition: OR
        trigger_operands:
            - trigger_condition: 'VAR_CONTAINS'
              trigger_variable_value: 'run-compatibility-ci'
              trigger_variable_key: 'BUDDY_RUN_PR_LABELS'
            - trigger_condition: 'VAR_CONTAINS'
              trigger_variable_value: 'run-ssp-compatibility-ci'
              trigger_variable_key: 'BUDDY_RUN_PR_LABELS'
            - trigger_condition: 'VAR_IS'
              trigger_variable_key: 'BUDDY_EXECUTION_BRANCH'
              trigger_variable_value: 'master'
  terminate_stale_runs: true
  auto_clear_cache: true
  fail_on_prepare_env_warning: true
  concurrent_pipeline_runs: true
  clone_depth: 1
  resources: 'NANO'
  actions:
      - action: 'Run tests'
        type: 'NATIVE_BUILD_DOCKER_CLI'
        commands:
            - '.ci/snippet/PREPARE'
            - '.ci/snippet/REQUIRE docker/sdk boot -v deploy.ci.functional.mariadb.yml'
            - '.ci/snippet/REQUIRE docker/sdk up -t'
            - '.ci/snippet/RUN docker/sdk testing composer dump-autoload -o -a --apcu'
            - |
                if [[ "$BUDDY_RUN_PR_LABELS" == *"run-compatibility-ci"* || "$BUDDY_EXECUTION_BRANCH" == "master" ]]; then
                  .ci/snippet/RUN docker/sdk testing codecept run --no-ansi -c codeception.functional.stage0.yml
                  .ci/snippet/RUN docker/sdk testing codecept run --no-ansi -c codeception.functional.stage1.yml
                  .ci/snippet/RUN docker/sdk testing codecept run --no-ansi -c codeception.functional.yml
                  .ci/snippet/RUN docker/sdk testing codecept run --no-ansi -c codeception.functional2.yml
                  .ci/snippet/RUN docker/sdk testing codecept run --no-ansi -c codeception.functional.stage2.yml
                  .ci/snippet/RUN docker/sdk testing codecept run --no-ansi -c codeception.functional.glue.yml
                fi
            - |
                if [[ "$BUDDY_RUN_PR_LABELS" == *"run-ssp-compatibility-ci"* || "$BUDDY_EXECUTION_BRANCH" == "master" ]]; then
                  .ci/snippet/RUN docker/sdk testing codecept run --no-ansi -c codeception.functional.feature.yml
                fi
            - '.ci/snippet/FINISH'
        run_next_parallel: true
        variables:
            - key: 'SPRYKER_CURRENT_REGION'
              value: 'EU'
              type: 'VAR'
            - key: 'SPRYKER_DYNAMIC_STORE_MODE'
              value: 'true'
              type: 'VAR'
            - key: 'SPRYKER_PLATFORM_IMAGE'
              value: 'spryker/php:8.2'
              type: 'VAR'
            - key: 'TRAVIS'
              value: '1'
              type: 'VAR'
        sync_paths:
            - pipeline_path: '/'
              vm_path: '/home/ubuntu/build'
              direction: 'PIPELINE_TO_VM'
        docker_layer_caching_scope: 'ACTION'
        instance_type: 'GENERAL_MEDIUM'
      - action: 'Master Job Slack Notification failure'
        type: 'BUILD'
        trigger_time: 'ON_FAILURE'
        docker_image_name: 'library/node'
        docker_image_tag: '18'
        variables:
            - key: 'PIPELINE_STATUS'
              value: 'FAILURE'
              type: 'VAR'
        execute_commands:
            - '.ci/snippet/SLACK_NOTIFICATIONS'
        setup_commands:
            - apt-get update && apt-get -y install jq
        shell: 'BASH'
        trigger_conditions:
            - trigger_condition: 'VAR_IS'
              trigger_variable_key: 'BUDDY_EXECUTION_BRANCH'
              trigger_variable_value: 'master'

- pipeline: 'Docker / Alpine / PHP 8.2 / PostgreSQL / Functional Tests / Dynamic Store OFF'
  events:
      - type: 'PUSH'
        refs:
            - 'refs/pull/*'
            - 'refs/heads/master'
      - type: 'PULL_REQUEST'
        events:
            - 'labeled'
        branches:
            - '*'
  terminate_stale_runs: true
  auto_clear_cache: true
  fail_on_prepare_env_warning: true
  concurrent_pipeline_runs: true
  clone_depth: 1
  resources: 'NANO'
  trigger_conditions:
      - trigger_condition: OR
        trigger_operands:
            - trigger_condition: 'VAR_CONTAINS'
              trigger_variable_value: 'run-compatibility-ci'
              trigger_variable_key: 'BUDDY_RUN_PR_LABELS'
            - trigger_condition: 'VAR_CONTAINS'
              trigger_variable_value: 'run-ssp-compatibility-ci'
              trigger_variable_key: 'BUDDY_RUN_PR_LABELS'
            - trigger_condition: 'VAR_IS'
              trigger_variable_key: 'BUDDY_EXECUTION_BRANCH'
              trigger_variable_value: 'master'
  actions:
      - action: 'Run tests'
        type: 'NATIVE_BUILD_DOCKER_CLI'
        commands:
            - '.ci/snippet/PREPARE'
            - '.ci/snippet/REQUIRE docker/sdk boot -v deploy.ci.functional.dynamic-store-off.yml'
            - '.ci/snippet/REQUIRE docker/sdk up -t'
            - '.ci/snippet/RUN docker/sdk testing composer dump-autoload -o -a --apcu'
            - |
                if [[ "$BUDDY_RUN_PR_LABELS" == *"run-compatibility-ci"* || "$BUDDY_EXECUTION_BRANCH" == "master" ]]; then
                  .ci/snippet/RUN docker/sdk testing codecept run --no-ansi -c codeception.functional.stage0.yml
                  .ci/snippet/RUN docker/sdk testing codecept run --no-ansi -c codeception.functional.stage1.yml
                  .ci/snippet/RUN docker/sdk testing codecept run --no-ansi -c codeception.functional.yml
                  .ci/snippet/RUN docker/sdk testing codecept run --no-ansi -c codeception.functional2.yml
                  .ci/snippet/RUN docker/sdk testing codecept run --no-ansi -c codeception.functional.stage2.yml
                  .ci/snippet/RUN docker/sdk testing codecept run --no-ansi -c codeception.functional.glue.yml
                fi
            - |
                if [[ "$BUDDY_RUN_PR_LABELS" == *"run-ssp-compatibility-ci"* || "$BUDDY_EXECUTION_BRANCH" == "master" ]]; then
                  .ci/snippet/RUN docker/sdk testing codecept run --no-ansi -c codeception.functional.feature.yml
                fi
            - '.ci/snippet/FINISH'
        run_next_parallel: true
        variables:
            - key: 'SPRYKER_PLATFORM_IMAGE'
              value: 'spryker/php:8.2'
              type: 'VAR'
            - key: 'TRAVIS'
              value: '1'
              type: 'VAR'
        sync_paths:
            - pipeline_path: '/'
              vm_path: '/home/ubuntu/build'
              direction: 'PIPELINE_TO_VM'
        docker_layer_caching_scope: 'ACTION'
        instance_type: 'GENERAL_MEDIUM'
      - action: 'Master Job Slack Notification failure'
        type: 'BUILD'
        trigger_time: 'ON_FAILURE'
        docker_image_name: 'library/node'
        docker_image_tag: '18'
        variables:
            - key: 'PIPELINE_STATUS'
              value: 'FAILURE'
              type: 'VAR'
        execute_commands:
            - '.ci/snippet/SLACK_NOTIFICATIONS'
        setup_commands:
            - apt-get update && apt-get -y install jq
        shell: 'BASH'
        trigger_conditions:
            - trigger_condition: 'VAR_IS'
              trigger_variable_key: 'BUDDY_EXECUTION_BRANCH'
              trigger_variable_value: 'master'

- pipeline: 'Docker / Alpine / PHP 8.2 / PostgreSQL / Functional Tests'
  events:
      - type: 'PUSH'
        refs:
            - 'refs/pull/*'
            - 'refs/heads/master'
      - type: 'PULL_REQUEST'
        events:
            - 'labeled'
        branches:
            - '*'
  trigger_conditions:
      - trigger_condition: OR
        trigger_operands:
            - trigger_condition: 'VAR_CONTAINS'
              trigger_variable_value: 'run-compatibility-ci'
              trigger_variable_key: 'BUDDY_RUN_PR_LABELS'
            - trigger_condition: 'VAR_CONTAINS'
              trigger_variable_value: 'run-ssp-compatibility-ci'
              trigger_variable_key: 'BUDDY_RUN_PR_LABELS'
            - trigger_condition: 'VAR_IS'
              trigger_variable_key: 'BUDDY_EXECUTION_BRANCH'
              trigger_variable_value: 'master'
  terminate_stale_runs: true
  auto_clear_cache: true
  fail_on_prepare_env_warning: true
  concurrent_pipeline_runs: true
  clone_depth: 1
  resources: 'NANO'
  actions:
      - action: 'Run tests'
        type: 'NATIVE_BUILD_DOCKER_CLI'
        commands:
            - '.ci/snippet/PREPARE'
            - '.ci/snippet/REQUIRE docker/sdk boot -v deploy.ci.functional.yml'
            - '.ci/snippet/REQUIRE docker/sdk up -t'
            - '.ci/snippet/RUN docker/sdk testing composer dump-autoload -o -a --apcu'
            - |
                if [[ "$BUDDY_RUN_PR_LABELS" == *"run-compatibility-ci"* || "$BUDDY_EXECUTION_BRANCH" == "master" ]]; then
                  .ci/snippet/RUN docker/sdk testing codecept run --no-ansi -c codeception.functional.stage0.yml
                  .ci/snippet/RUN docker/sdk testing codecept run --no-ansi -c codeception.functional.stage1.yml
                  .ci/snippet/RUN docker/sdk testing codecept run --no-ansi -c codeception.functional.yml
                  .ci/snippet/RUN docker/sdk testing codecept run --no-ansi -c codeception.functional2.yml
                  .ci/snippet/RUN docker/sdk testing codecept run --no-ansi -c codeception.functional.stage2.yml
                  .ci/snippet/RUN docker/sdk testing codecept run --no-ansi -c codeception.functional.glue.yml
                fi
            - |
                if [[ "$BUDDY_RUN_PR_LABELS" == *"run-ssp-compatibility-ci"* || "$BUDDY_EXECUTION_BRANCH" == "master" ]]; then
                  .ci/snippet/RUN docker/sdk testing codecept run --no-ansi -c codeception.functional.feature.yml
                fi
            - '.ci/snippet/FINISH'
        run_next_parallel: true
        variables:
            - key: 'SPRYKER_CURRENT_REGION'
              value: 'EU'
              type: 'VAR'
            - key: 'SPRYKER_DYNAMIC_STORE_MODE'
              value: 'true'
              type: 'VAR'
            - key: 'SPRYKER_PLATFORM_IMAGE'
              value: 'spryker/php:8.2'
              type: 'VAR'
            - key: 'TRAVIS'
              value: '1'
              type: 'VAR'
        sync_paths:
            - pipeline_path: '/'
              vm_path: '/home/ubuntu/build'
              direction: 'PIPELINE_TO_VM'
        docker_layer_caching_scope: 'ACTION'
        instance_type: 'GENERAL_MEDIUM'
      - action: 'Master Job Slack Notification failure'
        type: 'BUILD'
        trigger_time: 'ON_FAILURE'
        docker_image_name: 'library/node'
        docker_image_tag: '18'
        variables:
            - key: 'PIPELINE_STATUS'
              value: 'FAILURE'
              type: 'VAR'
        execute_commands:
            - '.ci/snippet/SLACK_NOTIFICATIONS'
        setup_commands:
            - apt-get update && apt-get -y install jq
        shell: 'BASH'
        trigger_conditions:
            - trigger_condition: 'VAR_IS'
              trigger_variable_key: 'BUDDY_EXECUTION_BRANCH'
              trigger_variable_value: 'master'

- pipeline: 'Docker / Alpine / PHP 8.2 / MariaDB / Acceptance / Dynamic Store OFF'
  events:
      - type: 'PUSH'
        refs:
            - 'refs/pull/*'
            - 'refs/heads/master'
      - type: 'PULL_REQUEST'
        events:
            - 'labeled'
        branches:
            - '*'
  trigger_conditions:
      - trigger_condition: OR
        trigger_operands:
            - trigger_condition: 'VAR_CONTAINS'
              trigger_variable_value: 'run-compatibility-ci'
              trigger_variable_key: 'BUDDY_RUN_PR_LABELS'
            - trigger_condition: 'VAR_IS'
              trigger_variable_key: 'BUDDY_EXECUTION_BRANCH'
              trigger_variable_value: 'master'
  terminate_stale_runs: true
  auto_clear_cache: true
  fail_on_prepare_env_warning: true
  concurrent_pipeline_runs: true
  clone_depth: 1
  resources: 'NANO'
  actions:
      - action: 'Run tests'
        type: 'NATIVE_BUILD_DOCKER_CLI'
        commands:
            - '.ci/snippet/PREPARE'
            - '.ci/snippet/REQUIRE docker/sdk boot -v deploy.ci.acceptance.mariadb.dynamic-store-off.yml'
            - '.ci/snippet/REQUIRE docker/sdk up -t'
            - '.ci/snippet/RUN docker/sdk testing composer dump-autoload -o -a --apcu'
            - '.ci/snippet/RUN docker/sdk testing codecept run --no-ansi -c codeception.acceptance.yml'
            - '.ci/snippet/RUN docker/sdk testing codecept fixtures'
            - '.ci/snippet/RUN docker/sdk testing console queue:worker:start --stop-when-empty'
            - '.ci/snippet/RUN docker/sdk testing codecept run --no-ansi -c codeception.api.yml'
            - '.ci/snippet/FINISH'
        run_next_parallel: true
        variables:
            - key: 'SPRYKER_PLATFORM_IMAGE'
              value: 'spryker/php:8.2'
              type: 'VAR'
            - key: 'TRAVIS'
              value: '1'
              type: 'VAR'
        sync_paths:
            - pipeline_path: '/'
              vm_path: '/home/ubuntu/build'
              direction: 'PIPELINE_TO_VM'
        docker_layer_caching_scope: 'ACTION'
        instance_type: 'GENERAL_MEDIUM'
      - action: 'Master Job Slack Notification failure'
        type: 'BUILD'
        trigger_time: 'ON_FAILURE'
        docker_image_name: 'library/node'
        docker_image_tag: '18'
        variables:
            - key: 'PIPELINE_STATUS'
              value: 'FAILURE'
              type: 'VAR'
        execute_commands:
            - '.ci/snippet/SLACK_NOTIFICATIONS'
        setup_commands:
            - apt-get update && apt-get -y install jq
        shell: 'BASH'
        trigger_conditions:
            - trigger_condition: 'VAR_IS'
              trigger_variable_key: 'BUDDY_EXECUTION_BRANCH'
              trigger_variable_value: 'master'

- pipeline: 'Docker / Alpine / PHP 8.2 / MariaDB / Acceptance'
  events:
      - type: 'PUSH'
        refs:
            - 'refs/pull/*'
            - 'refs/heads/master'
      - type: 'PULL_REQUEST'
        events:
            - 'labeled'
        branches:
            - '*'
  terminate_stale_runs: true
  auto_clear_cache: true
  fail_on_prepare_env_warning: true
  concurrent_pipeline_runs: true
  clone_depth: 1
  resources: 'NANO'
  trigger_conditions:
      - trigger_condition: OR
        trigger_operands:
            - trigger_condition: 'VAR_CONTAINS'
              trigger_variable_value: 'run-compatibility-ci'
              trigger_variable_key: 'BUDDY_RUN_PR_LABELS'
            - trigger_condition: 'VAR_IS'
              trigger_variable_key: 'BUDDY_EXECUTION_BRANCH'
              trigger_variable_value: 'master'
  actions:
      - action: 'Run tests'
        type: 'NATIVE_BUILD_DOCKER_CLI'
        commands:
            - '.ci/snippet/PREPARE'
            - '.ci/snippet/REQUIRE docker/sdk boot -v deploy.ci.acceptance.mariadb.yml'
            - '.ci/snippet/REQUIRE docker/sdk up -t'
            - '.ci/snippet/RUN docker/sdk testing composer dump-autoload -o -a --apcu'
            - '.ci/snippet/RUN docker/sdk testing codecept run --no-ansi -c codeception.acceptance.yml'
            - '.ci/snippet/RUN docker/sdk testing codecept fixtures'
            - '.ci/snippet/RUN docker/sdk testing console queue:worker:start --stop-when-empty'
            - '.ci/snippet/RUN docker/sdk testing codecept run --no-ansi -c codeception.api.yml'
            - '.ci/snippet/FINISH'
        run_next_parallel: true
        variables:
            - key: 'SPRYKER_CURRENT_REGION'
              value: 'EU'
              type: 'VAR'
            - key: 'SPRYKER_DYNAMIC_STORE_MODE'
              value: 'true'
              type: 'VAR'
            - key: 'SPRYKER_PLATFORM_IMAGE'
              value: 'spryker/php:8.2'
              type: 'VAR'
            - key: 'TRAVIS'
              value: '1'
              type: 'VAR'
        sync_paths:
            - pipeline_path: '/'
              vm_path: '/home/ubuntu/build'
              direction: 'PIPELINE_TO_VM'
        docker_layer_caching_scope: 'ACTION'
        instance_type: 'GENERAL_MEDIUM'
      - action: 'Master Job Slack Notification failure'
        type: 'BUILD'
        trigger_time: 'ON_FAILURE'
        docker_image_name: 'library/node'
        docker_image_tag: '18'
        variables:
            - key: 'PIPELINE_STATUS'
              value: 'FAILURE'
              type: 'VAR'
        execute_commands:
            - '.ci/snippet/SLACK_NOTIFICATIONS'
        setup_commands:
            - apt-get update && apt-get -y install jq
        shell: 'BASH'
        trigger_conditions:
            - trigger_condition: 'VAR_IS'
              trigger_variable_key: 'BUDDY_EXECUTION_BRANCH'
              trigger_variable_value: 'master'

- pipeline: 'Docker / Alpine / PHP 8.2 / PostgreSQL / Acceptance / Dynamic Store OFF'
  events:
      - type: 'PUSH'
        refs:
            - 'refs/pull/*'
            - 'refs/heads/master'
      - type: 'PULL_REQUEST'
        events:
            - 'labeled'
        branches:
            - '*'
  trigger_conditions:
      - trigger_condition: OR
        trigger_operands:
            - trigger_condition: 'VAR_CONTAINS'
              trigger_variable_value: 'run-compatibility-ci'
              trigger_variable_key: 'BUDDY_RUN_PR_LABELS'
            - trigger_condition: 'VAR_IS'
              trigger_variable_key: 'BUDDY_EXECUTION_BRANCH'
              trigger_variable_value: 'master'
  terminate_stale_runs: true
  auto_clear_cache: true
  fail_on_prepare_env_warning: true
  concurrent_pipeline_runs: true
  clone_depth: 1
  resources: 'NANO'
  actions:
      - action: 'Run tests'
        type: 'NATIVE_BUILD_DOCKER_CLI'
        commands:
            - '.ci/snippet/PREPARE'
            - '.ci/snippet/REQUIRE docker/sdk boot -v deploy.ci.acceptance.dynamic-store-off.yml'
            - '.ci/snippet/REQUIRE docker/sdk up -t'
            - '.ci/snippet/RUN docker/sdk testing composer dump-autoload -o -a --apcu'
            - '.ci/snippet/RUN docker/sdk testing codecept run --no-ansi -c codeception.acceptance.yml'
            - '.ci/snippet/RUN docker/sdk testing codecept fixtures'
            - '.ci/snippet/RUN docker/sdk testing console queue:worker:start --stop-when-empty'
            - '.ci/snippet/RUN docker/sdk testing codecept run --no-ansi -c codeception.api.yml'
            - '.ci/snippet/FINISH'
        run_next_parallel: true
        variables:
            - key: 'SPRYKER_PLATFORM_IMAGE'
              value: 'spryker/php:8.2'
              type: 'VAR'
            - key: 'TRAVIS'
              value: '1'
              type: 'VAR'
        sync_paths:
            - pipeline_path: '/'
              vm_path: '/home/ubuntu/build'
              direction: 'PIPELINE_TO_VM'
        docker_layer_caching_scope: 'ACTION'
        instance_type: 'GENERAL_MEDIUM'
      - action: 'Master Job Slack Notification failure'
        type: 'BUILD'
        trigger_time: 'ON_FAILURE'
        docker_image_name: 'library/node'
        docker_image_tag: '18'
        variables:
            - key: 'PIPELINE_STATUS'
              value: 'FAILURE'
              type: 'VAR'
        execute_commands:
            - '.ci/snippet/SLACK_NOTIFICATIONS'
        setup_commands:
            - apt-get update && apt-get -y install jq
        shell: 'BASH'
        trigger_conditions:
            - trigger_condition: 'VAR_IS'
              trigger_variable_key: 'BUDDY_EXECUTION_BRANCH'
              trigger_variable_value: 'master'

- pipeline: 'Docker / Alpine / PHP 8.2 / PostgreSQL / Acceptance'
  events:
      - type: 'PUSH'
        refs:
            - 'refs/pull/*'
            - 'refs/heads/master'
      - type: 'PULL_REQUEST'
        events:
            - 'labeled'
        branches:
            - '*'
  trigger_conditions:
      - trigger_condition: OR
        trigger_operands:
            - trigger_condition: 'VAR_CONTAINS'
              trigger_variable_value: 'run-compatibility-ci'
              trigger_variable_key: 'BUDDY_RUN_PR_LABELS'
            - trigger_condition: 'VAR_IS'
              trigger_variable_key: 'BUDDY_EXECUTION_BRANCH'
              trigger_variable_value: 'master'
  terminate_stale_runs: true
  auto_clear_cache: true
  fail_on_prepare_env_warning: true
  concurrent_pipeline_runs: true
  clone_depth: 1
  resources: 'NANO'
  actions:
      - action: 'Run tests'
        type: 'NATIVE_BUILD_DOCKER_CLI'
        commands:
            - '.ci/snippet/PREPARE'
            - '.ci/snippet/REQUIRE docker/sdk boot -v deploy.ci.acceptance.yml'
            - '.ci/snippet/REQUIRE docker/sdk up -t'
            - '.ci/snippet/RUN docker/sdk testing composer dump-autoload -o -a --apcu'
            - '.ci/snippet/RUN docker/sdk testing codecept run --no-ansi -c codeception.acceptance.yml'
            - '.ci/snippet/RUN docker/sdk testing codecept fixtures'
            - '.ci/snippet/RUN docker/sdk testing console queue:worker:start --stop-when-empty'
            - '.ci/snippet/RUN docker/sdk testing codecept run --no-ansi -c codeception.api.yml'
            - '.ci/snippet/FINISH'
        run_next_parallel: true
        variables:
            - key: 'SPRYKER_CURRENT_REGION'
              value: 'EU'
              type: 'VAR'
            - key: 'SPRYKER_DYNAMIC_STORE_MODE'
              value: 'true'
              type: 'VAR'
            - key: 'SPRYKER_PLATFORM_IMAGE'
              value: 'spryker/php:8.2'
              type: 'VAR'
            - key: 'TRAVIS'
              value: '1'
              type: 'VAR'
        sync_paths:
            - pipeline_path: '/'
              vm_path: '/home/ubuntu/build'
              direction: 'PIPELINE_TO_VM'
        docker_layer_caching_scope: 'ACTION'
        instance_type: 'GENERAL_MEDIUM'
      - action: 'Master Job Slack Notification failure'
        type: 'BUILD'
        trigger_time: 'ON_FAILURE'
        docker_image_name: 'library/node'
        docker_image_tag: '18'
        variables:
            - key: 'PIPELINE_STATUS'
              value: 'FAILURE'
              type: 'VAR'
        execute_commands:
            - '.ci/snippet/SLACK_NOTIFICATIONS'
        setup_commands:
            - apt-get update && apt-get -y install jq
        shell: 'BASH'
        trigger_conditions:
            - trigger_condition: 'VAR_IS'
              trigger_variable_key: 'BUDDY_EXECUTION_BRANCH'
              trigger_variable_value: 'master'

- pipeline: 'Docker / Alpine / PHP 8.3 / MariaDB / Functional Tests / Dynamic Store OFF'
  events:
      - type: 'PUSH'
        refs:
            - 'refs/pull/*'
            - 'refs/heads/master'
      - type: 'PULL_REQUEST'
        events:
            - 'labeled'
        branches:
            - '*'
  trigger_conditions:
      - trigger_condition: OR
        trigger_operands:
            - trigger_condition: 'VAR_CONTAINS'
              trigger_variable_value: 'run-compatibility-ci'
              trigger_variable_key: 'BUDDY_RUN_PR_LABELS'
            - trigger_condition: 'VAR_CONTAINS'
              trigger_variable_value: 'run-ssp-compatibility-ci'
              trigger_variable_key: 'BUDDY_RUN_PR_LABELS'
            - trigger_condition: 'VAR_IS'
              trigger_variable_key: 'BUDDY_EXECUTION_BRANCH'
              trigger_variable_value: 'master'
  terminate_stale_runs: true
  auto_clear_cache: true
  fail_on_prepare_env_warning: true
  concurrent_pipeline_runs: true
  clone_depth: 1
  resources: 'NANO'
  actions:
      - action: 'Run tests'
        type: 'NATIVE_BUILD_DOCKER_CLI'
        commands:
            - '.ci/snippet/PREPARE'
            - '.ci/snippet/REQUIRE docker/sdk boot -v deploy.ci.functional.mariadb.dynamic-store-off.yml'
            - '.ci/snippet/REQUIRE docker/sdk up -t'
            - '.ci/snippet/RUN docker/sdk testing composer dump-autoload -o -a --apcu'
            - |
                if [[ "$BUDDY_RUN_PR_LABELS" == *"run-compatibility-ci"* || "$BUDDY_EXECUTION_BRANCH" == "master" ]]; then
                  .ci/snippet/RUN docker/sdk testing codecept run --no-ansi -c codeception.functional.stage0.yml
                  .ci/snippet/RUN docker/sdk testing codecept run --no-ansi -c codeception.functional.stage1.yml
                  .ci/snippet/RUN docker/sdk testing codecept run --no-ansi -c codeception.functional.yml
                  .ci/snippet/RUN docker/sdk testing codecept run --no-ansi -c codeception.functional2.yml
                  .ci/snippet/RUN docker/sdk testing codecept run --no-ansi -c codeception.functional.stage2.yml
                  .ci/snippet/RUN docker/sdk testing codecept run --no-ansi -c codeception.functional.glue.yml
                fi
            - |
                if [[ "$BUDDY_RUN_PR_LABELS" == *"run-ssp-compatibility-ci"* || "$BUDDY_EXECUTION_BRANCH" == "master" ]]; then
                  .ci/snippet/RUN docker/sdk testing codecept run --no-ansi -c codeception.functional.feature.yml
                fi
            - '.ci/snippet/FINISH'
        run_next_parallel: true
        variables:
            - key: 'SPRYKER_PLATFORM_IMAGE'
              value: 'spryker/php:8.3'
              type: 'VAR'
            - key: 'TRAVIS'
              value: '1'
              type: 'VAR'
        sync_paths:
            - pipeline_path: '/'
              vm_path: '/home/ubuntu/build'
              direction: 'PIPELINE_TO_VM'
        docker_layer_caching_scope: 'ACTION'
        instance_type: 'GENERAL_MEDIUM'
      - action: 'Master Job Slack Notification failure'
        type: 'BUILD'
        trigger_time: 'ON_FAILURE'
        docker_image_name: 'library/node'
        docker_image_tag: '18'
        variables:
            - key: 'PIPELINE_STATUS'
              value: 'FAILURE'
              type: 'VAR'
        execute_commands:
            - '.ci/snippet/SLACK_NOTIFICATIONS'
        setup_commands:
            - apt-get update && apt-get -y install jq
        shell: 'BASH'
        trigger_conditions:
            - trigger_condition: 'VAR_IS'
              trigger_variable_key: 'BUDDY_EXECUTION_BRANCH'
              trigger_variable_value: 'master'

- pipeline: '[run-functional-ci] PHP 8.3 / MariaDB / Functional Tests'
  events:
      - type: 'PUSH'
        refs:
            - 'refs/pull/*'
            - 'refs/heads/master'
      - type: 'PULL_REQUEST'
        events:
            - 'labeled'
        branches:
            - '*'
  trigger_conditions:
      - trigger_condition: OR
        trigger_operands:
            - trigger_condition: 'VAR_CONTAINS'
              trigger_variable_value: 'run-functional-ci'
              trigger_variable_key: 'BUDDY_RUN_PR_LABELS'
            - trigger_condition: 'VAR_CONTAINS'
              trigger_variable_value: 'run-latest-ci'
              trigger_variable_key: 'BUDDY_RUN_PR_LABELS'
            - trigger_condition: 'VAR_CONTAINS'
              trigger_variable_value: 'run-ssp-latest-ci'
              trigger_variable_key: 'BUDDY_RUN_PR_LABELS'
            - trigger_condition: 'VAR_IS'
              trigger_variable_key: 'BUDDY_EXECUTION_BRANCH'
              trigger_variable_value: 'master'
  terminate_stale_runs: true
  auto_clear_cache: true
  fail_on_prepare_env_warning: true
  concurrent_pipeline_runs: true
  clone_depth: 1
  resources: 'NANO'
  actions:
      - action: 'Run tests'
        type: 'NATIVE_BUILD_DOCKER_CLI'
        commands:
            - '.ci/snippet/PREPARE'
            - '.ci/snippet/REQUIRE docker/sdk boot -v deploy.ci.functional.mariadb.yml'
            - '.ci/snippet/REQUIRE docker/sdk up -t'
            - '.ci/snippet/RUN docker/sdk testing composer dump-autoload -o -a --apcu'
            - |
                if [[ "$BUDDY_RUN_PR_LABELS" == *"run-latest-ci"* || "$BUDDY_RUN_PR_LABELS" == *"run-functional-ci"* || "$BUDDY_EXECUTION_BRANCH" == "master" ]]; then
                  .ci/snippet/RUN docker/sdk testing codecept run --no-ansi -c codeception.functional.stage0.yml
                  .ci/snippet/RUN docker/sdk testing codecept run --no-ansi -c codeception.functional.stage1.yml
                  .ci/snippet/RUN docker/sdk testing codecept run --no-ansi -c codeception.functional.yml
                  .ci/snippet/RUN docker/sdk testing codecept run --no-ansi -c codeception.functional2.yml
                  .ci/snippet/RUN docker/sdk testing codecept run --no-ansi -c codeception.functional.stage2.yml
                  .ci/snippet/RUN docker/sdk testing codecept run --no-ansi -c codeception.functional.glue.yml
                fi
            - |
                if [[ "$BUDDY_RUN_PR_LABELS" == *"run-ssp-latest-ci"* || "$BUDDY_EXECUTION_BRANCH" == "master" ]]; then
                  .ci/snippet/RUN docker/sdk testing codecept run --no-ansi -c codeception.functional.feature.yml
                fi
            - '.ci/snippet/FINISH'
        run_next_parallel: true
        variables:
            - key: 'SPRYKER_CURRENT_REGION'
              value: 'EU'
              type: 'VAR'
            - key: 'SPRYKER_DYNAMIC_STORE_MODE'
              value: 'true'
              type: 'VAR'
            - key: 'SPRYKER_PLATFORM_IMAGE'
              value: 'spryker/php:8.3'
              type: 'VAR'
            - key: 'TRAVIS'
              value: '1'
              type: 'VAR'
        sync_paths:
            - pipeline_path: '/'
              vm_path: '/home/ubuntu/build'
              direction: 'PIPELINE_TO_VM'
        docker_layer_caching_scope: 'ACTION'
        instance_type: 'GENERAL_MEDIUM'
      - action: 'Master Job Slack Notification failure'
        type: 'BUILD'
        trigger_time: 'ON_FAILURE'
        docker_image_name: 'library/node'
        docker_image_tag: '18'
        variables:
            - key: 'PIPELINE_STATUS'
              value: 'FAILURE'
              type: 'VAR'
        execute_commands:
            - '.ci/snippet/SLACK_NOTIFICATIONS'
        setup_commands:
            - apt-get update && apt-get -y install jq
        shell: 'BASH'
        trigger_conditions:
            - trigger_condition: 'VAR_IS'
              trigger_variable_key: 'BUDDY_EXECUTION_BRANCH'
              trigger_variable_value: 'master'

- pipeline: 'Docker / Alpine / PHP 8.3 / PostgreSQL / Functional Tests / Dynamic Store OFF'
  events:
      - type: 'PUSH'
        refs:
            - 'refs/pull/*'
            - 'refs/heads/master'
      - type: 'PULL_REQUEST'
        events:
            - 'labeled'
        branches:
            - '*'
  trigger_conditions:
      - trigger_condition: OR
        trigger_operands:
            - trigger_condition: 'VAR_CONTAINS'
              trigger_variable_value: 'run-compatibility-ci'
              trigger_variable_key: 'BUDDY_RUN_PR_LABELS'
            - trigger_condition: 'VAR_CONTAINS'
              trigger_variable_value: 'run-ssp-compatibility-ci'
              trigger_variable_key: 'BUDDY_RUN_PR_LABELS'
            - trigger_condition: 'VAR_IS'
              trigger_variable_key: 'BUDDY_EXECUTION_BRANCH'
              trigger_variable_value: 'master'
  terminate_stale_runs: true
  auto_clear_cache: true
  fail_on_prepare_env_warning: true
  concurrent_pipeline_runs: true
  clone_depth: 1
  resources: 'NANO'
  actions:
      - action: 'Run tests'
        type: 'NATIVE_BUILD_DOCKER_CLI'
        commands:
            - '.ci/snippet/PREPARE'
            - '.ci/snippet/REQUIRE docker/sdk boot -v deploy.ci.functional.dynamic-store-off.yml'
            - '.ci/snippet/REQUIRE docker/sdk up -t'
            - '.ci/snippet/RUN docker/sdk testing composer dump-autoload -o -a --apcu'
            - |
                if [[ "$BUDDY_RUN_PR_LABELS" == *"run-compatibility-ci"* || "$BUDDY_EXECUTION_BRANCH" == "master" ]]; then
                  .ci/snippet/RUN docker/sdk testing codecept run --no-ansi -c codeception.functional.stage0.yml
                  .ci/snippet/RUN docker/sdk testing codecept run --no-ansi -c codeception.functional.stage1.yml
                  .ci/snippet/RUN docker/sdk testing codecept run --no-ansi -c codeception.functional.yml
                  .ci/snippet/RUN docker/sdk testing codecept run --no-ansi -c codeception.functional2.yml
                  .ci/snippet/RUN docker/sdk testing codecept run --no-ansi -c codeception.functional.stage2.yml
                  .ci/snippet/RUN docker/sdk testing codecept run --no-ansi -c codeception.functional.glue.yml
                fi
            - |
                if [[ "$BUDDY_RUN_PR_LABELS" == *"run-ssp-compatibility-ci"* || "$BUDDY_EXECUTION_BRANCH" == "master" ]]; then
                  .ci/snippet/RUN docker/sdk testing codecept run --no-ansi -c codeception.functional.feature.yml
                fi
            - '.ci/snippet/FINISH'
        run_next_parallel: true
        variables:
            - key: 'SPRYKER_PLATFORM_IMAGE'
              value: 'spryker/php:8.3'
              type: 'VAR'
            - key: 'TRAVIS'
              value: '1'
              type: 'VAR'
        sync_paths:
            - pipeline_path: '/'
              vm_path: '/home/ubuntu/build'
              direction: 'PIPELINE_TO_VM'
        docker_layer_caching_scope: 'ACTION'
        instance_type: 'GENERAL_MEDIUM'
      - action: 'Master Job Slack Notification failure'
        type: 'BUILD'
        trigger_time: 'ON_FAILURE'
        docker_image_name: 'library/node'
        docker_image_tag: '18'
        variables:
            - key: 'PIPELINE_STATUS'
              value: 'FAILURE'
              type: 'VAR'
        execute_commands:
            - '.ci/snippet/SLACK_NOTIFICATIONS'
        setup_commands:
            - apt-get update && apt-get -y install jq
        shell: 'BASH'
        trigger_conditions:
            - trigger_condition: 'VAR_IS'
              trigger_variable_key: 'BUDDY_EXECUTION_BRANCH'
              trigger_variable_value: 'master'

- pipeline: 'Docker / Alpine / PHP 8.3 / PostgreSQL / Functional Tests'
  events:
      - type: 'PUSH'
        refs:
            - 'refs/pull/*'
            - 'refs/heads/master'
      - type: 'PULL_REQUEST'
        events:
            - 'labeled'
        branches:
            - '*'
  trigger_conditions:
      - trigger_condition: OR
        trigger_operands:
            - trigger_condition: 'VAR_CONTAINS'
              trigger_variable_value: 'run-compatibility-ci'
              trigger_variable_key: 'BUDDY_RUN_PR_LABELS'
            - trigger_condition: 'VAR_CONTAINS'
              trigger_variable_value: 'run-ssp-compatibility-ci'
              trigger_variable_key: 'BUDDY_RUN_PR_LABELS'
            - trigger_condition: 'VAR_IS'
              trigger_variable_key: 'BUDDY_EXECUTION_BRANCH'
              trigger_variable_value: 'master'
  terminate_stale_runs: true
  auto_clear_cache: true
  fail_on_prepare_env_warning: true
  concurrent_pipeline_runs: true
  clone_depth: 1
  resources: 'NANO'
  actions:
      - action: 'Run tests'
        type: 'NATIVE_BUILD_DOCKER_CLI'
        commands:
            - '.ci/snippet/PREPARE'
            - '.ci/snippet/REQUIRE docker/sdk boot -v deploy.ci.functional.yml'
            - '.ci/snippet/REQUIRE docker/sdk up -t'
            - '.ci/snippet/RUN docker/sdk testing composer dump-autoload -o -a --apcu'
            - |
                if [[ "$BUDDY_RUN_PR_LABELS" == *"run-compatibility-ci"* || "$BUDDY_EXECUTION_BRANCH" == "master" ]]; then
                  .ci/snippet/RUN docker/sdk testing codecept run --no-ansi -c codeception.functional.stage0.yml
                  .ci/snippet/RUN docker/sdk testing codecept run --no-ansi -c codeception.functional.stage1.yml
                  .ci/snippet/RUN docker/sdk testing codecept run --no-ansi -c codeception.functional.yml
                  .ci/snippet/RUN docker/sdk testing codecept run --no-ansi -c codeception.functional2.yml
                  .ci/snippet/RUN docker/sdk testing codecept run --no-ansi -c codeception.functional.stage2.yml
                  .ci/snippet/RUN docker/sdk testing codecept run --no-ansi -c codeception.functional.glue.yml
                fi
            - |
                if [[ "$BUDDY_RUN_PR_LABELS" == *"run-ssp-compatibility-ci"* || "$BUDDY_EXECUTION_BRANCH" == "master" ]]; then
                  .ci/snippet/RUN docker/sdk testing codecept run --no-ansi -c codeception.functional.feature.yml
                fi
            - '.ci/snippet/FINISH'
        run_next_parallel: true
        variables:
            - key: 'SPRYKER_CURRENT_REGION'
              value: 'EU'
              type: 'VAR'
            - key: 'SPRYKER_DYNAMIC_STORE_MODE'
              value: 'true'
              type: 'VAR'
            - key: 'SPRYKER_PLATFORM_IMAGE'
              value: 'spryker/php:8.3'
              type: 'VAR'
            - key: 'TRAVIS'
              value: '1'
              type: 'VAR'
        sync_paths:
            - pipeline_path: '/'
              vm_path: '/home/ubuntu/build'
              direction: 'PIPELINE_TO_VM'
        docker_layer_caching_scope: 'ACTION'
        instance_type: 'GENERAL_MEDIUM'
      - action: 'Master Job Slack Notification failure'
        type: 'BUILD'
        trigger_time: 'ON_FAILURE'
        docker_image_name: 'library/node'
        docker_image_tag: '18'
        variables:
            - key: 'PIPELINE_STATUS'
              value: 'FAILURE'
              type: 'VAR'
        execute_commands:
            - '.ci/snippet/SLACK_NOTIFICATIONS'
        setup_commands:
            - apt-get update && apt-get -y install jq
        shell: 'BASH'
        trigger_conditions:
            - trigger_condition: 'VAR_IS'
              trigger_variable_key: 'BUDDY_EXECUTION_BRANCH'
              trigger_variable_value: 'master'

- pipeline: 'PHP 8.3 / MariaDB / Acceptance / Dynamic Store OFF'
  events:
      - type: 'PUSH'
        refs:
            - 'refs/pull/*'
            - 'refs/heads/master'
      - type: 'PULL_REQUEST'
        events:
            - 'labeled'
        branches:
            - '*'
  trigger_conditions:
      - trigger_condition: OR
        trigger_operands:
            - trigger_condition: 'VAR_CONTAINS'
              trigger_variable_value: 'run-compatibility-ci'
              trigger_variable_key: 'BUDDY_RUN_PR_LABELS'
            - trigger_condition: 'VAR_IS'
              trigger_variable_key: 'BUDDY_EXECUTION_BRANCH'
              trigger_variable_value: 'master'
  terminate_stale_runs: true
  auto_clear_cache: true
  fail_on_prepare_env_warning: true
  concurrent_pipeline_runs: true
  clone_depth: 1
  resources: 'NANO'
  actions:
      - action: 'Run tests'
        type: 'NATIVE_BUILD_DOCKER_CLI'
        commands:
            - '.ci/snippet/PREPARE'
            - '.ci/snippet/REQUIRE docker/sdk boot -v deploy.ci.acceptance.mariadb.dynamic-store-off.yml'
            - '.ci/snippet/REQUIRE docker/sdk up -t'
            - '.ci/snippet/RUN docker/sdk testing composer dump-autoload -o -a --apcu'
            - '.ci/snippet/RUN docker/sdk testing codecept run --no-ansi -c codeception.acceptance.yml'
            - '.ci/snippet/RUN docker/sdk testing codecept fixtures'
            - '.ci/snippet/RUN docker/sdk testing console queue:worker:start --stop-when-empty'
            - '.ci/snippet/RUN docker/sdk testing codecept run --no-ansi -c codeception.api.yml'
            - '.ci/snippet/FINISH'
        run_next_parallel: true
        variables:
            - key: 'SPRYKER_PLATFORM_IMAGE'
              value: 'spryker/php:8.3'
              type: 'VAR'
            - key: 'TRAVIS'
              value: '1'
              type: 'VAR'
        sync_paths:
            - pipeline_path: '/'
              vm_path: '/home/ubuntu/build'
              direction: 'PIPELINE_TO_VM'
        docker_layer_caching_scope: 'ACTION'
        instance_type: 'GENERAL_MEDIUM'
      - action: 'Master Job Slack Notification failure'
        type: 'BUILD'
        trigger_time: 'ON_FAILURE'
        docker_image_name: 'library/node'
        docker_image_tag: '18'
        variables:
            - key: 'PIPELINE_STATUS'
              value: 'FAILURE'
              type: 'VAR'
        execute_commands:
            - '.ci/snippet/SLACK_NOTIFICATIONS'
        setup_commands:
            - apt-get update && apt-get -y install jq
        shell: 'BASH'
        trigger_conditions:
            - trigger_condition: 'VAR_IS'
              trigger_variable_key: 'BUDDY_EXECUTION_BRANCH'
              trigger_variable_value: 'master'

- pipeline: '[run-api-ci] [run-ui-ci] PHP 8.3 / MariaDB / Acceptance'
  events:
      - type: 'PUSH'
        refs:
            - 'refs/pull/*'
            - 'refs/heads/master'
      - type: 'PULL_REQUEST'
        events:
            - 'labeled'
        branches:
            - '*'
  trigger_conditions:
      - trigger_condition: OR
        trigger_operands:
            - trigger_condition: 'VAR_CONTAINS'
              trigger_variable_value: 'run-ui-ci'
              trigger_variable_key: 'BUDDY_RUN_PR_LABELS'
            - trigger_condition: 'VAR_CONTAINS'
              trigger_variable_value: 'run-api-ci'
              trigger_variable_key: 'BUDDY_RUN_PR_LABELS'
            - trigger_condition: 'VAR_CONTAINS'
              trigger_variable_value: 'run-latest-ci'
              trigger_variable_key: 'BUDDY_RUN_PR_LABELS'
            - trigger_condition: 'VAR_IS'
              trigger_variable_key: 'BUDDY_EXECUTION_BRANCH'
              trigger_variable_value: 'master'
  terminate_stale_runs: true
  auto_clear_cache: true
  fail_on_prepare_env_warning: true
  concurrent_pipeline_runs: true
  clone_depth: 1
  resources: 'NANO'
  actions:
      - action: 'Run tests'
        type: 'NATIVE_BUILD_DOCKER_CLI'
        commands:
            - '.ci/snippet/PREPARE'
            - '.ci/snippet/REQUIRE docker/sdk boot -v deploy.ci.acceptance.mariadb.yml'
            - '.ci/snippet/REQUIRE docker/sdk up -t'
            - '.ci/snippet/RUN docker/sdk testing composer dump-autoload -o -a --apcu'
            - '.ci/snippet/RUN docker/sdk testing codecept run --no-ansi -c codeception.acceptance.yml'
            - '.ci/snippet/RUN docker/sdk testing codecept fixtures'
            - '.ci/snippet/RUN docker/sdk testing console queue:worker:start --stop-when-empty'
            - '.ci/snippet/RUN docker/sdk testing codecept run --no-ansi -c codeception.api.yml'
            - '.ci/snippet/FINISH'
        run_next_parallel: true
        variables:
            - key: 'SPRYKER_CURRENT_REGION'
              value: 'EU'
              type: 'VAR'
            - key: 'SPRYKER_DYNAMIC_STORE_MODE'
              value: 'true'
              type: 'VAR'
            - key: 'SPRYKER_PLATFORM_IMAGE'
              value: 'spryker/php:8.3'
              type: 'VAR'
            - key: 'TRAVIS'
              value: '1'
              type: 'VAR'
        sync_paths:
            - pipeline_path: '/'
              vm_path: '/home/ubuntu/build'
              direction: 'PIPELINE_TO_VM'
        docker_layer_caching_scope: 'ACTION'
        instance_type: 'GENERAL_MEDIUM'
      - action: 'Master Job Slack Notification failure'
        type: 'BUILD'
        trigger_time: 'ON_FAILURE'
        docker_image_name: 'library/node'
        docker_image_tag: '18'
        variables:
            - key: 'PIPELINE_STATUS'
              value: 'FAILURE'
              type: 'VAR'
        execute_commands:
            - '.ci/snippet/SLACK_NOTIFICATIONS'
        setup_commands:
            - apt-get update && apt-get -y install jq
        shell: 'BASH'
        trigger_conditions:
            - trigger_condition: 'VAR_IS'
              trigger_variable_key: 'BUDDY_EXECUTION_BRANCH'
              trigger_variable_value: 'master'

- pipeline: 'Docker / Alpine / PHP 8.3 / PostgreSQL / Acceptance / Dynamic Store OFF'
  events:
      - type: 'PUSH'
        refs:
            - 'refs/pull/*'
            - 'refs/heads/master'
      - type: 'PULL_REQUEST'
        events:
            - 'labeled'
        branches:
            - '*'
  trigger_conditions:
      - trigger_condition: OR
        trigger_operands:
            - trigger_condition: 'VAR_CONTAINS'
              trigger_variable_value: 'run-compatibility-ci'
              trigger_variable_key: 'BUDDY_RUN_PR_LABELS'
            - trigger_condition: 'VAR_IS'
              trigger_variable_key: 'BUDDY_EXECUTION_BRANCH'
              trigger_variable_value: 'master'
  terminate_stale_runs: true
  auto_clear_cache: true
  fail_on_prepare_env_warning: true
  concurrent_pipeline_runs: true
  clone_depth: 1
  resources: 'NANO'
  actions:
      - action: 'Run tests'
        type: 'NATIVE_BUILD_DOCKER_CLI'
        commands:
            - '.ci/snippet/PREPARE'
            - '.ci/snippet/REQUIRE docker/sdk boot -v deploy.ci.acceptance.dynamic-store-off.yml'
            - '.ci/snippet/REQUIRE docker/sdk up -t'
            - '.ci/snippet/RUN docker/sdk testing composer dump-autoload -o -a --apcu'
            - '.ci/snippet/RUN docker/sdk testing codecept run --no-ansi -c codeception.acceptance.yml'
            - '.ci/snippet/RUN docker/sdk testing codecept fixtures'
            - '.ci/snippet/RUN docker/sdk testing console queue:worker:start --stop-when-empty'
            - '.ci/snippet/RUN docker/sdk testing codecept run --no-ansi -c codeception.api.yml'
            - '.ci/snippet/FINISH'
        run_next_parallel: true
        variables:
            - key: 'SPRYKER_PLATFORM_IMAGE'
              value: 'spryker/php:8.3'
              type: 'VAR'
            - key: 'TRAVIS'
              value: '1'
              type: 'VAR'
        sync_paths:
            - pipeline_path: '/'
              vm_path: '/home/ubuntu/build'
              direction: 'PIPELINE_TO_VM'
        docker_layer_caching_scope: 'ACTION'
        instance_type: 'GENERAL_MEDIUM'
      - action: 'Master Job Slack Notification failure'
        type: 'BUILD'
        trigger_time: 'ON_FAILURE'
        docker_image_name: 'library/node'
        docker_image_tag: '18'
        variables:
            - key: 'PIPELINE_STATUS'
              value: 'FAILURE'
              type: 'VAR'
        execute_commands:
            - '.ci/snippet/SLACK_NOTIFICATIONS'
        setup_commands:
            - apt-get update && apt-get -y install jq
        shell: 'BASH'
        trigger_conditions:
            - trigger_condition: 'VAR_IS'
              trigger_variable_key: 'BUDDY_EXECUTION_BRANCH'
              trigger_variable_value: 'master'

- pipeline: 'Docker / Alpine / PHP 8.3 / PostgreSQL / Acceptance'
  events:
      - type: 'PUSH'
        refs:
            - 'refs/pull/*'
            - 'refs/heads/master'
      - type: 'PULL_REQUEST'
        events:
            - 'labeled'
        branches:
            - '*'
  trigger_conditions:
      - trigger_condition: OR
        trigger_operands:
            - trigger_condition: 'VAR_CONTAINS'
              trigger_variable_value: 'run-compatibility-ci'
              trigger_variable_key: 'BUDDY_RUN_PR_LABELS'
            - trigger_condition: 'VAR_IS'
              trigger_variable_key: 'BUDDY_EXECUTION_BRANCH'
              trigger_variable_value: 'master'
  terminate_stale_runs: true
  auto_clear_cache: true
  fail_on_prepare_env_warning: true
  concurrent_pipeline_runs: true
  clone_depth: 1
  resources: 'NANO'
  actions:
      - action: 'Run tests'
        type: 'NATIVE_BUILD_DOCKER_CLI'
        commands:
            - '.ci/snippet/PREPARE'
            - '.ci/snippet/REQUIRE docker/sdk boot -v deploy.ci.acceptance.yml'
            - '.ci/snippet/REQUIRE docker/sdk up -t'
            - '.ci/snippet/RUN docker/sdk testing composer dump-autoload -o -a --apcu'
            - '.ci/snippet/RUN docker/sdk testing codecept run --no-ansi -c codeception.acceptance.yml'
            - '.ci/snippet/RUN docker/sdk testing codecept fixtures'
            - '.ci/snippet/RUN docker/sdk testing console queue:worker:start --stop-when-empty'
            - '.ci/snippet/RUN docker/sdk testing codecept run --no-ansi -c codeception.api.yml'
            - '.ci/snippet/FINISH'
        run_next_parallel: true
        variables:
            - key: 'SPRYKER_CURRENT_REGION'
              value: 'EU'
              type: 'VAR'
            - key: 'SPRYKER_DYNAMIC_STORE_MODE'
              value: 'true'
              type: 'VAR'
            - key: 'SPRYKER_PLATFORM_IMAGE'
              value: 'spryker/php:8.3'
              type: 'VAR'
            - key: 'TRAVIS'
              value: '1'
              type: 'VAR'
        sync_paths:
            - pipeline_path: '/'
              vm_path: '/home/ubuntu/build'
              direction: 'PIPELINE_TO_VM'
        docker_layer_caching_scope: 'ACTION'
        instance_type: 'GENERAL_MEDIUM'
      - action: 'Master Job Slack Notification failure'
        type: 'BUILD'
        trigger_time: 'ON_FAILURE'
        docker_image_name: 'library/node'
        docker_image_tag: '18'
        variables:
            - key: 'PIPELINE_STATUS'
              value: 'FAILURE'
              type: 'VAR'
        execute_commands:
            - '.ci/snippet/SLACK_NOTIFICATIONS'
        setup_commands:
            - apt-get update && apt-get -y install jq
        shell: 'BASH'
        trigger_conditions:
            - trigger_condition: 'VAR_IS'
              trigger_variable_key: 'BUDDY_EXECUTION_BRANCH'
              trigger_variable_value: 'master'

- pipeline: '[run-functional-ci] / PHP 8.3 / Frontend & Assets'
  events:
      - type: 'PUSH'
        refs:
            - 'refs/pull/*'
            - 'refs/heads/master'
      - type: 'PULL_REQUEST'
        events:
            - 'labeled'
        branches:
            - '*'
  trigger_conditions:
      - trigger_condition: OR
        trigger_operands:
            - trigger_condition: 'VAR_CONTAINS'
              trigger_variable_value: 'run-functional-ci'
              trigger_variable_key: 'BUDDY_RUN_PR_LABELS'
            - trigger_condition: 'VAR_CONTAINS'
              trigger_variable_value: 'run-latest-ci'
              trigger_variable_key: 'BUDDY_RUN_PR_LABELS'
            - trigger_condition: 'VAR_IS'
              trigger_variable_key: 'BUDDY_EXECUTION_BRANCH'
              trigger_variable_value: 'master'
  terminate_stale_runs: true
  auto_clear_cache: true
  fail_on_prepare_env_warning: true
  concurrent_pipeline_runs: true
  clone_depth: 1
  resources: 'NANO'
  actions:
      - action: 'Run tests'
        type: 'NATIVE_BUILD_DOCKER_CLI'
        commands:
            - '.ci/snippet/PREPARE'
            - '.ci/snippet/REQUIRE docker/sdk boot -v deploy.yml'
            - 'export SPRYKER_BUILD_HASH=myhash'
            - '.ci/snippet/REQUIRE docker/sdk export images'
            - '.ci/snippet/REQUIRE script -q -e -c "docker run -it --rm -e SPRYKER_NGINX_CGI_HOST_YVES_EU=localhost -e SPRYKER_NGINX_CGI_HOST_BACKOFFICE_EU=localhost -e SPRYKER_NGINX_CGI_HOST_BACKEND_GATEWAY_EU=localhost -e SPRYKER_NGINX_CGI_HOST_BACKEND_API_EU=localhost -e SPRYKER_NGINX_CGI_HOST_GLUE_EU=localhost -e SPRYKER_NGINX_CGI_HOST_CONFIGURATOR_EU=localhost -e SPRYKER_NGINX_CGI_HOST_YVES_US=localhost -e SPRYKER_NGINX_CGI_HOST_GLUE_US=localhost -e SPRYKER_NGINX_CGI_HOST_BACKOFFICE_US=localhost -e SPRYKER_NGINX_CGI_HOST_BACKEND_GATEWAY_US=localhost -e SPRYKER_NGINX_CGI_HOST_BACKEND_API_US=localhost -e ALLOWED_IP=127.0.0.1 spryker_demo_frontend:1.0-frontend nginx -t"'
            - '.ci/snippet/REQUIRE script -q -e -c "docker run -it --rm --entrypoint='''' spryker_demo_frontend:1.0-frontend ls -al /data/public/Yves/assets/myhash"'
            - '.ci/snippet/REQUIRE script -q -e -c "docker run -it --rm --entrypoint='''' spryker_demo_frontend:1.0-frontend ls -al /data/public/Zed/assets/"'
            - '.ci/snippet/FINISH'
        run_next_parallel: true
        variables:
            - key: 'SPRYKER_PLATFORM_IMAGE'
              value: 'spryker/php:8.3-debian'
              type: 'VAR'
            - key: 'TRAVIS'
              value: '1'
              type: 'VAR'
        sync_paths:
            - pipeline_path: '/'
              vm_path: '/home/ubuntu/build'
              direction: 'PIPELINE_TO_VM'
        docker_layer_caching_scope: 'ACTION'
        instance_type: 'GENERAL_MEDIUM'
      - action: 'Master Job Slack Notification failure'
        type: 'BUILD'
        trigger_time: 'ON_FAILURE'
        docker_image_name: 'library/node'
        docker_image_tag: '18'
        variables:
            - key: 'PIPELINE_STATUS'
              value: 'FAILURE'
              type: 'VAR'
        execute_commands:
            - '.ci/snippet/SLACK_NOTIFICATIONS'
        setup_commands:
            - apt-get update && apt-get -y install jq
        shell: 'BASH'
        trigger_conditions:
            - trigger_condition: 'VAR_IS'
              trigger_variable_key: 'BUDDY_EXECUTION_BRANCH'
              trigger_variable_value: 'master'

- pipeline: 'Docker / Alpine / PHP 8.2 / MariaDB / Functional Tests / Prefer Lowest / Dynamic Store OFF'
  events:
      - type: 'PUSH'
        refs:
            - 'refs/pull/*'
            - 'refs/heads/master'
      - type: 'PULL_REQUEST'
        events:
            - 'labeled'
        branches:
            - '*'
  trigger_conditions:
      - trigger_condition: OR
        trigger_operands:
            - trigger_condition: 'VAR_CONTAINS'
              trigger_variable_value: 'run-compatibility-ci'
              trigger_variable_key: 'BUDDY_RUN_PR_LABELS'
            - trigger_condition: 'VAR_CONTAINS'
              trigger_variable_value: 'run-ssp-compatibility-ci'
              trigger_variable_key: 'BUDDY_RUN_PR_LABELS'
            - trigger_condition: 'VAR_IS'
              trigger_variable_key: 'BUDDY_EXECUTION_BRANCH'
              trigger_variable_value: 'master'
  terminate_stale_runs: true
  auto_clear_cache: true
  fail_on_prepare_env_warning: true
  concurrent_pipeline_runs: true
  clone_depth: 1
  resources: 'NANO'
  actions:
      - action: 'Update Composer (Prefer Lowest)'
        type: 'BUILD'
        docker_image_name: 'spryker/php'
        docker_image_tag: '8.2'
        execute_commands:
            - 'composer config github-oauth.github.com ${GITHUB_TOKEN}'
            - 'COMPOSER_MEMORY_LIMIT=-1 composer update --prefer-lowest --no-interaction --prefer-install=auto --quiet'
            - 'composer require --dev dereuromark/composer-prefer-lowest:dev-master --with-all-dependencies'
        shell: 'BASH'
      - action: 'Docker / Alpine / PHP 8.2 / MariaDB / Functional Tests / Prefer Lowest'
        type: 'NATIVE_BUILD_DOCKER_CLI'
        commands:
            - '.ci/snippet/PREPARE'
            - '.ci/snippet/REQUIRE docker/sdk boot -v deploy.ci.functional.mariadb.dynamic-store-off.prefer-lowest.yml'
            - '.ci/snippet/REQUIRE docker/sdk up -t'
            - '.ci/snippet/RUN docker/sdk testing composer dump-autoload -o -a --apcu'
            - |
                if [[ "$BUDDY_RUN_PR_LABELS" == *"run-compatibility-ci"* || "$BUDDY_EXECUTION_BRANCH" == "master" ]]; then
                  .ci/snippet/RUN docker/sdk testing codecept run --no-ansi -c codeception.functional.stage0.yml
                  .ci/snippet/RUN docker/sdk testing codecept run --no-ansi -c codeception.functional.stage1.yml
                  .ci/snippet/RUN docker/sdk testing codecept run --no-ansi -c codeception.functional.yml
                  .ci/snippet/RUN docker/sdk testing codecept run --no-ansi -c codeception.functional2.yml
                  .ci/snippet/RUN docker/sdk testing codecept run --no-ansi -c codeception.functional.stage2.yml
                  .ci/snippet/RUN docker/sdk testing codecept run --no-ansi -c codeception.functional.glue.yml
                fi
            - |
                if [[ "$BUDDY_RUN_PR_LABELS" == *"run-ssp-compatibility-ci"* || "$BUDDY_EXECUTION_BRANCH" == "master" ]]; then
                  .ci/snippet/RUN docker/sdk testing codecept run --no-ansi -c codeception.functional.feature.yml
                fi
            - '.ci/snippet/FINISH'
        run_next_parallel: true
        variables:
            - key: 'SPRYKER_PLATFORM_IMAGE'
              value: 'spryker/php:8.2'
              type: 'VAR'
            - key: 'TRAVIS'
              value: '1'
              type: 'VAR'
        sync_paths:
            - pipeline_path: '/'
              vm_path: '/home/ubuntu/build'
              direction: 'PIPELINE_TO_VM'
        docker_layer_caching_scope: 'ACTION'
        instance_type: 'GENERAL_MEDIUM'
      - action: 'Master Job Slack Notification failure'
        type: 'BUILD'
        trigger_time: 'ON_FAILURE'
        docker_image_name: 'library/node'
        docker_image_tag: '18'
        variables:
            - key: 'PIPELINE_STATUS'
              value: 'FAILURE'
              type: 'VAR'
        execute_commands:
            - '.ci/snippet/SLACK_NOTIFICATIONS'
        setup_commands:
            - apt-get update && apt-get -y install jq
        shell: 'BASH'
        trigger_conditions:
            - trigger_condition: 'VAR_IS'
              trigger_variable_key: 'BUDDY_EXECUTION_BRANCH'
              trigger_variable_value: 'master'

- pipeline: 'Docker / Alpine / PHP 8.2 / MariaDB / Functional Tests / Prefer Lowest'
  events:
      - type: 'PUSH'
        refs:
            - 'refs/pull/*'
            - 'refs/heads/master'
      - type: 'PULL_REQUEST'
        events:
            - 'labeled'
        branches:
            - '*'
  trigger_conditions:
      - trigger_condition: OR
        trigger_operands:
            - trigger_condition: 'VAR_CONTAINS'
              trigger_variable_value: 'run-compatibility-ci'
              trigger_variable_key: 'BUDDY_RUN_PR_LABELS'
            - trigger_condition: 'VAR_CONTAINS'
              trigger_variable_value: 'run-ssp-compatibility-ci'
              trigger_variable_key: 'BUDDY_RUN_PR_LABELS'
            - trigger_condition: 'VAR_IS'
              trigger_variable_key: 'BUDDY_EXECUTION_BRANCH'
              trigger_variable_value: 'master'
  terminate_stale_runs: true
  auto_clear_cache: true
  fail_on_prepare_env_warning: true
  concurrent_pipeline_runs: true
  clone_depth: 1
  resources: 'NANO'
  actions:
      - action: 'Update Composer (Prefer Lowest)'
        type: 'BUILD'
        docker_image_name: 'spryker/php'
        docker_image_tag: '8.2'
        execute_commands:
            - 'composer config github-oauth.github.com ${GITHUB_TOKEN}'
            - 'COMPOSER_MEMORY_LIMIT=-1 composer update --prefer-lowest --no-interaction --prefer-install=auto --quiet'
            - 'composer require --dev dereuromark/composer-prefer-lowest:dev-master --with-all-dependencies'
        shell: 'BASH'
      - action: 'Run tests'
        type: 'NATIVE_BUILD_DOCKER_CLI'
        commands:
            - '.ci/snippet/PREPARE'
            - '.ci/snippet/REQUIRE docker/sdk boot -v deploy.ci.functional.mariadb.prefer-lowest.yml'
            - '.ci/snippet/REQUIRE docker/sdk up -t'
            - '.ci/snippet/RUN docker/sdk testing composer dump-autoload -o -a --apcu'
            - |
                if [[ "$BUDDY_RUN_PR_LABELS" == *"run-compatibility-ci"* || "$BUDDY_EXECUTION_BRANCH" == "master" ]]; then
                  .ci/snippet/RUN docker/sdk testing codecept run --no-ansi -c codeception.functional.stage0.yml
                  .ci/snippet/RUN docker/sdk testing codecept run --no-ansi -c codeception.functional.stage1.yml
                  .ci/snippet/RUN docker/sdk testing codecept run --no-ansi -c codeception.functional.yml
                  .ci/snippet/RUN docker/sdk testing codecept run --no-ansi -c codeception.functional2.yml
                  .ci/snippet/RUN docker/sdk testing codecept run --no-ansi -c codeception.functional.stage2.yml
                  .ci/snippet/RUN docker/sdk testing codecept run --no-ansi -c codeception.functional.glue.yml
                fi
            - |
                if [[ "$BUDDY_RUN_PR_LABELS" == *"run-ssp-compatibility-ci"* || "$BUDDY_EXECUTION_BRANCH" == "master" ]]; then
                  .ci/snippet/RUN docker/sdk testing codecept run --no-ansi -c codeception.functional.feature.yml
                fi
            - '.ci/snippet/FINISH'
        run_next_parallel: true
        variables:
            - key: 'SPRYKER_CURRENT_REGION'
              value: 'EU'
              type: 'VAR'
            - key: 'SPRYKER_DYNAMIC_STORE_MODE'
              value: 'true'
              type: 'VAR'
            - key: 'SPRYKER_PLATFORM_IMAGE'
              value: 'spryker/php:8.2'
              type: 'VAR'
            - key: 'TRAVIS'
              value: '1'
              type: 'VAR'
        sync_paths:
            - pipeline_path: '/'
              vm_path: '/home/ubuntu/build'
              direction: 'PIPELINE_TO_VM'
        docker_layer_caching_scope: 'ACTION'
        instance_type: 'GENERAL_MEDIUM'
      - action: 'Master Job Slack Notification failure'
        type: 'BUILD'
        trigger_time: 'ON_FAILURE'
        docker_image_name: 'library/node'
        docker_image_tag: '18'
        variables:
            - key: 'PIPELINE_STATUS'
              value: 'FAILURE'
              type: 'VAR'
        execute_commands:
            - '.ci/snippet/SLACK_NOTIFICATIONS'
        setup_commands:
            - apt-get update && apt-get -y install jq
        shell: 'BASH'
        trigger_conditions:
            - trigger_condition: 'VAR_IS'
              trigger_variable_key: 'BUDDY_EXECUTION_BRANCH'
              trigger_variable_value: 'master'

- pipeline: 'Docker / Alpine / PHP 8.2 / MariaDB / Acceptance / Prefer Lowest / Dynamic Store OFF'
  events:
      - type: 'PUSH'
        refs:
            - 'refs/pull/*'
            - 'refs/heads/master'
      - type: 'PULL_REQUEST'
        events:
            - 'labeled'
        branches:
            - '*'
  trigger_conditions:
      - trigger_condition: OR
        trigger_operands:
            - trigger_condition: 'VAR_CONTAINS'
              trigger_variable_value: 'run-compatibility-ci'
              trigger_variable_key: 'BUDDY_RUN_PR_LABELS'
            - trigger_condition: 'VAR_IS'
              trigger_variable_key: 'BUDDY_EXECUTION_BRANCH'
              trigger_variable_value: 'master'
  terminate_stale_runs: true
  auto_clear_cache: true
  fail_on_prepare_env_warning: true
  concurrent_pipeline_runs: true
  clone_depth: 1
  resources: 'NANO'
  actions:
      - action: 'Update Composer (Prefer Lowest)'
        type: 'BUILD'
        docker_image_name: 'spryker/php'
        docker_image_tag: '8.2'
        execute_commands:
            - 'composer config github-oauth.github.com ${GITHUB_TOKEN}'
            - 'COMPOSER_MEMORY_LIMIT=-1 composer update --prefer-lowest --no-interaction --prefer-install=auto --quiet'
            - 'composer require --dev dereuromark/composer-prefer-lowest:dev-master --with-all-dependencies'
        shell: 'BASH'
      - action: 'Run tests'
        type: 'NATIVE_BUILD_DOCKER_CLI'
        commands:
            - '.ci/snippet/PREPARE'
            - '.ci/snippet/REQUIRE docker/sdk boot -v deploy.ci.acceptance.mariadb.dynamic-store-off.prefer-lowest.yml'
            - '.ci/snippet/REQUIRE docker/sdk up -t'
            - '.ci/snippet/RUN docker/sdk testing composer dump-autoload -o -a --apcu'
            - '.ci/snippet/RUN docker/sdk testing codecept run --no-ansi -c codeception.acceptance.yml'
            - '.ci/snippet/RUN docker/sdk testing codecept fixtures'
            - '.ci/snippet/RUN docker/sdk testing console queue:worker:start --stop-when-empty'
            - '.ci/snippet/RUN docker/sdk testing codecept run --no-ansi -c codeception.api.yml'
            - '.ci/snippet/FINISH'
        run_next_parallel: true
        variables:
            - key: 'SPRYKER_PLATFORM_IMAGE'
              value: 'spryker/php:8.2'
              type: 'VAR'
            - key: 'TRAVIS'
              value: '1'
              type: 'VAR'
        sync_paths:
            - pipeline_path: '/'
              vm_path: '/home/ubuntu/build'
              direction: 'PIPELINE_TO_VM'
        docker_layer_caching_scope: 'ACTION'
        instance_type: 'GENERAL_LARGE'
      - action: 'Master Job Slack Notification failure'
        type: 'BUILD'
        trigger_time: 'ON_FAILURE'
        docker_image_name: 'library/node'
        docker_image_tag: '18'
        variables:
            - key: 'PIPELINE_STATUS'
              value: 'FAILURE'
              type: 'VAR'
        execute_commands:
            - '.ci/snippet/SLACK_NOTIFICATIONS'
        setup_commands:
            - apt-get update && apt-get -y install jq
        shell: 'BASH'
        trigger_conditions:
            - trigger_condition: 'VAR_IS'
              trigger_variable_key: 'BUDDY_EXECUTION_BRANCH'
              trigger_variable_value: 'master'

- pipeline: 'Docker / Alpine / PHP 8.2 / MariaDB / Acceptance / Prefer Lowest'
  events:
      - type: 'PUSH'
        refs:
            - 'refs/pull/*'
            - 'refs/heads/master'
      - type: 'PULL_REQUEST'
        events:
            - 'labeled'
        branches:
            - '*'
  trigger_conditions:
      - trigger_condition: OR
        trigger_operands:
            - trigger_condition: 'VAR_CONTAINS'
              trigger_variable_value: 'run-compatibility-ci'
              trigger_variable_key: 'BUDDY_RUN_PR_LABELS'
            - trigger_condition: 'VAR_IS'
              trigger_variable_key: 'BUDDY_EXECUTION_BRANCH'
              trigger_variable_value: 'master'
  terminate_stale_runs: true
  auto_clear_cache: true
  fail_on_prepare_env_warning: true
  concurrent_pipeline_runs: true
  clone_depth: 1
  resources: 'NANO'
  actions:
      - action: 'Update Composer (Prefer Lowest)'
        type: 'BUILD'
        docker_image_name: 'spryker/php'
        docker_image_tag: '8.2'
        execute_commands:
            - 'composer config github-oauth.github.com ${GITHUB_TOKEN}'
            - 'COMPOSER_MEMORY_LIMIT=-1 composer update --prefer-lowest --no-interaction --prefer-install=auto --quiet'
            - 'composer require --dev dereuromark/composer-prefer-lowest:dev-master --with-all-dependencies'
        shell: 'BASH'
      - action: 'Run tests'
        type: 'NATIVE_BUILD_DOCKER_CLI'
        commands:
            - '.ci/snippet/PREPARE'
            - '.ci/snippet/REQUIRE docker/sdk boot -v deploy.ci.acceptance.mariadb.prefer-lowest.yml'
            - '.ci/snippet/REQUIRE docker/sdk up -t'
            - '.ci/snippet/RUN docker/sdk testing composer dump-autoload -o -a --apcu'
            - '.ci/snippet/RUN docker/sdk testing codecept run --no-ansi -c codeception.acceptance.yml'
            - '.ci/snippet/RUN docker/sdk testing codecept fixtures'
            - '.ci/snippet/RUN docker/sdk testing console queue:worker:start --stop-when-empty'
            - '.ci/snippet/RUN docker/sdk testing codecept run --no-ansi -c codeception.api.yml'
            - '.ci/snippet/FINISH'
        run_next_parallel: true
        variables:
            - key: 'SPRYKER_CURRENT_REGION'
              value: 'EU'
              type: 'VAR'
            - key: 'SPRYKER_DYNAMIC_STORE_MODE'
              value: 'true'
              type: 'VAR'
            - key: 'SPRYKER_PLATFORM_IMAGE'
              value: 'spryker/php:8.2'
              type: 'VAR'
            - key: 'TRAVIS'
              value: '1'
              type: 'VAR'
        sync_paths:
            - pipeline_path: '/'
              vm_path: '/home/ubuntu/build'
              direction: 'PIPELINE_TO_VM'
        docker_layer_caching_scope: 'ACTION'
        instance_type: 'GENERAL_MEDIUM'
      - action: 'Master Job Slack Notification failure'
        type: 'BUILD'
        trigger_time: 'ON_FAILURE'
        docker_image_name: 'library/node'
        docker_image_tag: '18'
        variables:
            - key: 'PIPELINE_STATUS'
              value: 'FAILURE'
              type: 'VAR'
        execute_commands:
            - '.ci/snippet/SLACK_NOTIFICATIONS'
        setup_commands:
            - apt-get update && apt-get -y install jq
        shell: 'BASH'
        trigger_conditions:
            - trigger_condition: 'VAR_IS'
              trigger_variable_key: 'BUDDY_EXECUTION_BRANCH'
              trigger_variable_value: 'master'

- pipeline: 'PHP 8.2 / PostgreSQL / Robot / API / Dynamic Store OFF'
  events:
      - type: 'PUSH'
        refs:
            - 'refs/pull/*'
            - 'refs/heads/master'
      - type: 'PULL_REQUEST'
        events:
            - 'labeled'
        branches:
            - '*'
  trigger_conditions:
      - trigger_condition: OR
        trigger_operands:
            - trigger_condition: 'VAR_CONTAINS'
              trigger_variable_value: 'run-compatibility-ci'
              trigger_variable_key: 'BUDDY_RUN_PR_LABELS'
            - trigger_condition: 'VAR_IS'
              trigger_variable_key: 'BUDDY_EXECUTION_BRANCH'
              trigger_variable_value: 'master'
  terminate_stale_runs: true
  auto_clear_cache: true
  fail_on_prepare_env_warning: true
  concurrent_pipeline_runs: true
  clone_depth: 1
  resources: 'NANO'
  actions:
      - action: 'Install Composer'
        type: 'BUILD'
        docker_image_name: 'spryker/php'
        docker_image_tag: '8.2'
        execute_commands:
            - '.ci/snippet/PREPARE'
            - '.ci/snippet/REQUIRE composer config github-oauth.github.com ${GITHUB_TOKEN}'
            - '.ci/snippet/REQUIRE composer install --optimize-autoloader --no-interaction --prefer-install=auto '
            - '.ci/snippet/FINISH'
        shell: 'BASH'
      - action: 'PHP 8.2 / PostgreSQL / Robot / API / Dynamic Store OFF'
        type: 'NATIVE_BUILD_DOCKER_CLI'
        commands:
            - '.ci/snippet/PREPARE'
            - '.ci/snippet/REQUIRE docker/sdk boot deploy.ci.acceptance.dynamic-store-off.prefer-lowest.yml'
            - '.ci/snippet/RUN docker/sdk up -t'
            - '.ci/snippet/RUN docker/sdk testing composer dump-autoload -o -a --apcu'
            - '.ci/snippet/RUN docker/sdk testing console queue:worker:start --stop-when-empty'
            - '.ci/snippet/RUN script -q -e -c "docker/sdk exec robot-framework robot -v env:api_suite -v db_engine:psycopg2 -v docker:True -v dms:false --exclude skip-due-to-issueORskip-due-to-refactoring -d results -s robotframework.tests.api.suite ."'
            - '.ci/snippet/REQUIRE aws configure set default.s3.max_concurrent_requests 80'
            - '.ci/snippet/REQUIRE aws configure set default.s3.max_queue_size 6000'
            - '.ci/snippet/REQUIRE aws configure set default.s3.multipart_threshold 36MB'
            - '.ci/snippet/REQUIRE aws configure set default.s3.multipart_chunksize 16MB'
            - 'export AWS_ACCESS_KEY_ID=$AWS_S3_ACCESS_KEY_ID'
            - 'export AWS_SECRET_ACCESS_KEY=$AWS_S3_SECRET_ACCESS_KEY'
            - 'export AWS_ACCESS_KEY_ID=$ROBOT_TESTS_ARTIFACTS_KEY'
            - 'export AWS_SECRET_ACCESS_KEY=$ROBOT_TESTS_ARTIFACTS_SECRET'
            - '.ci/snippet/ARTEFACTS aws s3 cp ./.robot/results/log.html s3://$ROBOT_TESTS_ARTIFACTS_BUCKET/suite-nonsplit/dms-off/robot-api/$BUDDY_EXECUTION_HASH/PHP8.3MariaDB/log.html'
            - '.ci/snippet/ARTEFACTS echo "Check the logs - https://s3.console.aws.amazon.com/s3/object/${ROBOT_TESTS_ARTIFACTS_BUCKET}?region=eu-central-1&prefix=suite-nonsplit/dms-off/robot-api/${BUDDY_EXECUTION_HASH}/PHP8.3MariaDB/log.html"'
            - '.ci/snippet/ARTEFACTS echo "You must have VPN access to AWS (Spryker-Internal account)"'
            - '.ci/snippet/FINISH'
        run_next_parallel: true
        variables:
            - key: 'SPRYKER_PLATFORM_IMAGE'
              value: 'spryker/php:8.2'
              type: 'VAR'
            - key: 'TRAVIS'
              value: '1'
              type: 'VAR'
        timeout: 8000
        sync_paths:
            - pipeline_path: '/'
              vm_path: '/home/ubuntu/build'
              direction: 'PIPELINE_TO_VM'
        docker_layer_caching_scope: 'ACTION'
      - action: 'Master Job Slack Notification failure'
        type: 'BUILD'
        trigger_time: 'ON_FAILURE'
        docker_image_name: 'library/node'
        docker_image_tag: '18'
        variables:
            - key: 'PIPELINE_STATUS'
              value: 'FAILURE'
              type: 'VAR'
        execute_commands:
            - '.ci/snippet/SLACK_NOTIFICATIONS'
        setup_commands:
            - apt-get update && apt-get -y install jq
        shell: 'BASH'
        trigger_conditions:
            - trigger_condition: 'VAR_IS'
              trigger_variable_key: 'BUDDY_EXECUTION_BRANCH'
              trigger_variable_value: 'master'

- pipeline: '[run-api-ci] PHP 8.3 / MariaDB / Robot / API'
  events:
      - type: 'PUSH'
        refs:
            - 'refs/pull/*'
            - 'refs/heads/master'
      - type: 'PULL_REQUEST'
        events:
            - 'labeled'
        branches:
            - '*'
  trigger_conditions:
      - trigger_condition: OR
        trigger_operands:
            - trigger_condition: 'VAR_CONTAINS'
              trigger_variable_value: 'run-api-ci'
              trigger_variable_key: 'BUDDY_RUN_PR_LABELS'
            - trigger_condition: 'VAR_CONTAINS'
              trigger_variable_value: 'run-latest-ci'
              trigger_variable_key: 'BUDDY_RUN_PR_LABELS'
            - trigger_condition: 'VAR_IS'
              trigger_variable_key: 'BUDDY_EXECUTION_BRANCH'
              trigger_variable_value: 'master'
  terminate_stale_runs: true
  auto_clear_cache: true
  fail_on_prepare_env_warning: true
  concurrent_pipeline_runs: true
  clone_depth: 1
  resources: 'NANO'
  actions:
      - action: 'Install Composer'
        type: 'BUILD'
        docker_image_name: 'spryker/php'
        docker_image_tag: '8.3'
        execute_commands:
            - '.ci/snippet/PREPARE'
            - '.ci/snippet/REQUIRE composer config github-oauth.github.com ${GITHUB_TOKEN}'
            - '.ci/snippet/REQUIRE composer install --optimize-autoloader --no-interaction --prefer-install=auto '
            - '.ci/snippet/FINISH'
        shell: 'BASH'
      - action: 'Docker / Alpine / PHP 8.2 / MariaDB / Robot'
        type: 'NATIVE_BUILD_DOCKER_CLI'
        commands:
            - '.ci/snippet/PREPARE'
            - '.ci/snippet/REQUIRE docker/sdk boot deploy.ci.api.mariadb.robot.yml'
            - '.ci/snippet/RUN docker/sdk up -t'
            - '.ci/snippet/RUN docker/sdk testing composer dump-autoload -o -a --apcu'
            - '.ci/snippet/RUN docker/sdk testing console queue:worker:start --stop-when-empty'
            - '.ci/snippet/RUN script -q -e -c "docker/sdk exec robot-framework robot -v env:api_suite -v docker:True -v dms:true -v glue_env:http://glue.eu.spryker.local -v bapi_env:http://glue-backend.eu.spryker.local -v sapi_env:http://glue-storefront.eu.spryker.local --exclude skip-due-to-issueORskip-due-to-refactoring -d results -s robotframework.tests.api.suite ."'
            - '.ci/snippet/REQUIRE aws configure set default.s3.max_concurrent_requests 80'
            - '.ci/snippet/REQUIRE aws configure set default.s3.max_queue_size 6000'
            - '.ci/snippet/REQUIRE aws configure set default.s3.multipart_threshold 36MB'
            - '.ci/snippet/REQUIRE aws configure set default.s3.multipart_chunksize 16MB'
            - 'export AWS_ACCESS_KEY_ID=$AWS_S3_ACCESS_KEY_ID'
            - 'export AWS_SECRET_ACCESS_KEY=$AWS_S3_SECRET_ACCESS_KEY'
            - 'export AWS_ACCESS_KEY_ID=$ROBOT_TESTS_ARTIFACTS_KEY'
            - 'export AWS_SECRET_ACCESS_KEY=$ROBOT_TESTS_ARTIFACTS_SECRET'
            - '.ci/snippet/ARTEFACTS aws s3 cp ./.robot/results/log.html s3://$ROBOT_TESTS_ARTIFACTS_BUCKET/suite-nonsplit/dms-on/robot-api/$BUDDY_EXECUTION_HASH/PHP8.3MariaDB/log.html'
            - '.ci/snippet/ARTEFACTS echo "Check the logs - https://s3.console.aws.amazon.com/s3/object/${ROBOT_TESTS_ARTIFACTS_BUCKET}?region=eu-central-1&prefix=suite-nonsplit/dms-on/robot-api/${BUDDY_EXECUTION_HASH}/PHP8.3MariaDB/log.html"'
            - '.ci/snippet/ARTEFACTS echo "You must have VPN access to AWS (Spryker-Internal account)"'
            - '.ci/snippet/FINISH'
        run_next_parallel: true
        variables:
            - key: 'SPRYKER_PLATFORM_IMAGE'
              value: 'spryker/php:8.3'
              type: 'VAR'
            - key: 'SPRYKER_CURRENT_REGION'
              value: 'EU'
              type: 'VAR'
            - key: 'SPRYKER_DYNAMIC_STORE_MODE'
              value: 'true'
              type: 'VAR'
            - key: 'TRAVIS'
              value: '1'
              type: 'VAR'
        timeout: 8000
        sync_paths:
            - pipeline_path: '/'
              vm_path: '/home/ubuntu/build'
              direction: 'PIPELINE_TO_VM'
        docker_layer_caching_scope: 'ACTION'
        instance_type: 'GENERAL_MEDIUM'
      - action: 'Master Job Slack Notification failure'
        type: 'BUILD'
        trigger_time: 'ON_FAILURE'
        docker_image_name: 'library/node'
        docker_image_tag: '18'
        variables:
            - key: 'PIPELINE_STATUS'
              value: 'FAILURE'
              type: 'VAR'
        execute_commands:
            - '.ci/snippet/SLACK_NOTIFICATIONS'
        setup_commands:
            - apt-get update && apt-get -y install jq
        shell: 'BASH'
        trigger_conditions:
            - trigger_condition: 'VAR_IS'
              trigger_variable_key: 'BUDDY_EXECUTION_BRANCH'
              trigger_variable_value: 'master'

- pipeline: 'Docker / Alpine / PHP 8.3 / MariaDB / Cypress / Dynamic Store OFF'
  events:
      - type: 'PUSH'
        refs:
            - 'refs/pull/*'
            - 'refs/heads/master'
      - type: 'PULL_REQUEST'
        events:
            - 'labeled'
        branches:
            - '*'
  trigger_conditions:
      - trigger_condition: OR
        trigger_operands:
            - trigger_condition: 'VAR_CONTAINS'
              trigger_variable_value: 'run-compatibility-ci'
              trigger_variable_key: 'BUDDY_RUN_PR_LABELS'
            - trigger_condition: 'VAR_CONTAINS'
              trigger_variable_value: 'run-ssp-compatibility-ci'
              trigger_variable_key: 'BUDDY_RUN_PR_LABELS'
            - trigger_condition: 'VAR_IS'
              trigger_variable_key: 'BUDDY_EXECUTION_BRANCH'
              trigger_variable_value: 'master'
  terminate_stale_runs: true
  auto_clear_cache: true
  fail_on_prepare_env_warning: true
  concurrent_pipeline_runs: true
  clone_depth: 1
  resources: 'NANO'
  actions:
      - action: 'Install Composer'
        type: 'BUILD'
        docker_image_name: 'spryker/php'
        docker_image_tag: '8.3'
        execute_commands:
            - '.ci/snippet/PREPARE'
            - '.ci/snippet/REQUIRE composer config github-oauth.github.com ${GITHUB_TOKEN}'
            - '.ci/snippet/REQUIRE composer install --optimize-autoloader --no-interaction --prefer-install=auto '
            - '.ci/snippet/FINISH'
        shell: 'BASH'
      - action: 'Run tests'
        type: 'NATIVE_BUILD_DOCKER_CLI'
        commands:
            - '.ci/snippet/PREPARE'
            - '.ci/snippet/REQUIRE docker/sdk boot deploy.ci.acceptance.mariadb.dynamic-store-off.cypress.yml'
            - '.ci/snippet/RUN docker/sdk up -t'
            - '.ci/snippet/RUN docker/sdk cli composer dump-autoload -o -a --apcu'
            - '.ci/snippet/RUN docker/sdk cli console queue:worker:start --stop-when-empty'
            - '.ci/snippet/RUN script -q -e -c "docker/sdk exec cypress-tests cp .env.example .env"'
            - |
                if [[ "$BUDDY_RUN_PR_LABELS" == *"run-compatibility-ci"* || "$BUDDY_EXECUTION_BRANCH" == "master" ]]; then
                  .ci/snippet/RUN script -q -e -c "docker/sdk exec cypress-tests npm run cy:ci"
                fi
            - |
                if [[ "$BUDDY_RUN_PR_LABELS" == *"run-ssp-compatibility-ci"* || "$BUDDY_EXECUTION_BRANCH" == "master" ]]; then
                  .ci/snippet/RUN script -q -e -c "docker/sdk exec cypress-tests npm run cy:ci:ssp"
                fi
            - '.ci/snippet/REQUIRE aws configure set default.s3.max_concurrent_requests 80'
            - '.ci/snippet/REQUIRE aws configure set default.s3.max_queue_size 6000'
            - '.ci/snippet/REQUIRE aws configure set default.s3.multipart_threshold 36MB'
            - '.ci/snippet/REQUIRE aws configure set default.s3.multipart_chunksize 16MB'
            - 'export AWS_ACCESS_KEY_ID=$AWS_S3_ACCESS_KEY_ID'
            - 'export AWS_SECRET_ACCESS_KEY=$AWS_S3_SECRET_ACCESS_KEY'
            - 'export AWS_ACCESS_KEY_ID=$ROBOT_TESTS_ARTIFACTS_KEY'
            - 'export AWS_SECRET_ACCESS_KEY=$ROBOT_TESTS_ARTIFACTS_SECRET'
            - '.ci/snippet/ARTEFACTS aws s3 cp ./.cypress s3://$ROBOT_TESTS_ARTIFACTS_BUCKET/suite-nonsplit/dms-off/cypress/$BUDDY_EXECUTION_HASH/PHP8.3MariaDB/ --recursive'
            - '.ci/snippet/ARTEFACTS echo "Check the Cypress screenshots - https://s3.console.aws.amazon.com/s3/buckets/${ROBOT_TESTS_ARTIFACTS_BUCKET}?region=eu-central-1&prefix=suite-nonsplit/dms-off/cypress/${BUDDY_EXECUTION_HASH}/PHP8.3MariaDB/screenshots/&showversions=false"'
            - '.ci/snippet/ARTEFACTS echo "You must have VPN access to AWS (Spryker-Internal account)"'
            - '.ci/snippet/FINISH'
        run_next_parallel: true
        variables:
            - key: 'SPRYKER_PLATFORM_IMAGE'
              value: 'spryker/php:8.3'
              type: 'VAR'
            - key: 'TRAVIS'
              value: '1'
              type: 'VAR'
        timeout: 8000
        sync_paths:
            - pipeline_path: '/'
              vm_path: '/home/ubuntu/build'
              direction: 'PIPELINE_TO_VM'
        docker_layer_caching_scope: 'ACTION'
      - action: 'Master Job Slack Notification failure'
        type: 'BUILD'
        trigger_time: 'ON_FAILURE'
        docker_image_name: 'library/node'
        docker_image_tag: '18'
        variables:
            - key: 'PIPELINE_STATUS'
              value: 'FAILURE'
              type: 'VAR'
        execute_commands:
            - '.ci/snippet/SLACK_NOTIFICATIONS'
        setup_commands:
            - apt-get update && apt-get -y install jq
        shell: 'BASH'
        trigger_conditions:
            - trigger_condition: 'VAR_IS'
              trigger_variable_key: 'BUDDY_EXECUTION_BRANCH'
              trigger_variable_value: 'master'

- pipeline: '[run-ui-ci] PHP 8.3 / MariaDB / Cypress'
  events:
      - type: 'PUSH'
        refs:
            - 'refs/pull/*'
            - 'refs/heads/master'
      - type: 'PULL_REQUEST'
        events:
            - 'labeled'
        branches:
            - '*'
  trigger_conditions:
      - trigger_condition: OR
        trigger_operands:
            - trigger_condition: 'VAR_CONTAINS'
              trigger_variable_value: 'run-ui-ci'
              trigger_variable_key: 'BUDDY_RUN_PR_LABELS'
            - trigger_condition: 'VAR_CONTAINS'
              trigger_variable_value: 'run-latest-ci'
              trigger_variable_key: 'BUDDY_RUN_PR_LABELS'
            - trigger_condition: 'VAR_CONTAINS'
              trigger_variable_value: 'run-ssp-latest-ci'
              trigger_variable_key: 'BUDDY_RUN_PR_LABELS'
            - trigger_condition: 'VAR_IS'
              trigger_variable_key: 'BUDDY_EXECUTION_BRANCH'
              trigger_variable_value: 'master'
  terminate_stale_runs: true
  auto_clear_cache: true
  fail_on_prepare_env_warning: true
  concurrent_pipeline_runs: true
  clone_depth: 1
  resources: 'NANO'
  actions:
      - action: 'Install Composer'
        type: 'BUILD'
        docker_image_name: 'spryker/php'
        docker_image_tag: '8.3'
        execute_commands:
            - '.ci/snippet/PREPARE'
            - '.ci/snippet/REQUIRE composer config github-oauth.github.com ${GITHUB_TOKEN}'
            - '.ci/snippet/REQUIRE composer install --optimize-autoloader --no-interaction --prefer-install=auto '
            - '.ci/snippet/FINISH'
        shell: 'BASH'
      - action: 'Run tests'
        type: 'NATIVE_BUILD_DOCKER_CLI'
        commands:
            - '.ci/snippet/PREPARE'
            - '.ci/snippet/REQUIRE docker/sdk boot deploy.ci.acceptance.mariadb.cypress.yml'
            - '.ci/snippet/RUN docker/sdk up -t'
            - '.ci/snippet/RUN docker/sdk cli composer dump-autoload -o -a --apcu'
            - '.ci/snippet/RUN docker/sdk cli console queue:worker:start --stop-when-empty'
            - '.ci/snippet/RUN script -q -e -c "docker/sdk exec cypress-tests cp .env.dynamic-store.example .env"'
            - |
                if [[ "$BUDDY_RUN_PR_LABELS" == *"run-latest-ci"* || "$BUDDY_RUN_PR_LABELS" == *"run-ui-ci"* || "$BUDDY_EXECUTION_BRANCH" == "master" ]]; then
                  .ci/snippet/RUN script -q -e -c "docker/sdk exec cypress-tests npm run cy:ci"
                fi
            - |
                if [[ "$BUDDY_RUN_PR_LABELS" == *"run-ssp-latest-ci"* || "$BUDDY_EXECUTION_BRANCH" == "master" ]]; then
                  .ci/snippet/RUN script -q -e -c "docker/sdk exec cypress-tests npm run cy:ci:ssp"
                fi
            - ' .ci/snippet/REQUIRE aws configure set default.s3.max_concurrent_requests 80'
            - '.ci/snippet/REQUIRE aws configure set default.s3.max_queue_size 6000'
            - '.ci/snippet/REQUIRE aws configure set default.s3.multipart_threshold 36MB'
            - '.ci/snippet/REQUIRE aws configure set default.s3.multipart_chunksize 16MB'
            - 'export AWS_ACCESS_KEY_ID=$AWS_S3_ACCESS_KEY_ID'
            - 'export AWS_SECRET_ACCESS_KEY=$AWS_S3_SECRET_ACCESS_KEY'
            - 'export AWS_ACCESS_KEY_ID=$ROBOT_TESTS_ARTIFACTS_KEY'
            - 'export AWS_SECRET_ACCESS_KEY=$ROBOT_TESTS_ARTIFACTS_SECRET'
            - '.ci/snippet/ARTEFACTS aws s3 cp ./.cypress s3://$ROBOT_TESTS_ARTIFACTS_BUCKET/suite-nonsplit/dms-on/cypress/$BUDDY_EXECUTION_HASH/PHP8.3MariaDB/ --recursive'
            - '.ci/snippet/ARTEFACTS echo "Check the Cypress screenshots - https://s3.console.aws.amazon.com/s3/buckets/${ROBOT_TESTS_ARTIFACTS_BUCKET}?region=eu-central-1&prefix=suite-nonsplit/dms-on/cypress/${BUDDY_EXECUTION_HASH}/PHP8.3MariaDB/screenshots/&showversions=false"'
            - '.ci/snippet/ARTEFACTS echo "You must have VPN access to AWS (Spryker-Internal account)"'
            - '.ci/snippet/FINISH'
        run_next_parallel: true
        variables:
            - key: 'SPRYKER_PLATFORM_IMAGE'
              value: 'spryker/php:8.3'
              type: 'VAR'
            - key: 'SPRYKER_CURRENT_REGION'
              value: 'EU'
              type: 'VAR'
            - key: 'SPRYKER_DYNAMIC_STORE_MODE'
              value: 'true'
              type: 'VAR'
            - key: 'TRAVIS'
              value: '1'
              type: 'VAR'
        timeout: 8000
        sync_paths:
            - pipeline_path: '/'
              vm_path: '/home/ubuntu/build'
              direction: 'PIPELINE_TO_VM'
        docker_layer_caching_scope: 'ACTION'
      - action: 'Master Job Slack Notification failure'
        type: 'BUILD'
        trigger_time: 'ON_FAILURE'
        docker_image_name: 'library/node'
        docker_image_tag: '18'
        variables:
            - key: 'PIPELINE_STATUS'
              value: 'FAILURE'
              type: 'VAR'
        execute_commands:
            - '.ci/snippet/SLACK_NOTIFICATIONS'
        setup_commands:
            - apt-get update && apt-get -y install jq
        shell: 'BASH'
        trigger_conditions:
            - trigger_condition: 'VAR_IS'
              trigger_variable_key: 'BUDDY_EXECUTION_BRANCH'
              trigger_variable_value: 'master'

- pipeline: '[run-ui-ci] PHP 8.3 / MariaDB / Robot / UI / Group One'
  events:
      - type: 'PULL_REQUEST'
        events:
            - 'reopened'
            - 'labeled'
            - 'opened'
            - 'synchronize'
        branches:
            - '*'
  trigger_conditions:
      - trigger_condition: OR
        trigger_operands:
            - trigger_condition: 'VAR_CONTAINS'
              trigger_variable_value: 'run-ui-ci'
              trigger_variable_key: 'BUDDY_RUN_PR_LABELS'
            - trigger_condition: 'VAR_CONTAINS'
              trigger_variable_value: 'run-latest-ci'
              trigger_variable_key: 'BUDDY_RUN_PR_LABELS'
            - trigger_condition: 'VAR_IS'
              trigger_variable_key: 'BUDDY_EXECUTION_BRANCH'
              trigger_variable_value: 'master'
  terminate_stale_runs: true
  auto_clear_cache: true
  fail_on_prepare_env_warning: true
  concurrent_pipeline_runs: true
  clone_depth: 1
  resources: 'NANO'
  actions:
      - action: 'Install Composer'
        type: 'BUILD'
        docker_image_name: 'spryker/php'
        docker_image_tag: '8.3'
        execute_commands:
            - '.ci/snippet/PREPARE'
            - '.ci/snippet/REQUIRE composer config github-oauth.github.com ${GITHUB_TOKEN}'
            - '.ci/snippet/REQUIRE composer install --optimize-autoloader --no-interaction --prefer-install=auto '
            - '.ci/snippet/FINISH'
        shell: 'BASH'
      - action: 'Docker / Alpine / PHP 8.3 / MariaDB / Robot / UI / Group One'
        type: 'NATIVE_BUILD_DOCKER_CLI'
        commands:
            - '.ci/snippet/PREPARE'
            - '.ci/snippet/REQUIRE docker/sdk boot deploy.ci.acceptance.mariadb.robot.yml'
            - '.ci/snippet/RUN docker/sdk up'
            - '.ci/snippet/RUN docker/sdk cli composer dump-autoload -o -a --apcu'
            - '.ci/snippet/RUN docker/sdk cli console queue:worker:start --stop-when-empty'
            - '.ci/snippet/RUN script -q -e -c "time docker/sdk exec robot-framework robot -v env:ui_suite -v headless:true -v ignore_console:false -v docker:True -v dms:true -v glue_env:http://glue.eu.spryker.local -v bapi_env:http://glue-backend.eu.spryker.local -v sapi_env:http://glue-storefront.eu.spryker.local -v yves_env:http://yves.eu.spryker.local/ -v zed_env:http://backoffice.eu.spryker.local -v mp_root_env:http://mp.eu.spryker.local -v mp_env:http://mp.eu.spryker.local/security-merchant-portal-gui/login/ -d results --exclude skip-due-to-issueORskip-due-to-refactoring --include group_oneANDsmoke -s \"*\".tests.ui.suite ."'
            - '.ci/snippet/RERUN script -q -e -c "docker/sdk exec robot-framework robot -v env:ui_suite -v headless:true -v ignore_console:false -v docker:True -v dms:true -v glue_env:http://glue.eu.spryker.local -v bapi_env:http://glue-backend.eu.spryker.local -v sapi_env:http://glue-storefront.eu.spryker.local -v yves_env:http://yves.eu.spryker.local/ -v zed_env:http://backoffice.eu.spryker.local -v mp_root_env:http://mp.eu.spryker.local -v mp_env:http://mp.eu.spryker.local/security-merchant-portal-gui/login/ -d results/rerun --runemptysuite --rerunfailed results/output.xml --output rerun.xml -s \"*\".tests.ui.suite ."'
            - '.ci/snippet/REQUIRE aws configure set default.s3.max_concurrent_requests 80'
            - '.ci/snippet/REQUIRE aws configure set default.s3.max_queue_size 6000'
            - '.ci/snippet/REQUIRE aws configure set default.s3.multipart_threshold 36MB'
            - '.ci/snippet/REQUIRE aws configure set default.s3.multipart_chunksize 16MB'
            - 'export AWS_ACCESS_KEY_ID=$AWS_S3_ACCESS_KEY_ID'
            - 'export AWS_SECRET_ACCESS_KEY=$AWS_S3_SECRET_ACCESS_KEY'
            - 'export AWS_ACCESS_KEY_ID=$ROBOT_TESTS_ARTIFACTS_KEY'
            - 'export AWS_SECRET_ACCESS_KEY=$ROBOT_TESTS_ARTIFACTS_SECRET'
            - '.ci/snippet/ARTEFACTS script -q -e -c "docker/sdk exec robot-framework rebot -d results --merge results/output.xml results/rerun/rerun.xml"'
            - '.ci/snippet/ARTEFACTS aws s3 cp ./.robot/results/log.html s3://$ROBOT_TESTS_ARTIFACTS_BUCKET/suite-nonsplit/dms-on/robot-ui/$BUDDY_EXECUTION_HASH/PHP8.3MariaDB/group1/log.html'
            - '.ci/snippet/ARTEFACTS echo "Check the logs - https://s3.console.aws.amazon.com/s3/object/${ROBOT_TESTS_ARTIFACTS_BUCKET}?region=eu-central-1&prefix=suite-nonsplit/dms-on/robot-ui/${BUDDY_EXECUTION_HASH}/PHP8.3MariaDB/group1/log.html"'
            - '.ci/snippet/ARTEFACTS echo "You must have VPN access to AWS (Spryker-Internal account)"'
            - '.ci/snippet/FINISH'
        run_next_parallel: true
        variables:
            - key: 'SPRYKER_PLATFORM_IMAGE'
              value: 'spryker/php:8.3'
              type: 'VAR'
            - key: 'SPRYKER_CURRENT_REGION'
              value: 'EU'
              type: 'VAR'
            - key: 'SPRYKER_DYNAMIC_STORE_MODE'
              value: 'true'
              type: 'VAR'
            - key: 'TRAVIS'
              value: '1'
              type: 'VAR'
        timeout: 8000
        sync_paths:
            - pipeline_path: '/'
              vm_path: '/home/ubuntu/build'
              direction: 'PIPELINE_TO_VM'
        docker_layer_caching_scope: 'ACTION'
        instance_type: 'GENERAL_LARGE'
      - action: 'Master Job Slack Notification failure'
        type: 'BUILD'
        trigger_time: 'ON_FAILURE'
        docker_image_name: 'library/node'
        docker_image_tag: '18'
        variables:
            - key: 'PIPELINE_STATUS'
              value: 'FAILURE'
              type: 'VAR'
        execute_commands:
            - '.ci/snippet/SLACK_NOTIFICATIONS'
        setup_commands:
            - apt-get update && apt-get -y install jq
        shell: 'BASH'
        trigger_conditions:
            - trigger_condition: 'VAR_IS'
              trigger_variable_key: 'BUDDY_EXECUTION_BRANCH'
              trigger_variable_value: 'master'

- pipeline: '[run-ui-ci] PHP 8.3 / MariaDB / Robot / UI / Group Two'
  events:
      - type: 'PULL_REQUEST'
        events:
            - 'reopened'
            - 'labeled'
            - 'opened'
            - 'synchronize'
        branches:
            - '*'
  trigger_conditions:
      - trigger_condition: OR
        trigger_operands:
            - trigger_condition: 'VAR_CONTAINS'
              trigger_variable_value: 'run-ui-ci'
              trigger_variable_key: 'BUDDY_RUN_PR_LABELS'
            - trigger_condition: 'VAR_CONTAINS'
              trigger_variable_value: 'run-latest-ci'
              trigger_variable_key: 'BUDDY_RUN_PR_LABELS'
            - trigger_condition: 'VAR_IS'
              trigger_variable_key: 'BUDDY_EXECUTION_BRANCH'
              trigger_variable_value: 'master'
  terminate_stale_runs: true
  auto_clear_cache: true
  fail_on_prepare_env_warning: true
  concurrent_pipeline_runs: true
  clone_depth: 1
  resources: 'NANO'
  actions:
      - action: 'Install Composer'
        type: 'BUILD'
        docker_image_name: 'spryker/php'
        docker_image_tag: '8.3'
        execute_commands:
            - '.ci/snippet/PREPARE'
            - '.ci/snippet/REQUIRE composer config github-oauth.github.com ${GITHUB_TOKEN}'
            - '.ci/snippet/REQUIRE composer install --optimize-autoloader --no-interaction --prefer-install=auto '
            - '.ci/snippet/FINISH'
        shell: 'BASH'
      - action: 'Docker / Alpine / PHP 8.3 / MariaDB / Robot / UI / Group Two'
        type: 'NATIVE_BUILD_DOCKER_CLI'
        commands:
            - '.ci/snippet/PREPARE'
            - '.ci/snippet/REQUIRE docker/sdk boot deploy.ci.acceptance.mariadb.robot.yml'
            - '.ci/snippet/RUN docker/sdk up'
            - '.ci/snippet/RUN docker/sdk cli composer dump-autoload -o -a --apcu'
            - '.ci/snippet/RUN docker/sdk cli console queue:worker:start --stop-when-empty'
            - '.ci/snippet/RUN script -q -e -c "docker/sdk exec robot-framework robot -v env:ui_suite -v headless:true -v ignore_console:false -v docker:True -v dms:true -v glue_env:http://glue.eu.spryker.local -v bapi_env:http://glue-backend.eu.spryker.local -v sapi_env:http://glue-storefront.eu.spryker.local -v yves_env:http://yves.eu.spryker.local -v zed_env:http://backoffice.eu.spryker.local -v mp_root_env:http://mp.eu.spryker.local -v mp_env:http://mp.eu.spryker.local/security-merchant-portal-gui/login/ -d results --exclude skip-due-to-issueORskip-due-to-refactoring --include group_twoANDsmoke -s \"*\".tests.ui.suite ."'
            - '.ci/snippet/RERUN script -q -e -c "docker/sdk exec robot-framework robot -v env:ui_suite -v headless:true -v ignore_console:false -v docker:True -v dms:true -v glue_env:http://glue.eu.spryker.local -v bapi_env:http://glue-backend.eu.spryker.local -v sapi_env:http://glue-storefront.eu.spryker.local -v yves_env:http://yves.eu.spryker.local -v zed_env:http://backoffice.eu.spryker.local -v mp_root_env:http://mp.eu.spryker.local -v mp_env:http://mp.eu.spryker.local/security-merchant-portal-gui/login/ -d results/rerun --runemptysuite --rerunfailed results/output.xml --output rerun.xml -s \"*\".tests.ui.suite ."'
            - '.ci/snippet/REQUIRE aws configure set default.s3.max_concurrent_requests 80'
            - '.ci/snippet/REQUIRE aws configure set default.s3.max_queue_size 6000'
            - '.ci/snippet/REQUIRE aws configure set default.s3.multipart_threshold 36MB'
            - '.ci/snippet/REQUIRE aws configure set default.s3.multipart_chunksize 16MB'
            - 'export AWS_ACCESS_KEY_ID=$AWS_S3_ACCESS_KEY_ID'
            - 'export AWS_SECRET_ACCESS_KEY=$AWS_S3_SECRET_ACCESS_KEY'
            - 'export AWS_ACCESS_KEY_ID=$ROBOT_TESTS_ARTIFACTS_KEY'
            - 'export AWS_SECRET_ACCESS_KEY=$ROBOT_TESTS_ARTIFACTS_SECRET'
            - '.ci/snippet/ARTEFACTS script -q -e -c "docker/sdk exec robot-framework rebot -d results --merge results/output.xml results/rerun/rerun.xml"'
            - '.ci/snippet/ARTEFACTS aws s3 cp ./.robot/results/log.html s3://$ROBOT_TESTS_ARTIFACTS_BUCKET/suite-nonsplit/dms-on/robot-ui/$BUDDY_EXECUTION_HASH/PHP8.3MariaDB/group2/log.html'
            - '.ci/snippet/ARTEFACTS echo "Check the logs - https://s3.console.aws.amazon.com/s3/object/${ROBOT_TESTS_ARTIFACTS_BUCKET}?region=eu-central-1&prefix=suite-nonsplit/dms-on/robot-ui/${BUDDY_EXECUTION_HASH}/PHP8.3MariaDB/group2/log.html"'
            - '.ci/snippet/ARTEFACTS echo "You must have VPN access to AWS (Spryker-Internal account)"'
            - '.ci/snippet/FINISH'
        run_next_parallel: true
        variables:
            - key: 'SPRYKER_PLATFORM_IMAGE'
              value: 'spryker/php:8.3'
              type: 'VAR'
            - key: 'SPRYKER_CURRENT_REGION'
              value: 'EU'
              type: 'VAR'
            - key: 'SPRYKER_DYNAMIC_STORE_MODE'
              value: 'true'
              type: 'VAR'
            - key: 'TRAVIS'
              value: '1'
              type: 'VAR'
        timeout: 8000
        sync_paths:
            - pipeline_path: '/'
              vm_path: '/home/ubuntu/build'
              direction: 'PIPELINE_TO_VM'
        docker_layer_caching_scope: 'ACTION'
        instance_type: 'GENERAL_LARGE'
      - action: 'Master Job Slack Notification failure'
        type: 'BUILD'
        trigger_time: 'ON_FAILURE'
        docker_image_name: 'library/node'
        docker_image_tag: '18'
        variables:
            - key: 'PIPELINE_STATUS'
              value: 'FAILURE'
              type: 'VAR'
        execute_commands:
            - '.ci/snippet/SLACK_NOTIFICATIONS'
        setup_commands:
            - apt-get update && apt-get -y install jq
        shell: 'BASH'
        trigger_conditions:
            - trigger_condition: 'VAR_IS'
              trigger_variable_key: 'BUDDY_EXECUTION_BRANCH'
              trigger_variable_value: 'master'

- pipeline: '[run-ui-ci] PHP 8.3 / MariaDB / Robot / UI / Group Three'
  events:
      - type: 'PULL_REQUEST'
        events:
            - 'reopened'
            - 'labeled'
            - 'opened'
            - 'synchronize'
        branches:
            - '*'
  trigger_conditions:
      - trigger_condition: OR
        trigger_operands:
            - trigger_condition: 'VAR_CONTAINS'
              trigger_variable_value: 'run-ui-ci'
              trigger_variable_key: 'BUDDY_RUN_PR_LABELS'
            - trigger_condition: 'VAR_CONTAINS'
              trigger_variable_value: 'run-latest-ci'
              trigger_variable_key: 'BUDDY_RUN_PR_LABELS'
            - trigger_condition: 'VAR_IS'
              trigger_variable_key: 'BUDDY_EXECUTION_BRANCH'
              trigger_variable_value: 'master'
  terminate_stale_runs: true
  auto_clear_cache: true
  fail_on_prepare_env_warning: true
  concurrent_pipeline_runs: true
  clone_depth: 1
  resources: 'NANO'
  actions:
      - action: 'Install Composer'
        type: 'BUILD'
        docker_image_name: 'spryker/php'
        docker_image_tag: '8.3'
        execute_commands:
            - '.ci/snippet/PREPARE'
            - '.ci/snippet/REQUIRE composer config github-oauth.github.com ${GITHUB_TOKEN}'
            - '.ci/snippet/REQUIRE composer install --optimize-autoloader --no-interaction --prefer-install=auto '
            - '.ci/snippet/FINISH'
        shell: 'BASH'
      - action: 'Docker / Alpine / PHP 8.3 / MariaDB / Robot / UI / Group Three'
        type: 'NATIVE_BUILD_DOCKER_CLI'
        commands:
            - '.ci/snippet/PREPARE'
            - '.ci/snippet/REQUIRE docker/sdk boot deploy.ci.acceptance.mariadb.robot.yml'
            - '.ci/snippet/RUN docker/sdk up'
            - '.ci/snippet/RUN docker/sdk cli composer dump-autoload -o -a --apcu'
            - '.ci/snippet/RUN docker/sdk cli console queue:worker:start --stop-when-empty'
            - '.ci/snippet/RUN script -q -e -c "docker/sdk exec robot-framework robot -v env:ui_suite -v headless:true -v ignore_console:false -v docker:True -v dms:true -v glue_env:http://glue.eu.spryker.local -v bapi_env:http://glue-backend.eu.spryker.local -v sapi_env:http://glue-storefront.eu.spryker.local -v yves_env:http://yves.eu.spryker.local -v zed_env:http://backoffice.eu.spryker.local -v mp_root_env:http://mp.eu.spryker.local -v mp_env:http://mp.eu.spryker.local/security-merchant-portal-gui/login/ -d results --exclude skip-due-to-issueORskip-due-to-refactoring --include group_treeANDsmoke -s \"*\".tests.ui.suite ."'
            - '.ci/snippet/RERUN script -q -e -c "docker/sdk exec robot-framework robot -v env:ui_suite -v headless:true -v ignore_console:false -v docker:True -v dms:true -v glue_env:http://glue.eu.spryker.local -v bapi_env:http://glue-backend.eu.spryker.local -v sapi_env:http://glue-storefront.eu.spryker.local -v yves_env:http://yves.eu.spryker.local -v zed_env:http://backoffice.eu.spryker.local -v mp_root_env:http://mp.eu.spryker.local -v mp_env:http://mp.eu.spryker.local/security-merchant-portal-gui/login/ -d results/rerun --runemptysuite --rerunfailed results/output.xml --output rerun.xml -s \"*\".tests.ui.suite ."'
            - '.ci/snippet/REQUIRE aws configure set default.s3.max_concurrent_requests 80'
            - '.ci/snippet/REQUIRE aws configure set default.s3.max_queue_size 6000'
            - '.ci/snippet/REQUIRE aws configure set default.s3.multipart_threshold 36MB'
            - '.ci/snippet/REQUIRE aws configure set default.s3.multipart_chunksize 16MB'
            - 'export AWS_ACCESS_KEY_ID=$AWS_S3_ACCESS_KEY_ID'
            - 'export AWS_SECRET_ACCESS_KEY=$AWS_S3_SECRET_ACCESS_KEY'
            - 'export AWS_ACCESS_KEY_ID=$ROBOT_TESTS_ARTIFACTS_KEY'
            - 'export AWS_SECRET_ACCESS_KEY=$ROBOT_TESTS_ARTIFACTS_SECRET'
            - '.ci/snippet/ARTEFACTS script -q -e -c "docker/sdk exec robot-framework rebot -d results --merge results/output.xml results/rerun/rerun.xml"'
            - '.ci/snippet/ARTEFACTS aws s3 cp ./.robot/results/log.html s3://$ROBOT_TESTS_ARTIFACTS_BUCKET/suite-nonsplit/dms-on/robot-ui/$BUDDY_EXECUTION_HASH/PHP8.3MariaDB/group3/log.html'
            - '.ci/snippet/ARTEFACTS echo "Check the logs - https://s3.console.aws.amazon.com/s3/object/${ROBOT_TESTS_ARTIFACTS_BUCKET}?region=eu-central-1&prefix=suite-nonsplit/dms-on/robot-ui/${BUDDY_EXECUTION_HASH}/PHP8.3MariaDB/group3/log.html"'
            - '.ci/snippet/ARTEFACTS echo "You must have VPN access to AWS (Spryker-Internal account)"'
            - '.ci/snippet/FINISH'
        run_next_parallel: true
        variables:
            - key: 'SPRYKER_PLATFORM_IMAGE'
              value: 'spryker/php:8.3'
              type: 'VAR'
            - key: 'SPRYKER_CURRENT_REGION'
              value: 'EU'
              type: 'VAR'
            - key: 'SPRYKER_DYNAMIC_STORE_MODE'
              value: 'true'
              type: 'VAR'
            - key: 'TRAVIS'
              value: '1'
              type: 'VAR'
        timeout: 8000
        sync_paths:
            - pipeline_path: '/'
              vm_path: '/home/ubuntu/build'
              direction: 'PIPELINE_TO_VM'
        docker_layer_caching_scope: 'ACTION'
        instance_type: 'GENERAL_LARGE'
      - action: 'Master Job Slack Notification failure'
        type: 'BUILD'
        trigger_time: 'ON_FAILURE'
        docker_image_name: 'library/node'
        docker_image_tag: '18'
        variables:
            - key: 'PIPELINE_STATUS'
              value: 'FAILURE'
              type: 'VAR'
        execute_commands:
            - '.ci/snippet/SLACK_NOTIFICATIONS'
        setup_commands:
            - apt-get update && apt-get -y install jq
        shell: 'BASH'
        trigger_conditions:
            - trigger_condition: 'VAR_IS'
              trigger_variable_key: 'BUDDY_EXECUTION_BRANCH'
              trigger_variable_value: 'master'

- pipeline: 'Docker / Alpine / PHP 8.3 / PostgreSQL / Robot / UI / Dynamic Store Off / Group One'
  events:
      - type: 'PULL_REQUEST'
        events:
            - 'reopened'
            - 'labeled'
            - 'opened'
            - 'synchronize'
        branches:
            - '*'
  trigger_conditions:
      - trigger_condition: OR
        trigger_operands:
            - trigger_condition: 'VAR_CONTAINS'
              trigger_variable_value: 'run-compatibility-ci'
              trigger_variable_key: 'BUDDY_RUN_PR_LABELS'
            - trigger_condition: 'VAR_IS'
              trigger_variable_key: 'BUDDY_EXECUTION_BRANCH'
              trigger_variable_value: 'master'
  terminate_stale_runs: true
  auto_clear_cache: true
  fail_on_prepare_env_warning: true
  concurrent_pipeline_runs: true
  clone_depth: 1
  resources: 'NANO'
  actions:
      - action: 'Install Composer'
        type: 'BUILD'
        docker_image_name: 'spryker/php'
        docker_image_tag: '8.3'
        execute_commands:
            - '.ci/snippet/PREPARE'
            - '.ci/snippet/REQUIRE composer config github-oauth.github.com ${GITHUB_TOKEN}'
            - '.ci/snippet/REQUIRE composer install --optimize-autoloader --no-interaction --prefer-install=auto '
            - '.ci/snippet/FINISH'
        shell: 'BASH'
      - action: 'Docker / Alpine / PHP 8.3 / PostgreSQL / Robot / UI / Dynamic Store Off / Group One'
        type: 'NATIVE_BUILD_DOCKER_CLI'
        commands:
            - '.ci/snippet/PREPARE'
            - '.ci/snippet/REQUIRE docker/sdk boot deploy.ci.acceptance.dynamic-store-off.yml'
            - '.ci/snippet/RUN docker/sdk up'
            - '.ci/snippet/RUN docker/sdk cli composer dump-autoload -o -a --apcu'
            - '.ci/snippet/RUN docker/sdk cli console queue:worker:start --stop-when-empty'
            - '.ci/snippet/RUN script -q -e -c "docker/sdk exec robot-framework robot -v env:ui_suite -v yves_env:http://yves.eu.spryker.local -v headless:true -v ignore_console:false -v db_engine:psycopg2 -v docker:True -d results --exclude skip-due-to-issueORskip-due-to-refactoring --include group_oneANDsmoke -s \"*\".tests.ui.suite ."'
            - '.ci/snippet/RERUN script -q -e -c "docker/sdk exec robot-framework robot -v env:ui_suite -v headless:true -v ignore_console:false -v db_engine:psycopg2 -v docker:True -d results/rerun --runemptysuite --rerunfailed results/output.xml --output rerun.xml -s \"*\".tests.ui.suite ."'
            - '.ci/snippet/REQUIRE aws configure set default.s3.max_concurrent_requests 80'
            - '.ci/snippet/REQUIRE aws configure set default.s3.max_queue_size 6000'
            - '.ci/snippet/REQUIRE aws configure set default.s3.multipart_threshold 36MB'
            - '.ci/snippet/REQUIRE aws configure set default.s3.multipart_chunksize 16MB'
            - 'export AWS_ACCESS_KEY_ID=$AWS_S3_ACCESS_KEY_ID'
            - 'export AWS_SECRET_ACCESS_KEY=$AWS_S3_SECRET_ACCESS_KEY'
            - 'export AWS_ACCESS_KEY_ID=$ROBOT_TESTS_ARTIFACTS_KEY'
            - 'export AWS_SECRET_ACCESS_KEY=$ROBOT_TESTS_ARTIFACTS_SECRET'
            - '.ci/snippet/ARTEFACTS script -q -e -c "docker/sdk exec robot-framework rebot -d results --merge results/output.xml results/rerun/rerun.xml"'
            - '.ci/snippet/ARTEFACTS aws s3 cp ./.robot/results/log.html s3://$ROBOT_TESTS_ARTIFACTS_BUCKET/suite-nonsplit/dms-off/robot-ui/$BUDDY_EXECUTION_HASH/PHP8.3PostgreSQL/group1/log.html'
            - '.ci/snippet/ARTEFACTS echo "Check the logs - https://s3.console.aws.amazon.com/s3/object/${ROBOT_TESTS_ARTIFACTS_BUCKET}?region=eu-central-1&prefix=suite-nonsplit/dms-off/robot-ui/${BUDDY_EXECUTION_HASH}/PHP8.3PostgreSQL/group1/log.html"'
            - '.ci/snippet/ARTEFACTS echo "You must have VPN access to AWS (Spryker-Internal account)"'
            - '.ci/snippet/FINISH'
        run_next_parallel: true
        variables:
            - key: 'SPRYKER_PLATFORM_IMAGE'
              value: 'spryker/php:8.3'
              type: 'VAR'
            - key: 'TRAVIS'
              value: '1'
              type: 'VAR'
        timeout: 8000
        sync_paths:
            - pipeline_path: '/'
              vm_path: '/home/ubuntu/build'
              direction: 'PIPELINE_TO_VM'
        docker_layer_caching_scope: 'ACTION'
        instance_type: 'GENERAL_LARGE'
      - action: 'Master Job Slack Notification failure'
        type: 'BUILD'
        trigger_time: 'ON_FAILURE'
        docker_image_name: 'library/node'
        docker_image_tag: '18'
        variables:
            - key: 'PIPELINE_STATUS'
              value: 'FAILURE'
              type: 'VAR'
        execute_commands:
            - '.ci/snippet/SLACK_NOTIFICATIONS'
        setup_commands:
            - apt-get update && apt-get -y install jq
        shell: 'BASH'
        trigger_conditions:
            - trigger_condition: 'VAR_IS'
              trigger_variable_key: 'BUDDY_EXECUTION_BRANCH'
              trigger_variable_value: 'master'

- pipeline: 'Docker / Alpine / PHP 8.3 / PostgreSQL / Robot / UI / Dynamic Store Off / Group Two'
  events:
      - type: 'PULL_REQUEST'
        events:
            - 'reopened'
            - 'labeled'
            - 'opened'
            - 'synchronize'
        branches:
            - '*'
  trigger_conditions:
      - trigger_condition: OR
        trigger_operands:
            - trigger_condition: 'VAR_CONTAINS'
              trigger_variable_value: 'run-compatibility-ci'
              trigger_variable_key: 'BUDDY_RUN_PR_LABELS'
            - trigger_condition: 'VAR_IS'
              trigger_variable_key: 'BUDDY_EXECUTION_BRANCH'
              trigger_variable_value: 'master'
  terminate_stale_runs: true
  auto_clear_cache: true
  fail_on_prepare_env_warning: true
  concurrent_pipeline_runs: true
  clone_depth: 1
  resources: 'NANO'
  actions:
      - action: 'Install Composer'
        type: 'BUILD'
        docker_image_name: 'spryker/php'
        docker_image_tag: '8.3'
        execute_commands:
            - '.ci/snippet/PREPARE'
            - '.ci/snippet/REQUIRE composer config github-oauth.github.com ${GITHUB_TOKEN}'
            - '.ci/snippet/REQUIRE composer install --optimize-autoloader --no-interaction --prefer-install=auto '
            - '.ci/snippet/FINISH'
        shell: 'BASH'
      - action: 'Docker / Alpine / PHP 8.3 / PostgreSQL / Robot / UI / Dynamic Store Off / Group Two'
        type: 'NATIVE_BUILD_DOCKER_CLI'
        commands:
            - '.ci/snippet/PREPARE'
            - '.ci/snippet/REQUIRE docker/sdk boot deploy.ci.acceptance.dynamic-store-off.yml'
            - '.ci/snippet/RUN docker/sdk up'
            - '.ci/snippet/RUN docker/sdk cli composer dump-autoload -o -a --apcu'
            - '.ci/snippet/RUN docker/sdk cli console queue:worker:start --stop-when-empty'
            - '.ci/snippet/RUN script -q -e -c "docker/sdk exec robot-framework robot -v env:ui_suite -v headless:true -v ignore_console:false -v db_engine:psycopg2 -v docker:True -d results --exclude skip-due-to-issueORskip-due-to-refactoring --include group_twoANDsmoke -s \"*\".tests.ui.suite ."'
            - '.ci/snippet/RERUN script -q -e -c "docker/sdk exec robot-framework robot -v env:ui_suite -v headless:true -v ignore_console:false -v db_engine:psycopg2 -v docker:True -d results/rerun --runemptysuite --rerunfailed results/output.xml --output rerun.xml -s \"*\".tests.ui.suite ."'
            - '.ci/snippet/REQUIRE aws configure set default.s3.max_concurrent_requests 80'
            - '.ci/snippet/REQUIRE aws configure set default.s3.max_queue_size 6000'
            - '.ci/snippet/REQUIRE aws configure set default.s3.multipart_threshold 36MB'
            - '.ci/snippet/REQUIRE aws configure set default.s3.multipart_chunksize 16MB'
            - 'export AWS_ACCESS_KEY_ID=$AWS_S3_ACCESS_KEY_ID'
            - 'export AWS_SECRET_ACCESS_KEY=$AWS_S3_SECRET_ACCESS_KEY'
            - 'export AWS_ACCESS_KEY_ID=$ROBOT_TESTS_ARTIFACTS_KEY'
            - 'export AWS_SECRET_ACCESS_KEY=$ROBOT_TESTS_ARTIFACTS_SECRET'
            - '.ci/snippet/ARTEFACTS script -q -e -c "docker/sdk exec robot-framework rebot -d results --merge results/output.xml results/rerun/rerun.xml"'
            - '.ci/snippet/ARTEFACTS aws s3 cp ./.robot/results/log.html s3://$ROBOT_TESTS_ARTIFACTS_BUCKET/suite-nonsplit/dms-off/robot-ui/$BUDDY_EXECUTION_HASH/PHP8.3PostgreSQL/group2/log.html'
            - '.ci/snippet/ARTEFACTS echo "Check the logs - https://s3.console.aws.amazon.com/s3/object/${ROBOT_TESTS_ARTIFACTS_BUCKET}?region=eu-central-1&prefix=suite-nonsplit/dms-off/robot-ui/${BUDDY_EXECUTION_HASH}/PHP8.3PostgreSQL/group2/log.html"'
            - '.ci/snippet/ARTEFACTS echo "You must have VPN access to AWS (Spryker-Internal account)"'
            - '.ci/snippet/FINISH'
        run_next_parallel: true
        variables:
            - key: 'SPRYKER_PLATFORM_IMAGE'
              value: 'spryker/php:8.3'
              type: 'VAR'
            - key: 'TRAVIS'
              value: '1'
              type: 'VAR'
        timeout: 8000
        sync_paths:
            - pipeline_path: '/'
              vm_path: '/home/ubuntu/build'
              direction: 'PIPELINE_TO_VM'
        docker_layer_caching_scope: 'ACTION'
        instance_type: 'GENERAL_LARGE'
      - action: 'Master Job Slack Notification failure'
        type: 'BUILD'
        trigger_time: 'ON_FAILURE'
        docker_image_name: 'library/node'
        docker_image_tag: '18'
        variables:
            - key: 'PIPELINE_STATUS'
              value: 'FAILURE'
              type: 'VAR'
        execute_commands:
            - '.ci/snippet/SLACK_NOTIFICATIONS'
        setup_commands:
            - apt-get update && apt-get -y install jq
        shell: 'BASH'
        trigger_conditions:
            - trigger_condition: 'VAR_IS'
              trigger_variable_key: 'BUDDY_EXECUTION_BRANCH'
              trigger_variable_value: 'master'

- pipeline: 'Docker / Alpine / PHP 8.3 / PostgreSQL / Robot / UI / Dynamic Store Off / Group Three'
  events:
      - type: 'PULL_REQUEST'
        events:
            - 'reopened'
            - 'labeled'
            - 'opened'
            - 'synchronize'
        branches:
            - '*'
  trigger_conditions:
      - trigger_condition: OR
        trigger_operands:
            - trigger_condition: 'VAR_CONTAINS'
              trigger_variable_value: 'run-compatibility-ci'
              trigger_variable_key: 'BUDDY_RUN_PR_LABELS'
            - trigger_condition: 'VAR_IS'
              trigger_variable_key: 'BUDDY_EXECUTION_BRANCH'
              trigger_variable_value: 'master'
  terminate_stale_runs: true
  auto_clear_cache: true
  fail_on_prepare_env_warning: true
  concurrent_pipeline_runs: true
  clone_depth: 1
  resources: 'NANO'
  actions:
      - action: 'Install Composer'
        type: 'BUILD'
        docker_image_name: 'spryker/php'
        docker_image_tag: '8.3'
        execute_commands:
            - '.ci/snippet/PREPARE'
            - '.ci/snippet/REQUIRE composer config github-oauth.github.com ${GITHUB_TOKEN}'
            - '.ci/snippet/REQUIRE composer install --optimize-autoloader --no-interaction --prefer-install=auto '
            - '.ci/snippet/FINISH'
        shell: 'BASH'
      - action: 'Docker / Alpine / PHP 8.3 / PostgreSQL / Robot / UI / Dynamic Store Off / Group Three'
        type: 'NATIVE_BUILD_DOCKER_CLI'
        commands:
            - '.ci/snippet/PREPARE'
            - '.ci/snippet/REQUIRE docker/sdk boot deploy.ci.acceptance.dynamic-store-off.yml'
            - '.ci/snippet/RUN docker/sdk up'
            - '.ci/snippet/RUN docker/sdk cli composer dump-autoload -o -a --apcu'
            - '.ci/snippet/RUN docker/sdk cli console queue:worker:start --stop-when-empty'
            - '.ci/snippet/RUN script -q -e -c "docker/sdk exec robot-framework robot -v env:ui_suite -v headless:true -v ignore_console:false -v db_engine:psycopg2 -v docker:True -d results --exclude skip-due-to-issueORskip-due-to-refactoring --include group_treeANDsmoke -s \"*\".tests.ui.suite ."'
            - '.ci/snippet/RERUN script -q -e -c "docker/sdk exec robot-framework robot -v env:ui_suite -v headless:true -v ignore_console:false -v db_engine:psycopg2 -v docker:True -d results/rerun --runemptysuite --rerunfailed results/output.xml --output rerun.xml -s \"*\".tests.ui.suite ."'
            - '.ci/snippet/REQUIRE aws configure set default.s3.max_concurrent_requests 80'
            - '.ci/snippet/REQUIRE aws configure set default.s3.max_queue_size 6000'
            - '.ci/snippet/REQUIRE aws configure set default.s3.multipart_threshold 36MB'
            - '.ci/snippet/REQUIRE aws configure set default.s3.multipart_chunksize 16MB'
            - 'export AWS_ACCESS_KEY_ID=$AWS_S3_ACCESS_KEY_ID'
            - 'export AWS_SECRET_ACCESS_KEY=$AWS_S3_SECRET_ACCESS_KEY'
            - 'export AWS_ACCESS_KEY_ID=$ROBOT_TESTS_ARTIFACTS_KEY'
            - 'export AWS_SECRET_ACCESS_KEY=$ROBOT_TESTS_ARTIFACTS_SECRET'
            - '.ci/snippet/ARTEFACTS script -q -e -c "docker/sdk exec robot-framework rebot -d results --merge results/output.xml results/rerun/rerun.xml"'
            - '.ci/snippet/ARTEFACTS aws s3 cp ./.robot/results/log.html s3://$ROBOT_TESTS_ARTIFACTS_BUCKET/suite-nonsplit/dms-off/robot-ui/$BUDDY_EXECUTION_HASH/PHP8.3PostgreSQL/group3/log.html'
            - '.ci/snippet/ARTEFACTS echo "Check the logs - https://s3.console.aws.amazon.com/s3/object/${ROBOT_TESTS_ARTIFACTS_BUCKET}?region=eu-central-1&prefix=suite-nonsplit/dms-off/robot-ui/${BUDDY_EXECUTION_HASH}/PHP8.3PostgreSQL/group3/log.html"'
            - '.ci/snippet/ARTEFACTS echo "You must have VPN access to AWS (Spryker-Internal account)"'
            - '.ci/snippet/FINISH'
        run_next_parallel: true
        variables:
            - key: 'SPRYKER_PLATFORM_IMAGE'
              value: 'spryker/php:8.3'
              type: 'VAR'
            - key: 'TRAVIS'
              value: '1'
              type: 'VAR'
        timeout: 8000
        sync_paths:
            - pipeline_path: '/'
              vm_path: '/home/ubuntu/build'
              direction: 'PIPELINE_TO_VM'
        docker_layer_caching_scope: 'ACTION'
        instance_type: 'GENERAL_LARGE'
      - action: 'Master Job Slack Notification failure'
        type: 'BUILD'
        trigger_time: 'ON_FAILURE'
        docker_image_name: 'library/node'
        docker_image_tag: '18'
        variables:
            - key: 'PIPELINE_STATUS'
              value: 'FAILURE'
              type: 'VAR'
        execute_commands:
            - '.ci/snippet/SLACK_NOTIFICATIONS'
        setup_commands:
            - apt-get update && apt-get -y install jq
        shell: 'BASH'
        trigger_conditions:
            - trigger_condition: 'VAR_IS'
              trigger_variable_key: 'BUDDY_EXECUTION_BRANCH'
              trigger_variable_value: 'master'

