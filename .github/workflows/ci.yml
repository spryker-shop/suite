name: CI

on: [
        push
]

jobs:
    validation:
        name: "CS, ArchSniffer, PHPStan, Security"
        runs-on: ubuntu-18.04
        strategy:
            fail-fast: false
            matrix:
                php-version: [
                    '7.4'
                ]

        env:
            APPLICATION_ENV: devtest
            APPLICATION_STORE: DE
            PROJECT: suite

        steps:
            - uses: actions/checkout@v1
              with:
                  fetch-depth: 1

            - name: Configure sysctl limits
              run: |
                  sudo swapoff -a
                  sudo sysctl -w vm.swappiness=1
                  sudo sysctl -w fs.file-max=262144
                  sudo sysctl -w vm.max_map_count=262144

            - name: Runs Elasticsearch
              uses: elastic/elastic-github-actions/elasticsearch@master
              with:
                  stack-version: 7.6.0
                  port: 10005

            - uses: actions/setup-node@v1
              with:
                  node-version: '12'

            - name: NPM cache
              uses: actions/cache@v2
              with:
                  path: ~/.npm
                  key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
                  restore-keys: |
                      ${{ runner.os }}-node-

            - name: Yarn get cache directory
              id: yarn-cache-dir-path
              run: echo "::set-output name=dir::$(yarn cache dir)"

            - name: Yarn cache
              uses: actions/cache@v2
              id: yarn-cache
              with:
                  path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
                  key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
                  restore-keys: |
                      ${{ runner.os }}-yarn-

            - name: Composer get cache directory
              id: composer-cache
              run: |
                  echo "::set-output name=dir::$(composer config cache-files-dir)"

            - name: Composer cache
              uses: actions/cache@v2
              with:
                  path: ${{ steps.composer-cache.outputs.dir }}
                  key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
                  restore-keys: |
                      ${{ runner.os }}-composer-

            - name: Composer validate
              run: composer validate

            - name: Composer install
              run: |
                  composer --version
                  composer install

            - name: Setup PHP
              uses: shivammathur/setup-php@v2
              with:
                  php-version: ${{ matrix.php-version }}
                  extensions: mbstring, intl, pdo_mysql
                  tools: composer:v2

            - name: Generate transfer objects
              run: vendor/bin/console transfer:generate

            - name: Generate transfer databuilder objects
              run: vendor/bin/console transfer:databuilder:generate

            - name: Propel install
              run: |
                  vendor/bin/console propel:schema:copy
                  vendor/bin/console propel:model:build
                  vendor/bin/console transfer:entity:generate

            - name: Setup search
              run: vendor/bin/console setup:search

            - name: Codecept build
              run: vendor/bin/codecept build --ansi

            - name: Generate autocompletion files
              run: vendor/bin/console dev:ide-auto-completion:generate

            - name: Generate rest API dcoumentation
              run: vendor/bin/console rest-api:generate:documentation

            - name: Frontend install-dependencies
              run: |
                  vendor/bin/console frontend:project:install-dependencies
                  vendor/bin/console frontend:yves:install-dependencies

            - name: Install NPM packages
              run: |
                  sudo npm install -g --unsafe-perm speccy@0.11.0

            - name: Speccy lint Glue specification
              run: speccy lint src/Generated/Glue/Specification/spryker_rest_api.schema.yml --rules=default

            - name: Style lint
              run: node ./frontend/libs/stylelint

            - name: TS lint
              run: node ./frontend/libs/tslint --format stylish

            - name: Front-end Formatter
              run: node ./frontend/libs/formatter

            - name: Validate propel files
              run: |
                  vendor/bin/console propel:schema:validate
                  vendor/bin/console propel:schema:validate-xml-names

            - name: Validate transfer files
              run: vendor/bin/console transfer:validate

            - name: Run CodeStyle checks
              run: vendor/bin/console code:sniff:style

            - name: Run Architecture rules
              run: vendor/bin/phpmd src/ text vendor/spryker/architecture-sniffer/src/ruleset.xml --minimumpriority 2

            - name: Run PHPStan
              run: vendor/bin/phpstan analyze -l 5 -c phpstan.neon src/
            
            - name: Run Security check
              run: vendor/bin/console security:check


    php-74-mariadb-glue-alpine:
        name: "PHP 7.4 / MariaDB / Glue / Alpine"
        runs-on: ubuntu-18.04
        env:
            PROGRESS_TYPE: plain
            SPRYKER_PLATFORM_IMAGE: spryker/php:7.4
            TRAVIS: 1

        steps:
            - uses: actions/checkout@v1
              with:
                  fetch-depth: 1

            - name: Install apt-packages
              run: |
                  sudo apt-get install apache2-utils

            - name: Install docker-compose
              run: |
                  sudo curl -L "https://github.com/docker/compose/releases/download/1.27.4/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
                  sudo chmod +x /usr/local/bin/docker-compose

            - name: Run docker
              run: |
                  git clone https://github.com/spryker/docker-sdk.git ./docker
                  docker/sdk boot deploy.ci.api.mariadb.yml -v
                  docker/sdk up -t -v
                  docker/sdk testing codecept fixtures
                  docker/sdk testing console queue:worker:start --stop-when-empty
                  docker/sdk testing codecept run -c codeception.api.yml

    php-73-postgresql-acceptance-alpine:
        name: "PHP 7.3 / PostgreSQL / Acceptance / Alpine"
        runs-on: ubuntu-18.04
        env:
            PROGRESS_TYPE: plain
            SPRYKER_PLATFORM_IMAGE: spryker/php:7.3
            TRAVIS: 1

        steps:
            - uses: actions/checkout@v1
              with:
                  fetch-depth: 1

            - name: Install apt-packages
              run: |
                  sudo apt-get install apache2-utils

            - name: Install docker-compose
              run: |
                  sudo curl -L "https://github.com/docker/compose/releases/download/1.27.4/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
                  sudo chmod +x /usr/local/bin/docker-compose

            - name: Run docker
              run: |
                  git clone https://github.com/spryker/docker-sdk.git ./docker
                  docker/sdk boot -v deploy.ci.acceptance.yml
                  docker/sdk up -t
                  docker/sdk testing console queue:worker:start --stop-when-empty
                  docker/sdk testing codecept run -c codeception.acceptance.yml


    php-73-postgresql-functional-alpine:
        name: "PHP 7.3 / PostgreSQL / Functional / Alpine"
        runs-on: ubuntu-18.04
        env:
            PROGRESS_TYPE: plain
            SPRYKER_PLATFORM_IMAGE: spryker/php:7.3
            TRAVIS: 1

        steps:
            - uses: actions/checkout@v1
              with:
                  fetch-depth: 1

            - name: Install apt-packages
              run: |
                  sudo apt-get install apache2-utils

            - name: Install docker-compose
              run: |
                  sudo curl -L "https://github.com/docker/compose/releases/download/1.27.4/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
                  sudo chmod +x /usr/local/bin/docker-compose

            - name: Run docker
              run: |
                  git clone https://github.com/spryker/docker-sdk.git ./docker
                  docker/sdk boot -v deploy.ci.acceptance.yml
                  docker/sdk up -t
                  docker/sdk testing console queue:worker:start --stop-when-empty
                  docker/sdk testing codecept run -c codeception.functional.yml

    php-74-mariadb-acceptance-alpine:
        name: "PHP 7.4 / MariaDB / Acceptance / Alpine"
        runs-on: ubuntu-18.04
        env:
            PROGRESS_TYPE: plain
            SPRYKER_PLATFORM_IMAGE: spryker/php:7.4
            TRAVIS: 1

        steps:
            - uses: actions/checkout@v1
              with:
                  fetch-depth: 1

            - name: Install apt-packages
              run: |
                  sudo apt-get install apache2-utils

            - name: Install docker-compose
              run: |
                  sudo curl -L "https://github.com/docker/compose/releases/download/1.27.4/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
                  sudo chmod +x /usr/local/bin/docker-compose

            - name: Run docker
              run: |
                  git clone https://github.com/spryker/docker-sdk.git ./docker
                  docker/sdk boot -v deploy.ci.acceptance.mariadb.yml
                  docker/sdk up -t
                  docker/sdk testing console queue:worker:start --stop-when-empty
                  docker/sdk testing codecept run -c codeception.acceptance.yml


    php-74-mariadb-functional-alpine:
        name: "PHP 7.4 / MariaDB / Functional / Alpine"
        runs-on: ubuntu-18.04
        env:
            PROGRESS_TYPE: plain
            SPRYKER_PLATFORM_IMAGE: spryker/php:7.4
            TRAVIS: 1

        steps:
            - uses: actions/checkout@v1
              with:
                  fetch-depth: 1

            - name: Install apt-packages
              run: |
                  sudo apt-get install apache2-utils

            - name: Install docker-compose
              run: |
                  sudo curl -L "https://github.com/docker/compose/releases/download/1.27.4/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
                  sudo chmod +x /usr/local/bin/docker-compose

            - name: Run docker
              run: |
                  git clone https://github.com/spryker/docker-sdk.git ./docker
                  docker/sdk boot deploy.ci.functional.mariadb.yml -v
                  docker/sdk up -t -v
                  docker/sdk testing codecept run -c codeception.functional.yml


    php-73-postgres-functional-debian:
        name: "PHP 7.3 / PostgreSQL / Functional / Debian"
        runs-on: ubuntu-18.04
        env:
            PROGRESS_TYPE: plain
            SPRYKER_PLATFORM_IMAGE: spryker/php:7.3-debian
            TRAVIS: 1

        steps:
            - uses: actions/checkout@v1
              with:
                  fetch-depth: 1

            - name: Install apt-packages
              run: |
                  sudo apt-get install apache2-utils

            - name: Install docker-compose
              run: |
                  sudo curl -L "https://github.com/docker/compose/releases/download/1.27.4/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
                  sudo chmod +x /usr/local/bin/docker-compose

            - name: Run docker
              run: |
                  git clone https://github.com/spryker/docker-sdk.git ./docker
                  docker/sdk boot deploy.ci.functional.yml -v
                  docker/sdk up -t -v
                  docker/sdk testing codecept run -c codeception.functional.yml


    php-74-frontend-and-assets-alpine:
        name: "PHP 7.4 / Frontend & Assets / Alpine"
        runs-on: ubuntu-18.04
        env:
            PROGRESS_TYPE: plain
            SPRYKER_PLATFORM_IMAGE: spryker/php:7.4
            TRAVIS: 1

        steps:
            - uses: actions/checkout@v1
              with:
                  fetch-depth: 1

            - name: Install apt-packages
              run: |
                  sudo apt-get install apache2-utils

            - name: Install docker-compose
              run: |
                  sudo curl -L "https://github.com/docker/compose/releases/download/1.27.4/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
                  sudo chmod +x /usr/local/bin/docker-compose

            - name: Run docker
              run: |
                  git clone https://github.com/spryker/docker-sdk.git ./docker
                  docker/sdk boot deploy.yml
                  SPRYKER_BUILD_HASH=myhash docker/sdk export images
                  docker run -i --rm -e SPRYKER_NGINX_CGI_HOST_YVES_EU=localhost -e SPRYKER_NGINX_CGI_HOST_ZED_EU=localhost -e SPRYKER_NGINX_CGI_HOST_GLUE_EU=localhost -e SPRYKER_NGINX_CGI_HOST_YVES_US=localhost -e SPRYKER_NGINX_CGI_HOST_GLUE_US=localhost -e SPRYKER_NGINX_CGI_HOST_ZED_US=localhost -e ALLOWED_IP=127.0.0.1 spryker_demo_frontend:1.0-frontend nginx -t
                  docker run -i --rm --entrypoint='' spryker_demo_frontend:1.0-frontend ls -al /data/public/Yves/assets/myhash
                  docker run -i --rm --entrypoint='' spryker_demo_frontend:1.0-frontend ls -al /data/public/Zed/assets/
