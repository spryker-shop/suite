_COMPOSER_INSTALL: &COMPOSER_INSTALL
    - echo "_COMPOSER_INSTALL"
    - COMPOSER_MEMORY_LIMIT=-1 composer install --optimize-autoloader --no-interaction --prefer-install=auto

_COMPOSER_PREFER_MID: &COMPOSER_PREFER_MID
    - echo "_COMPOSER_PREFER_MID"
    - COMPOSER_MEMORY_LIMIT=-1 composer install --no-interaction --prefer-install=auto
    - COMPOSER_MEMORY_LIMIT=-1 composer prefer-mid
    - COMPOSER_MEMORY_LIMIT=-1 composer dumpautoload -o

_COMPOSER_PREFER_LOWEST: &COMPOSER_PREFER_LOWEST
    - echo "_COMPOSER_PREFER_LOWEST"
    - COMPOSER_MEMORY_LIMIT=-1 composer update --prefer-lowest --optimize-autoloader --no-interaction --prefer-install=auto

_SETUP_WEB_INFRASTRUCTURE: &SETUP_WEB_INFRASTRUCTURE
    - echo "_BROWSER_TESTING_BEFORE_INSTALL_SCRIPT"
    - chmod +x config/Shared/ci/travis/*.sh
    - config/Shared/ci/travis/acceptance_env.sh

_ADDONS_ARTIFACTS: &ADDONS_ARTIFACTS
    artifacts:
        region: eu-west-1
        paths:
            - $(find ./data/logs -name "*.log" -not -empty | tr "\n" ":")
            - $(find ./tests/_output/* -not -empty | tr "\n" ":")
            - $(find ./tests/PyzTest/*/*/_output/* -not -empty | tr "\n" ":")
            - $(find ./vendor/spryker/spryker/Bundles/*/tests/_output/* -not -empty | tr "\n" ":")
            - /tmp/chromedriver.log.gz
            - /tmp/yves-error.log
            - /tmp/glue-error.log
            - /tmp/zed-error.log

_ADDONS_APT_SOURCES_BASE_INFRASTRUCTURE: &ADDONS_APT_SOURCES_BASE_INFRASTRUCTURE
    - sourceline: ppa:chris-lea/redis-server
    - sourceline: ppa:ondrej/php

_ADDONS_APT_PACKAGES_BASE_INFRASTRUCTURE: &ADDONS_APT_PACKAGES_BASE_INFRASTRUCTURE
    - redis-tools
    - redis-server
    - rabbitmq-server
    - graphviz
    - libzip-dev
    - awscli
    - gnupg
    - libnss3-dev
    - ca-certificates
    - fonts-liberation
    - libappindicator3-1
    - libasound2
    - libatk-bridge2.0-0
    - libatk1.0-0
    - libc6
    - libcairo2
    - libcups2
    - libdbus-1-3
    - libexpat1
    - libfontconfig1
    - libgbm1
    - libgcc1
    - libglib2.0-0
    - libgtk-3-0
    - libnspr4
    - libnss3
    - libpango-1.0-0
    - libpangocairo-1.0-0
    - libstdc++6
    - libx11-6
    - libx11-xcb1
    - libxcb1
    - libxcomposite1
    - libxcursor1
    - libxdamage1
    - libxext6
    - libxfixes3
    - libxi6
    - libxrandr2
    - libxrender1
    - libxss1
    - libxtst6
    - lsb-release
    - xdg-utils

_ADDONS_BASE_INFRASTRUCTURE: &ADDONS_BASE_INFRASTRUCTURE
    apt:
        update: true
        sources:
            - *ADDONS_APT_SOURCES_BASE_INFRASTRUCTURE
        packages:
            - *ADDONS_APT_PACKAGES_BASE_INFRASTRUCTURE

    hosts:
        - zed.de.spryker.test
        - www.de.spryker.test
        - glue.de.spryker.test

_START_ELASTICSEARCH: &START_ELASTICSEARCH
    - /home/travis/elasticsearch/bin/elasticsearch --daemonize

_STOP_ELASTICSEARCH: &STOP_ELASTICSEARCH
    - pkill -f elasticsearch || true

_INSTALL_ELASTICSEARCH_7: &INSTALL_ELASTICSEARCH_7
    - mkdir -p $HOME/other-download
    - mkdir -p /home/travis/elasticsearch
    - |
        ./config/Shared/ci/travis/download-and-cache-file.sh  \
          https://artifacts.elastic.co/downloads/elasticsearch/elasticsearch-7.6.2-linux-x86_64.tar.gz \
          $HOME/other-download
    - |
        tar \
          xz \
          -f $HOME/other-download/elasticsearch-7.6.2-linux-x86_64.tar.gz \
          --directory=/home/travis/elasticsearch \
          --strip-components=1 > /dev/null
    - *START_ELASTICSEARCH

_INSTALL_ELASTICSEARCH_6: &INSTALL_ELASTICSEARCH_6
    - mkdir -p $HOME/other-download
    - mkdir -p /home/travis/elasticsearch
    - |
        ./config/Shared/ci/travis/download-and-cache-file.sh  \
          https://artifacts.elastic.co/downloads/elasticsearch/elasticsearch-6.8.4.tar.gz \
          $HOME/other-download
    - |
        tar \
          xz \
          -f $HOME/other-download/elasticsearch-6.8.4.tar.gz \
          --directory=/home/travis/elasticsearch \
          --strip-components=1 > /dev/null
    - *START_ELASTICSEARCH

_BACKUP_ELASTICSEARCH: &BACKUP_ELASTICSEARCH
    - *STOP_ELASTICSEARCH
    - mkdir -p $TRAVIS_BUILD_DIR/database_dump/elastic
    - mv /home/travis/elasticsearch/data $TRAVIS_BUILD_DIR/database_dump/elastic/data
    - *START_ELASTICSEARCH

_RESTORE_ELASTICSEARCH: &RESTORE_ELASTICSEARCH
    - rm -rf ~/elasticsearch/data
    - mv $TRAVIS_BUILD_DIR/database_dump/elastic/data /home/travis/elasticsearch/data

_RESTORE_ELASTICSEARCH6: &RESTORE_ELASTICSEARCH6
    - *STOP_ELASTICSEARCH
    - rm -rf ~/elasticsearch/data
    - mv $TRAVIS_BUILD_DIR/es6_data /home/travis/elasticsearch/data
    - *START_ELASTICSEARCH

_BACKUP_REDIS: &BACKUP_REDIS
    - sudo service redis-server stop
    - sudo cp /var/lib/redis/dump.rdb $TRAVIS_BUILD_DIR/database_dump/dump.rdb
    - sudo chown travis:travis $TRAVIS_BUILD_DIR/database_dump/dump.rdb

_BACKUP_MYSQL: &BACKUP_MYSQL
    - mysqldump --password="" --all-databases --single-transaction --quick --lock-tables=false > ./database_dump/mysqldump.sql -u root

_BACKUP_POSTGRES: &BACKUP_POSTGRES
    - pg_dumpall -f ./database_dump/pgdumpall.sql

_AWS_SYNC_CONFIG: &AWS_SYNC_CONFIG
    - aws configure set default.s3.max_concurrent_requests 80
    - aws configure set default.s3.max_queue_size 6000
    - aws configure set default.s3.multipart_threshold 36MB
    - aws configure set default.s3.multipart_chunksize 16MB

_AWS_SYNC_UP_POSTGRES: &AWS_SYNC_UP_POSTGRES
    - echo "_AWS_SYNC_UP_POSTGRES"
    - *AWS_SYNC_CONFIG
    - |
        aws s3 cp $TRAVIS_BUILD_DIR s3://spryker-ci/stage-artifacts/postgres/$TRAVIS_BUILD_NUMBER/ \
          --exclude '.git/*' \
          --exclude '.github/*' \
          --exclude '*.lock' \
          --exclude 'docker/*' \
          --exclude 'node_modules/*' \
          --exclude 'src/Pyz/*' \
          --exclude 'src/SprykerConfig/*' \
          --exclude 'tests/Benchmark/*' \
          --exclude 'vendor/*' \
          --recursive \
          --quiet \
          --expires "$(date -d '+7 days' --utc +'%Y-%m-%dT%H:%M:%SZ')"

_AWS_SYNC_UP_MYSQL: &AWS_SYNC_UP_MYSQL
    - echo "_AWS_SYNC_UP_MYSQL"
    - *AWS_SYNC_CONFIG
    - |
        aws s3 cp $TRAVIS_BUILD_DIR s3://spryker-ci/stage-artifacts/mysql/$TRAVIS_BUILD_NUMBER/ \
          --exclude '.git/*' \
          --exclude '.github/*' \
          --exclude '*.lock' \
          --exclude 'docker/*' \
          --exclude 'node_modules/*' \
          --exclude 'src/Pyz/*' \
          --exclude 'src/SprykerConfig/*' \
          --exclude 'tests/Benchmark/*' \
          --exclude 'vendor/*' \
          --recursive \
          --quiet \
          --expires "$(date -d '+7 days' --utc +'%Y-%m-%dT%H:%M:%SZ')"

_AWS_SYNC_UP_ES: &AWS_SYNC_UP_ES
    - echo "_AWS_SYNC_UP_ES"
    - *AWS_SYNC_CONFIG
    - |
        aws s3 cp $TRAVIS_BUILD_DIR/database_dump/elastic/data s3://spryker-ci/stage-artifacts/es/$TRAVIS_BUILD_NUMBER/es6_data \
          --recursive \
          --quiet \
          --expires "$(date -d '+7 days' --utc +'%Y-%m-%dT%H:%M:%SZ')"

_AWS_SYNC_UP_MYSQL_DUMP: &AWS_SYNC_UP_MYSQL_DUMP
    - echo "_AWS_SYNC_UP_MYSQL_DUMP"
    - *AWS_SYNC_CONFIG
    - |
        aws s3 cp $TRAVIS_BUILD_DIR/database_dump/mysqldump.sql s3://spryker-ci/stage-artifacts/$TRAVIS_BUILD_NUMBER/database_dump/mysqldump.sql \
          --quiet \
          --expires "$(date -d '+7 days' --utc +'%Y-%m-%dT%H:%M:%SZ')"

_AWS_SYNC_DOWN_POSTGRES: &AWS_SYNC_DOWN_POSTGRES
    - echo "_AWS_SYNC_DOWN_POSTGRES"
    - *AWS_SYNC_CONFIG
    - aws s3 cp s3://spryker-ci/stage-artifacts/postgres/$TRAVIS_BUILD_NUMBER $TRAVIS_BUILD_DIR --recursive --quiet

_AWS_SYNC_DOWN_MYSQL: &AWS_SYNC_DOWN_MYSQL
    - echo "_AWS_SYNC_DOWN"
    - *AWS_SYNC_CONFIG
    - aws s3 cp s3://spryker-ci/stage-artifacts/mysql/$TRAVIS_BUILD_NUMBER $TRAVIS_BUILD_DIR --recursive --quiet

_AWS_SYNC_DOWN_ES6: &AWS_SYNC_DOWN_ES6
    - echo "_AWS_SYNC_DOWN_ES6"
    - *AWS_SYNC_CONFIG
    - aws s3 cp s3://spryker-ci/stage-artifacts/es/$TRAVIS_BUILD_NUMBER $TRAVIS_BUILD_DIR --recursive --quiet

_RESTORE_BACKUP: &RESTORE_BACKUP
    - sudo service redis-server stop
    - sudo cp $TRAVIS_BUILD_DIR/database_dump/dump.rdb /var/lib/redis/dump.rdb
    - sudo chown redis:redis /var/lib/redis/dump.rdb
    - sudo service redis-server start
    - *STOP_ELASTICSEARCH
    - *RESTORE_ELASTICSEARCH
    - *START_ELASTICSEARCH

_RESTORE_MYSQL_BACKUP: &RESTORE_MYSQL_BACKUP
    - mysql -u root < $TRAVIS_BUILD_DIR/database_dump/mysqldump.sql
    - *RESTORE_BACKUP

_RESTORE_POSTGRES_BACKUP: &RESTORE_POSTGRES_BACKUP
    - psql -p $POSTGRES_PORT -f $TRAVIS_BUILD_DIR/database_dump/pgdumpall.sql
    - *RESTORE_BACKUP

_CHROMDRIVER_DOWNLOAD: &CHROMDRIVER_DOWNLOAD
    - curl -L "https://github.com/spryker/docker-chromedriver/archive/master.zip" -o $HOME/chromium-ecosystem/docker-chromedriver.zip
    - rm -rf $HOME/chromium-ecosystem/docker-chromedriver-master
    - unzip -o $HOME/chromium-ecosystem/docker-chromedriver.zip -d $HOME/chromium-ecosystem/
    - rm -rf $HOME/chromium-ecosystem/*.zip
    - export CHROMEDRIVER_REVISION=814168

_BEFORE_INSTALL_SCRIPT: &BEFORE_INSTALL_SCRIPT
    - echo "_BEFORE_INSTALL_SCRIPT"
    - nvm install 12 > /dev/null
    - nvm use 12
    - mkdir -p shared/data/common/jenkins
    - mkdir -p shared/data/common/jenkins/jobs
    - mkdir -p data/cache -m 0777
    - mkdir -p data/logs -m 0777
    - chmod -R 777 data/
    - chmod -R 660 config/Zed/dev_only_private.key
    - chmod -R 660 config/Zed/dev_only_public.key
    - chmod -R a+x config/Shared/ci/travis/
    - phpenv config-add config/Shared/ci/travis/travis.php.ini
    - phpenv config-rm xdebug.ini
    - echo "extension = redis.so" >> ~/.phpenv/versions/$(phpenv version-name)/etc/php.ini

_INSTALL_CHROMEDRIVER: &INSTALL_CHROMEDRIVER
    - . $HOME/chromium-ecosystem/docker-chromedriver-master/chromium-installer $CHROMEDRIVER_REVISION $HOME/chromium-ecosystem false

_INSTALL_MAILCATCHER: &INSTALL_MAILCATCHER
    - echo "_INSTALL_MAILCATCHER"
    - config/Shared/ci/travis/install_mailcatcher.sh

_INSTALL_SCRIPT: &INSTALL_SCRIPT
    - echo "_INSTALL_SCRIPT"
    - *INSTALL_CHROMEDRIVER
    - *INSTALL_MAILCATCHER
    - *INSTALL_ELASTICSEARCH_7

_INSTALL_SCRIPT_PREFER_LOWEST: &INSTALL_SCRIPT_PREFER_LOWEST
    - *INSTALL_CHROMEDRIVER
    - *INSTALL_MAILCATCHER
    - *INSTALL_ELASTICSEARCH_6

_VALIDATION_SCRIPT: &VALIDATION_SCRIPT
    - echo "_VALIDATION_SCRIPT"
    - chmod +x tests/*.sh
    - vendor/bin/console code:propel:validate-abstract
    - vendor/bin/console propel:schema:validate
    - vendor/bin/console propel:schema:validate-xml-names
    - vendor/bin/console transfer:validate
    - tests/travis_check_touched_modules.sh
    - tests/travis_check_untracked.sh
    - vendor/bin/spryker-dev-console dev:validate-module-schemas
    - vendor/bin/spryker-dev-console dev:validate-module-databuilders
    - vendor/bin/console dev:composer:replace -d -v
    - vendor/bin/spryker-dev-console dev:sync-composer -d
    - vendor/bin/console dev:dependency:find
    - vendor/bin/console dev:composer:update-json-files -d -v
    - vendor/bin/console dev:composer:validate-json-files
    - vendor/bin/console code:sniff:style
    - vendor/bin/phpmd src/ text vendor/spryker/architecture-sniffer/src/ruleset.xml --minimumpriority 2
    - vendor/bin/phpstan analyze -c phpstan.neon -l 5 src/
    - composer psalm

    - npm install
    - npm install speccy@0.11.0 -g
    - speccy lint src/Generated/Glue/Specification/spryker_rest_api.schema.yml --rules=default

_VALIDATION_SCRIPT_PHP8: &VALIDATION_SCRIPT_PHP8
    - echo "_VALIDATION_SCRIPT"
    - chmod +x tests/*.sh
    - vendor/bin/console code:propel:validate-abstract
    - vendor/bin/console propel:schema:validate
    - vendor/bin/console propel:schema:validate-xml-names
    - vendor/bin/console transfer:validate
    - tests/travis_check_touched_modules.sh
    - tests/travis_check_untracked.sh
    - vendor/bin/spryker-dev-console dev:validate-module-schemas
    - vendor/bin/spryker-dev-console dev:validate-module-databuilders
    - vendor/bin/console dev:composer:replace -d -v
    - vendor/bin/spryker-dev-console dev:sync-composer -d
    - vendor/bin/console dev:dependency:find
    - vendor/bin/console dev:composer:update-json-files -d -v
    - vendor/bin/console dev:composer:validate-json-files
    - vendor/bin/console code:sniff:style
    - vendor/bin/phpstan analyze -c phpstan.neon -l 5 src/
    - composer psalm

    - npm install
    - npm install speccy@0.11.0 -g
    - speccy lint src/Generated/Glue/Specification/spryker_rest_api.schema.yml --rules=default

_VALIDATION_FRONT_END_SCRIPT: &VALIDATION_FRONT_END_SCRIPT
    - echo "_VALIDATION_FRONT_END_SCRIPT"
    - npm install
    - node ./frontend/libs/stylelint
    - node ./frontend/libs/tslint --format stylish
    - node ./frontend/libs/formatter

_SECURITY_CHECK_SCRIPT: &SECURITY_CHECK_SCRIPT
    - vendor/bin/console security:check

_BROWSER_TESTING_SCRIPT: &BROWSER_TESTING_SCRIPT
    - timeout 45m bash -c "${CHROMEDRIVER_BINARY} --port=4444 --whitelisted-ips= --url-base=/wd/hub --log-path=/tmp/chromedriver.log --log-level=DEBUG">/dev/null &
    - vendor/bin/codecept run -g EndToEnd -g Presentation -x DockerOnly --ext DotReporter

_TESTING_SCRIPT: &TESTING_SCRIPT
    - vendor/bin/codecept run -c codeception.functional.stage0.yml --ext DotReporter
    - vendor/bin/codecept run -c codeception.functional.yml --ext DotReporter
    - vendor/bin/codecept run -c codeception.functional.stage2.yml --ext DotReporter
    - vendor/bin/codecept run -c codeception.functional.glue.yml --ext DotReporter

_BROWSER_TESTING_AFTER_SCRIPT: &BROWSER_TESTING_AFTER_SCRIPT
    - if [[ $TRAVIS_TEST_RESULT == 0 ]] ; then rm /tmp/chromedriver.log ; fi
    - if [[ $TRAVIS_TEST_RESULT == 1 ]] ; then gzip --best /tmp/chromedriver.log ; fi

_DOCKER_BUILD_TEMPLATE: &DOCKER_BUILD_TEMPLATE
    stage: test
    os: linux
    dist: bionic
    language: shell
    addons:
        hosts:
            - yves.de.spryker.local
            - zed.de.spryker.local
            - glue.de.spryker.local
        apt:
            packages:
                - apache2-utils
                - apt-transport-https
                - ca-certificates
                - curl
                - gnupg-agent
                - pigz
                - software-properties-common
            sources:
                - sourceline: 'deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable'
                  key_url: https://download.docker.com/linux/ubuntu/gpg
    install:
        - echo eyAiZXhwZXJpbWVudGFsIiA6IHRydWUsICJmZWF0dXJlcyIgOiB7ICJidWlsZGtpdCI6IHRydWUgfSB9Cg==|base64 -d|sudo tee /etc/docker/daemon.json
        - sudo apt-get install --only-upgrade docker-ce -y
        - sudo curl -L "https://github.com/docker/compose/releases/download/1.24.0/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
        - sudo chmod +x /usr/local/bin/docker-compose
    before_install:
        - |
            ./config/Shared/ci/travis/download-and-cache-file.sh  \
              https://github.com/docker/docker-credential-helpers/releases/download/v0.6.3/docker-credential-pass-v0.6.3-amd64.tar.gz \
              $HOME/other-download
    before_script:
        - ./config/Shared/ci/travis/docker-credentials.sh
    after_script: skip

version: ~> 1.0

env:
    global:
        - APPLICATION_ENV=ci.pgsql
        - APPLICATION_STORE=DE
        - SPRYKER_TESTING_ENABLED=1
        - PROJECT=suite
        - ARTIFACTS_KEY=AKIAJD43J5ACVDJKUXLA
        - ARTIFACTS_SECRET=$AWS_S3_SECRET_ACCESS_KEY
        - ARTIFACTS_BUCKET=spryker-ci
        - AWS_ACCESS_KEY_ID=AKIAJD43J5ACVDJKUXLA
        - AWS_SECRET_ACCESS_KEY=$AWS_S3_SECRET_ACCESS_KEY
        - AWS_DEFAULT_REGION=eu-west-1
        - POSTGRES_PORT="5432"
        - PGPORT="5432"
        - secure: 'C0grf6C5zvHayJK2OpdqLGyTmfX1MXvHciwtXHggToHKvsvuNgJmufAljF4h/+s/FBqq2ZFenx6SYJ7ZyF3TsUxx8d43r01C7F7XfjCVH0Pq9e55gADRCsLnrKMS+f9ifKwgb84svSFJn6CDxSlNFij5XDf4tXRwpw8mK+WXC3vFE1upbl+E5kizS8SuQbj0WOQ4nERH0Km+47AjiTIaux7d+8QkUUzvrbkqbCQ/eeTySkZyLO4t16DJXMYNgjskWCTVjnjK81Ovl9a8EmHZ31zFSSbM5OSNSTjo36yOlKgkvY7hQ/I5qfr3ZtN2gyIvYXCnUF2xyX8OP8VfUUgiMEXxo3qH8bxynEm9xgVq0yjRKgY5WC9VX0IoX8QYnZKbOVJIpgDIBCNm+A80ohgjWzr2MeZv/tnyIuVEldMJsS22RtM4Ml++a33cSsCIggMYUZzZv5rWaaJzd3mCcbLBp0Bij1hBG/jOybpMJa7ph1lD2BiyVdKOGEruukOWWvlkVEDQEir4/P/A4OK76hDZT7imILVQ3txCDcJsYXWVrRgnVh9ZV0vUK4lM3eTJsQeYmtFPfNBlxFXczx78slLWBDg6x1uUc6s8Ld4eDZJXUiYn27gqmzgUbJskNpvEuZfZBRJKJfzYwOyeqJEn8cc/N1xZ8LN+mFko9wciDodTxXE='
        - secure: 'SmjbeRZILMQoKXnU2pF8z6awbPgeQ+mIsRDbBuHG5djKo1temzZX54I5qknhHvr7LL1KDg0KIcznW2GrnjaqwDA/mdOSoubmw8nqa3jKwAtUu+Z/6tSdR2rsrpIvoMfcqQ2993MY9uba3vcseA5SnZHAh3Epfb6wGFdjIr06etwV/qs2jQgjrkMlAAUHWZQHkpENnSIEvTz6Znci5k7XbMDoyeaKqw6azBH2+xF9wXcrrxRyIAv92cxLuVdjfugera+BLGqnzydApHvYupCnugPJdMSVMQfJwLXG1PNlKlIur/dE4Y3CXBhEscrJjthwwhAQpA06qoMwxuXliY+cl4DrlJSrSSSVrHI1smpcgM1eXJzZpjCWb5jDe+bSdVLIbcddR+IcxjgwrOkPwcuff18+8VfrY/j49cst0nsjh1zfi0OR6ikfD/cLGagYGI8qR5PSPjSAVPTJybANqS/xLr/7an0T1kcAmw9zWhEp0Hj9hGBx8G8COOr0Yai3YiGSUizniIkSj5v9SL9gicTW99Uvi35UQJkH1AV8Bwlp3jzgFmUr4VHszYtZII6OtM4kKpF93xntrVZgdT/JV6+B9BKtXTV2xTf/IO50/A/orYXO6sRHIIkcuORsM/NXl7bEOzcMmLc+BZy21C1CK4V6DdPS/hwVAtj2wap3oQtQTdg='

branches:
    only:
        - master
        - /feature\/[a-z]+-\d+\/(master|dev).+|feature\/[a-z]+-\d+\/[a-z]+-\d+\/(master|dev).+/
        - /(bugfix|hotfix|beta)\/.+/

cache:
    directories:
        - $HOME/other-downloads
        - $HOME/.composer/cache
        - $HOME/.yarn/cache
        - $HOME/.rvm/gems # Mailcatcher is a ruby gem, takes 5 minutes to install.
        - $HOME/.nvm/.cache
        - /tmp/pear/cache/
        - $HOME/chromium-ecosystem
        - /tmp/phpstan/

notifications:
    email: false
    webhooks:
        - https://release.spryker.com/ci-webhooks/add

os: linux
dist: bionic
language: php

git:
    depth: 1

stages:
    - Build
    - Test

jobs:
    fast_finish: true
    include:
        - name: Code generation, fill databases (PostgreSQL).
          php: '7.4'
          stage: Build
          before_install:
              - *BEFORE_INSTALL_SCRIPT
          install:
              - *COMPOSER_INSTALL
              - *INSTALL_SCRIPT
          before_script:
              - *SETUP_WEB_INFRASTRUCTURE
          script:
              - vendor/bin/install DE -r ci
              - mkdir ./database_dump
              - *BACKUP_ELASTICSEARCH
              - *BACKUP_POSTGRES
              - *BACKUP_REDIS
          after_success:
              - *AWS_SYNC_UP_POSTGRES
          addons:
              postgresql: 9.6
              <<: *ADDONS_BASE_INFRASTRUCTURE

        - name: Code generation, fill databases (MySQL).
          php: '7.4'
          stage: Build
          env:
              - APPLICATION_ENV=ci.mysql
          before_install:
              - *BEFORE_INSTALL_SCRIPT
          install:
              - *COMPOSER_INSTALL
              - *INSTALL_SCRIPT
          before_script:
              - *SETUP_WEB_INFRASTRUCTURE
          script:
              - vendor/bin/install DE -r ci
              - mkdir ./database_dump
              - *BACKUP_ELASTICSEARCH
              - *BACKUP_MYSQL
              - *BACKUP_REDIS
          after_success:
              - *AWS_SYNC_UP_MYSQL
          addons:
              mariadb: 10.3
              <<: *ADDONS_BASE_INFRASTRUCTURE

        - name: ElasticSearch 6.
          php: '7.4'
          stage: Build
          env:
              - APPLICATION_ENV=ci.mysql
          before_install:
              - *BEFORE_INSTALL_SCRIPT
          install:
              - *COMPOSER_PREFER_LOWEST
              - *INSTALL_SCRIPT_PREFER_LOWEST
          before_script:
              - *SETUP_WEB_INFRASTRUCTURE
          script:
              - vendor/bin/install DE -r ci
              - mkdir ./database_dump
              - *BACKUP_ELASTICSEARCH
          after_success:
              - *AWS_SYNC_UP_ES
          addons:
              mariadb: 10.3
              <<: *ADDONS_BASE_INFRASTRUCTURE

        - name: Security check
          php: '7.4'
          stage: Test
          before_install:
              - *AWS_SYNC_DOWN_POSTGRES
              - *BEFORE_INSTALL_SCRIPT
          install:
              - *COMPOSER_INSTALL
          script:
              - *SECURITY_CHECK_SCRIPT
          addons:
              <<: *ADDONS_BASE_INFRASTRUCTURE

        - name: JS Validation
          php: '7.4'
          stage: Test
          script:
              - *VALIDATION_FRONT_END_SCRIPT

        - name: PHP Validation
          php: '7.4'
          stage: Test
          before_install:
              - *AWS_SYNC_DOWN_POSTGRES
              - *BEFORE_INSTALL_SCRIPT
          install:
              - *COMPOSER_INSTALL
          script:
              - *VALIDATION_SCRIPT
          addons:
              <<: *ADDONS_BASE_INFRASTRUCTURE

        - name: PHP Validation (prefer-lowest)
          php: '7.3'
          stage: Test
          before_install:
              - *AWS_SYNC_DOWN_POSTGRES
              - *BEFORE_INSTALL_SCRIPT
          install:
              - *COMPOSER_PREFER_LOWEST
          script:
              - *VALIDATION_SCRIPT
          addons:
              <<: *ADDONS_BASE_INFRASTRUCTURE

        - name: PHPStan spryker/spryker
          php: '7.4'
          stage: Test
          before_install:
              - *AWS_SYNC_DOWN_POSTGRES
              - *BEFORE_INSTALL_SCRIPT
          install:
              - *COMPOSER_INSTALL
          script:
              - vendor/bin/console code:phpstan -m Spryker.all -v
          addons:
              <<: *ADDONS_BASE_INFRASTRUCTURE

        - name: PHPStan spryker/spryker (prefer-lowest)
          php: '7.3'
          stage: Test
          before_install:
              - *AWS_SYNC_DOWN_POSTGRES
              - *BEFORE_INSTALL_SCRIPT
          install:
              - *COMPOSER_PREFER_LOWEST
          script:
              - vendor/bin/console code:phpstan -m Spryker.all -v
          addons:
              <<: *ADDONS_BASE_INFRASTRUCTURE

        - name: PHPStan spryker/spryker-shop
          php: '7.4'
          stage: Test
          before_install:
              - *AWS_SYNC_DOWN_POSTGRES
              - *BEFORE_INSTALL_SCRIPT
          install:
              - *COMPOSER_INSTALL
          script:
              - vendor/bin/console code:phpstan -m SprykerShop.all -v
          addons:
              <<: *ADDONS_BASE_INFRASTRUCTURE

        - name: PHPStan spryker/spryker-shop (prefer-lowest)
          php: '7.3'
          stage: Test
          before_install:
              - *AWS_SYNC_DOWN_POSTGRES
              - *BEFORE_INSTALL_SCRIPT
          install:
              - *COMPOSER_PREFER_LOWEST
          script:
              - vendor/bin/console code:phpstan -m SprykerShop.all -v
          addons:
              <<: *ADDONS_BASE_INFRASTRUCTURE

        - name: PHP 7.4 / MariaDB / Browser Testing (Presentation)
          php: '7.4'
          stage: Test
          env:
              - APPLICATION_ENV=ci.mysql
          before_install:
              - *AWS_SYNC_DOWN_MYSQL
              - *BEFORE_INSTALL_SCRIPT
              - *CHROMDRIVER_DOWNLOAD
          install:
              - *COMPOSER_INSTALL
              - *INSTALL_SCRIPT
              - *SETUP_WEB_INFRASTRUCTURE
          before_script:
              - *RESTORE_MYSQL_BACKUP
          script:
              - *BROWSER_TESTING_SCRIPT
          after_script:
              - *BROWSER_TESTING_AFTER_SCRIPT
          addons:
              mariadb: 10.3
              <<: *ADDONS_BASE_INFRASTRUCTURE
              <<: *ADDONS_ARTIFACTS

        - name: PHP 7.4 / MariaDB / Browser Testing (Presentation, prefer-mid)
          php: '7.4'
          stage: Test
          env:
              - APPLICATION_ENV=ci.mysql
          before_install:
              - *AWS_SYNC_DOWN_MYSQL
              - *BEFORE_INSTALL_SCRIPT
              - *CHROMDRIVER_DOWNLOAD
          install:
              - *COMPOSER_PREFER_MID
              - *INSTALL_SCRIPT
              - *SETUP_WEB_INFRASTRUCTURE
          before_script:
              - *RESTORE_MYSQL_BACKUP
          script:
              - *BROWSER_TESTING_SCRIPT
          after_script:
              - *BROWSER_TESTING_AFTER_SCRIPT
          addons:
              mariadb: 10.3
              <<: *ADDONS_BASE_INFRASTRUCTURE
              <<: *ADDONS_ARTIFACTS

        - name: PHP 7.3 / MariaDB / Browser Testing (Presentation)
          php: '7.3'
          stage: Test
          env:
              - APPLICATION_ENV=ci.mysql
          before_install:
              - *AWS_SYNC_DOWN_MYSQL
              - *BEFORE_INSTALL_SCRIPT
              - *CHROMDRIVER_DOWNLOAD
          install:
              - *COMPOSER_INSTALL
              - *INSTALL_SCRIPT
              - *SETUP_WEB_INFRASTRUCTURE
          before_script:
              - *RESTORE_MYSQL_BACKUP
          script:
              - *BROWSER_TESTING_SCRIPT
          after_script:
              - *BROWSER_TESTING_AFTER_SCRIPT
          addons:
              mariadb: 10.3
              <<: *ADDONS_BASE_INFRASTRUCTURE
              <<: *ADDONS_ARTIFACTS

        - name: PHP 7.3 / MariaDB / Browser Testing (Presentation, prefer-lowest)
          php: '7.3'
          stage: Test
          env:
              - APPLICATION_ENV=ci.mysql
          before_install:
              - *AWS_SYNC_DOWN_MYSQL
              - *AWS_SYNC_DOWN_ES6
              - *BEFORE_INSTALL_SCRIPT
              - *CHROMDRIVER_DOWNLOAD
          install:
              - *COMPOSER_PREFER_LOWEST
              - *INSTALL_SCRIPT_PREFER_LOWEST
              - *SETUP_WEB_INFRASTRUCTURE
          before_script:
              - *RESTORE_MYSQL_BACKUP
              - *RESTORE_ELASTICSEARCH6
          script:
              - *BROWSER_TESTING_SCRIPT
          after_script:
              - *BROWSER_TESTING_AFTER_SCRIPT
          addons:
              mariadb: 10.3
              <<: *ADDONS_BASE_INFRASTRUCTURE
              <<: *ADDONS_ARTIFACTS

        - name: PHP 7.4 / MariaDB / Testing (Business, Communication, ...)
          php: '7.4'
          stage: Test
          env:
              - APPLICATION_ENV=ci.mysql
          before_install:
              - *AWS_SYNC_DOWN_MYSQL
              - *BEFORE_INSTALL_SCRIPT
          install:
              - *COMPOSER_INSTALL
              - *INSTALL_SCRIPT
              - *SETUP_WEB_INFRASTRUCTURE
          before_script:
              - *RESTORE_MYSQL_BACKUP
          script:
              - *TESTING_SCRIPT
          after_script:
              - *BROWSER_TESTING_AFTER_SCRIPT
          addons:
              mariadb: 10.3
              <<: *ADDONS_BASE_INFRASTRUCTURE

        - name: PHP 7.4 / MariaDB / Testing (Business, Communication, ..., prefer-mid)
          php: '7.4'
          stage: Test
          env:
              - APPLICATION_ENV=ci.mysql
          before_install:
              - *AWS_SYNC_DOWN_MYSQL
              - *BEFORE_INSTALL_SCRIPT
          install:
              - *COMPOSER_PREFER_MID
              - *INSTALL_SCRIPT
              - *SETUP_WEB_INFRASTRUCTURE
          before_script:
              - *RESTORE_MYSQL_BACKUP
          script:
              - *TESTING_SCRIPT
          after_script:
              - *BROWSER_TESTING_AFTER_SCRIPT
          addons:
              mariadb: 10.3
              <<: *ADDONS_BASE_INFRASTRUCTURE

        - name: PHP 7.3 / MariaDB / Testing (Business, Communication, ...)
          php: '7.3'
          stage: Test
          env:
              - APPLICATION_ENV=ci.mysql
          before_install:
              - *AWS_SYNC_DOWN_MYSQL
              - *BEFORE_INSTALL_SCRIPT
          install:
              - *COMPOSER_INSTALL
              - *INSTALL_SCRIPT
              - *SETUP_WEB_INFRASTRUCTURE
          before_script:
              - *RESTORE_MYSQL_BACKUP
          script:
              - *TESTING_SCRIPT
          after_script:
              - *BROWSER_TESTING_AFTER_SCRIPT
          addons:
              mariadb: 10.3
              <<: *ADDONS_BASE_INFRASTRUCTURE

        - name: PHP 7.3 / MariaDB / Testing (Business, Communication, ..., prefer-lowest)
          php: '7.3'
          stage: Test
          env:
              - APPLICATION_ENV=ci.mysql
          before_install:
              - *AWS_SYNC_DOWN_MYSQL
              - *AWS_SYNC_DOWN_ES6
              - *BEFORE_INSTALL_SCRIPT
          install:
              - *COMPOSER_PREFER_LOWEST
              - *INSTALL_SCRIPT_PREFER_LOWEST
              - *SETUP_WEB_INFRASTRUCTURE
          before_script:
              - *RESTORE_MYSQL_BACKUP
              - *RESTORE_ELASTICSEARCH6
          script:
              - *TESTING_SCRIPT
          after_script:
              - *BROWSER_TESTING_AFTER_SCRIPT
          addons:
              mariadb: 10.3
              <<: *ADDONS_BASE_INFRASTRUCTURE

        - name: PHP 7.4 / PostgreSQL 9.6 / Testing (Presentation)
          php: '7.4'
          stage: Test
          before_install:
              - *AWS_SYNC_DOWN_POSTGRES
              - *BEFORE_INSTALL_SCRIPT
              - *CHROMDRIVER_DOWNLOAD
          install:
              - *COMPOSER_INSTALL
              - *INSTALL_SCRIPT
              - *SETUP_WEB_INFRASTRUCTURE
          before_script:
              - *RESTORE_POSTGRES_BACKUP
          script:
              - *BROWSER_TESTING_SCRIPT
          after_script:
              - *BROWSER_TESTING_AFTER_SCRIPT
          addons:
              <<: *ADDONS_BASE_INFRASTRUCTURE
              <<: *ADDONS_ARTIFACTS
              postgresql: 9.6

        - name: PHP 7.3 / PostgreSQL 9.6 / Testing (Presentation)
          php: '7.3'
          stage: Test
          before_install:
              - *AWS_SYNC_DOWN_POSTGRES
              - *BEFORE_INSTALL_SCRIPT
              - *CHROMDRIVER_DOWNLOAD
          install:
              - *COMPOSER_INSTALL
              - *INSTALL_SCRIPT
              - *SETUP_WEB_INFRASTRUCTURE
          before_script:
              - *RESTORE_POSTGRES_BACKUP
          script:
              - *BROWSER_TESTING_SCRIPT
          after_script:
              - *BROWSER_TESTING_AFTER_SCRIPT
          addons:
              <<: *ADDONS_BASE_INFRASTRUCTURE
              <<: *ADDONS_ARTIFACTS
              postgresql: 9.6

        - name: PHP 7.4 / PostgreSQL 9.6 / Testing (Business, Communication, ...)
          php: '7.4'
          stage: Test
          before_install:
              - *AWS_SYNC_DOWN_POSTGRES
              - *BEFORE_INSTALL_SCRIPT
          install:
              - *COMPOSER_INSTALL
              - *INSTALL_SCRIPT
              - *SETUP_WEB_INFRASTRUCTURE
          before_script:
              - *RESTORE_POSTGRES_BACKUP
          script:
              - *TESTING_SCRIPT
          after_script:
              - *BROWSER_TESTING_AFTER_SCRIPT
          addons:
              <<: *ADDONS_BASE_INFRASTRUCTURE
              <<: *ADDONS_ARTIFACTS
              postgresql: 9.6

        - name: PHP 7.3 / PostgreSQL 9.6 / Testing (Business, Communication, ...)
          php: '7.3'
          stage: Test
          before_install:
              - *AWS_SYNC_DOWN_POSTGRES
              - *BEFORE_INSTALL_SCRIPT
          install:
              - *COMPOSER_INSTALL
              - *INSTALL_SCRIPT
              - *SETUP_WEB_INFRASTRUCTURE
          before_script:
              - *RESTORE_POSTGRES_BACKUP
          script:
              - *TESTING_SCRIPT
          after_script:
              - *BROWSER_TESTING_AFTER_SCRIPT
          addons:
              <<: *ADDONS_BASE_INFRASTRUCTURE
              <<: *ADDONS_ARTIFACTS
              postgresql: 9.6

        - name: PHP 7.4 / MariaDB / MarketPlace Testing
          php: '7.4'
          stage: Test
          env:
              - APPLICATION_ENV=ci.mysql
          before_install:
              - *AWS_SYNC_DOWN_MYSQL
              - *BEFORE_INSTALL_SCRIPT
          install:
              - *COMPOSER_INSTALL
              - *INSTALL_SCRIPT
              - *SETUP_WEB_INFRASTRUCTURE
          before_script:
              - *RESTORE_MYSQL_BACKUP
          script:
              - unset CHROME_BIN && export CHROME_BIN=${CHROMIUM_BINARY}
              # Install npm packages
              - export YARN_CACHE_FOLDER=$HOME/.yarn/cache && vendor/bin/console frontend:mp:install-dependencies -vvv
              - vendor/bin/console frontend:mp:build
              - yarn mp:test
          after_script:
              - *BROWSER_TESTING_AFTER_SCRIPT
          addons:
              mariadb: 10.3
              <<: *ADDONS_BASE_INFRASTRUCTURE

        - name: PHP8 Validation
          php: '8.0'
          stage: Test
          before_install:
              - *AWS_SYNC_DOWN_POSTGRES
              - *BEFORE_INSTALL_SCRIPT
          install:
              - *COMPOSER_INSTALL
          script:
              - *VALIDATION_SCRIPT_PHP8
          addons:
              <<: *ADDONS_BASE_INFRASTRUCTURE

        - name: PHP8 PHPStan spryker/spryker
          php: '8.0'
          stage: Test
          before_install:
              - *AWS_SYNC_DOWN_POSTGRES
              - *BEFORE_INSTALL_SCRIPT
          install:
              - *COMPOSER_INSTALL
          script:
              - vendor/bin/console code:phpstan -m Spryker.all -v
          addons:
              <<: *ADDONS_BASE_INFRASTRUCTURE

        - name: PHP8 PHPStan spryker/spryker-shop
          php: '8.0'
          stage: Test
          before_install:
              - *AWS_SYNC_DOWN_POSTGRES
              - *BEFORE_INSTALL_SCRIPT
          install:
              - *COMPOSER_INSTALL
          script:
              - vendor/bin/console code:phpstan -m SprykerShop.all -v
          addons:
              <<: *ADDONS_BASE_INFRASTRUCTURE

        - name: PHP 8.0 / MariaDB / Testing (Business, Communication, ...)
          php: '8.0'
          stage: Test
          env:
              - APPLICATION_ENV=ci.mysql
          before_install:
              - *AWS_SYNC_DOWN_MYSQL
              - *BEFORE_INSTALL_SCRIPT
          install:
              - *COMPOSER_INSTALL
              - COMPOSER_MEMORY_LIMIT=-1 composer u lcobucci/jwt -w --ignore-platform-reqs
              - *INSTALL_SCRIPT
              - *SETUP_WEB_INFRASTRUCTURE
          before_script:
              - *RESTORE_MYSQL_BACKUP
          script:
              - *TESTING_SCRIPT
          after_script:
              - *BROWSER_TESTING_AFTER_SCRIPT
          addons:
              mariadb: 10.3
              <<: *ADDONS_BASE_INFRASTRUCTURE

        - name: Docker / Alpine / PHP 7.3 / MariaDB / Functional Tests
          <<: *DOCKER_BUILD_TEMPLATE
          stage: Test
          env:
              - PROGRESS_TYPE=plain
              - SPRYKER_PLATFORM_IMAGE=spryker/php:7.3
              - TRAVIS=1
          script:
              - docker/sdk boot -v deploy.ci.functional.mariadb.yml
              - docker/sdk up -t -v
              - docker/sdk testing codecept run -c codeception.ci.functional.yml

        - name: Docker / Alpine / PHP 7.4 / PostgreSQL / Functional Tests
          <<: *DOCKER_BUILD_TEMPLATE
          stage: Test
          env:
              - PROGRESS_TYPE=plain
              - SPRYKER_PLATFORM_IMAGE=spryker/php:7.4
              - TRAVIS=1
          script:
              - docker/sdk boot -v deploy.ci.functional.yml
              - docker/sdk up -t -v
              - docker/sdk testing codecept run -c codeception.ci.functional.yml

        - name: Docker / Alpine / PHP 7.3 / MariaDB / Acceptance
          <<: *DOCKER_BUILD_TEMPLATE
          stage: Test
          env:
              - PROGRESS_TYPE=plain
              - SPRYKER_PLATFORM_IMAGE=spryker/php:7.3
              - TRAVIS=1
          script:
              - docker/sdk boot -v deploy.ci.acceptance.mariadb.yml
              - docker/sdk up -t
              - docker/sdk testing console queue:worker:start --stop-when-empty
              - docker/sdk testing codecept run -c codeception.acceptance.yml

        - name: Docker / Alpine / PHP 7.4 / PostgreSQL / Acceptance
          <<: *DOCKER_BUILD_TEMPLATE
          stage: Test
          env:
              - PROGRESS_TYPE=plain
              - SPRYKER_PLATFORM_IMAGE=spryker/php:7.4
              - TRAVIS=1
          script:
              - docker/sdk boot -v deploy.ci.acceptance.yml
              - docker/sdk up -t
              - docker/sdk testing console queue:worker:start --stop-when-empty
              - docker/sdk testing codecept run -c codeception.acceptance.yml

        - name: Docker / Alpine / PHP 7.4 / PostgreSQL / Glue
          <<: *DOCKER_BUILD_TEMPLATE
          stage: Test
          env:
              - PROGRESS_TYPE=plain
              - SPRYKER_PLATFORM_IMAGE=spryker/php:7.4
              - TRAVIS=1
          script:
              - docker/sdk boot -v deploy.ci.api.yml
              - docker/sdk up -t -v
              - docker/sdk testing codecept fixtures
              - docker/sdk testing console queue:worker:start --stop-when-empty
              - docker/sdk testing codecept run -c codeception.api.yml

        - name: Docker / Alpine / PHP 7.3 / MariaDB / Glue
          <<: *DOCKER_BUILD_TEMPLATE
          stage: Test
          env:
              - PROGRESS_TYPE=plain
              - SPRYKER_PLATFORM_IMAGE=spryker/php:7.3
              - TRAVIS=1
          script:
              - docker/sdk boot -v deploy.ci.api.mariadb.yml
              - docker/sdk up -t -v
              - docker/sdk testing codecept fixtures
              - docker/sdk testing console queue:worker:start --stop-when-empty
              - docker/sdk testing codecept run -c codeception.api.yml

        - name: Docker / Alpine / PHP 7.4 / Frontend & Assets
          <<: *DOCKER_BUILD_TEMPLATE
          stage: Test
          env:
              - PROGRESS_TYPE=plain
              - SPRYKER_PLATFORM_IMAGE=spryker/php:7.4
              - TRAVIS=1
          script:
              - docker/sdk boot -v deploy.yml
              - SPRYKER_BUILD_HASH=myhash docker/sdk export images
              - docker run -it --rm -e SPRYKER_NGINX_CGI_HOST_YVES_EU=localhost -e SPRYKER_NGINX_CGI_HOST_ZED_EU=localhost -e SPRYKER_NGINX_CGI_HOST_GLUE_EU=localhost -e SPRYKER_NGINX_CGI_HOST_CONFIGURATOR_EU=localhost -e SPRYKER_NGINX_CGI_HOST_YVES_US=localhost -e SPRYKER_NGINX_CGI_HOST_GLUE_US=localhost -e SPRYKER_NGINX_CGI_HOST_ZED_US=localhost -e ALLOWED_IP=127.0.0.1 spryker_demo_frontend:1.0-frontend nginx -t
              - docker run -it --rm --entrypoint='' spryker_demo_frontend:1.0-frontend ls -al /data/public/Yves/assets/myhash
              - docker run -it --rm --entrypoint='' spryker_demo_frontend:1.0-frontend ls -al /data/public/Zed/assets/

        - name: Docker / Debian / PHP 7.3 / Frontend & Assets
          <<: *DOCKER_BUILD_TEMPLATE
          stage: Test
          env:
              - PROGRESS_TYPE=plain
              - SPRYKER_PLATFORM_IMAGE=spryker/php:7.3-debian
              - TRAVIS=1
          script:
              - docker/sdk boot -v deploy.yml
              - SPRYKER_BUILD_HASH=myhash docker/sdk export images
              - docker run -it --rm -e SPRYKER_NGINX_CGI_HOST_YVES_EU=localhost -e SPRYKER_NGINX_CGI_HOST_ZED_EU=localhost -e SPRYKER_NGINX_CGI_HOST_GLUE_EU=localhost -e SPRYKER_NGINX_CGI_HOST_CONFIGURATOR_EU=localhost -e SPRYKER_NGINX_CGI_HOST_YVES_US=localhost -e SPRYKER_NGINX_CGI_HOST_GLUE_US=localhost -e SPRYKER_NGINX_CGI_HOST_ZED_US=localhost -e ALLOWED_IP=127.0.0.1 spryker_demo_frontend:1.0-frontend nginx -t
              - docker run -it --rm --entrypoint='' spryker_demo_frontend:1.0-frontend ls -al /data/public/Yves/assets/myhash
              - docker run -it --rm --entrypoint='' spryker_demo_frontend:1.0-frontend ls -al /data/public/Zed/assets/
services:
    - redis
