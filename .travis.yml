language: php

git:
    depth: 3

env:
    global:
        - APPLICATION_ENV=ci.pgsql
        - SPRYKER_TESTING_ENABLED=1
        - APPLICATION_STORE=DE
        - PROJECT=suite
        - POSTGRES_PORT="5433"

os: linux
dist: bionic

#Possible travis events (push, pull_request, cron, or api)
jobs:
    fast_finish: true

    allow_failures: []

    include:

        - php: "7.4"
          dist: bionic
          env:
              - MP_TEST=1

        - php: "7.4"
          dist: bionic
          env:
              - VALIDATION=1

        - php: "7.4"
          dist: bionic
          env:
              - TEST_GROUP=acceptance

        - php: "7.4"
          dist: bionic
          env:
              - TEST_GROUP=without-acceptance

        - php: "7.3"
          dist: bionic
          env:
              - TEST_GROUP=acceptance
              - DB_ENGINE=mysql
              - APPLICATION_ENV=ci.mysql

        - php: "7.3"
          dist: bionic
          env:
              - TEST_GROUP=without-acceptance
              - DB_ENGINE=mysql
              - APPLICATION_ENV=ci.mysql

        - php: "7.3"
            # disabled
          if: true = false
          dist: bionic
          env:
              - TEST_GROUP=acceptance
              - DB_ENGINE=mysql
              - APPLICATION_ENV=ci.mysql
              - PREFER_LOWEST=1

        - php: "7.3"
            # disabled
          if: true = false
          dist: bionic
          env:
              - TEST_GROUP=without-acceptance
              - DB_ENGINE=mysql
              - APPLICATION_ENV=ci.mysql
              - PREFER_LOWEST=1

        - name: Docker / Alpine / PHP 7.4 / PostgreSQL / Functional
          os: linux
          dist: bionic
          language: shell
          env:
              - PROGRESS_TYPE=plain
              - SPRYKER_PLATFORM_IMAGE=spryker/php:7.4
              - TRAVIS=1
          addons:
              hosts:
                  - yves.de.spryker.local
                  - zed.de.spryker.local
                  - glue.de.spryker.local
              apt:
                  packages:
                      - apache2-utils
                      - apt-transport-https
                      - ca-certificates
                      - curl
                      - gnupg-agent
                      - pigz
                      - software-properties-common
                  sources:
                      - sourceline: "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable"
                        key_url: https://download.docker.com/linux/ubuntu/gpg
          install:
              - echo eyAiZXhwZXJpbWVudGFsIiA6IHRydWUsICJmZWF0dXJlcyIgOiB7ICJidWlsZGtpdCI6IHRydWUgfSB9Cg==|base64 -d|sudo tee /etc/docker/daemon.json
              - sudo apt-get install --only-upgrade docker-ce -y
              - sudo curl -L "https://github.com/docker/compose/releases/download/1.24.0/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
              - sudo chmod +x /usr/local/bin/docker-compose
          script:
              - git clone https://github.com/spryker/docker-sdk.git --single-branch --branch master ./docker
              - docker/sdk boot deploy.ci.functional.yml -v
              - docker/sdk up -t -v
              - docker/sdk testing codecept run -c codeception.ci.functional.yml
          before_install: skip
          before_script: skip
          after_script: skip

        - name: Docker / Alpine / PHP 7.3 / PostgreSQL / Glue
          os: linux
          dist: bionic
          language: shell
          env:
              - PROGRESS_TYPE=plain
              - SPRYKER_PLATFORM_IMAGE=spryker/php:7.3
              - TRAVIS=1
          addons:
              hosts:
                  - yves.de.spryker.local
                  - zed.de.spryker.local
                  - glue.de.spryker.local
              apt:
                  packages:
                      - apache2-utils
                      - apt-transport-https
                      - ca-certificates
                      - curl
                      - gnupg-agent
                      - pigz
                      - software-properties-common
                  sources:
                      - sourceline: "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable"
                        key_url: https://download.docker.com/linux/ubuntu/gpg
          install:
              - echo eyAiZXhwZXJpbWVudGFsIiA6IHRydWUsICJmZWF0dXJlcyIgOiB7ICJidWlsZGtpdCI6IHRydWUgfSB9Cg==|base64 -d|sudo tee /etc/docker/daemon.json
              - sudo apt-get install --only-upgrade docker-ce -y
              - sudo curl -L "https://github.com/docker/compose/releases/download/1.24.0/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
              - sudo chmod +x /usr/local/bin/docker-compose
          script:
              - git clone https://github.com/spryker/docker-sdk.git --single-branch --branch master ./docker
              - docker/sdk boot deploy.ci.api.yml -v
              - docker/sdk up -t -v
              - docker/sdk testing codecept fixtures
              - docker/sdk testing console queue:worker:start --stop-when-empty
              - docker/sdk testing codecept run -c codeception.api.yml
          before_install: skip
          before_script: skip
          after_script: skip

        - name: Docker / Alpine / PHP 7.3 / MariaDB / Functional
          os: linux
          dist: bionic
          language: shell
          env:
              - PROGRESS_TYPE=plain
              - SPRYKER_PLATFORM_IMAGE=spryker/php:7.3
              - TRAVIS=1
          addons:
              hosts:
                  - yves.de.spryker.local
                  - zed.de.spryker.local
                  - glue.de.spryker.local
              apt:
                  packages:
                      - apache2-utils
                      - apt-transport-https
                      - ca-certificates
                      - curl
                      - gnupg-agent
                      - pigz
                      - software-properties-common
                  sources:
                      - sourceline: "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable"
                        key_url: https://download.docker.com/linux/ubuntu/gpg
          install:
              - echo eyAiZXhwZXJpbWVudGFsIiA6IHRydWUsICJmZWF0dXJlcyIgOiB7ICJidWlsZGtpdCI6IHRydWUgfSB9Cg==|base64 -d|sudo tee /etc/docker/daemon.json
              - sudo apt-get install --only-upgrade docker-ce -y
              - sudo curl -L "https://github.com/docker/compose/releases/download/1.24.0/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
              - sudo chmod +x /usr/local/bin/docker-compose
          script:
              - git clone https://github.com/spryker/docker-sdk.git --single-branch --branch master ./docker
              - docker/sdk boot deploy.ci.functional.mariadb.yml -v
              - docker/sdk up -t -v
              - docker/sdk testing codecept run -c codeception.ci.functional.yml
          before_install: skip
          before_script: skip
          after_script: skip

        - name: Docker / Debian / PHP 7.3 / PostgreSQL / Functional
          os: linux
          dist: bionic
          language: shell
          env:
              - PROGRESS_TYPE=plain
              - SPRYKER_PLATFORM_IMAGE=spryker/php:7.3-debian
              - TRAVIS=1
          addons:
              hosts:
                  - yves.de.spryker.local
                  - zed.de.spryker.local
                  - glue.de.spryker.local
              apt:
                  packages:
                      - apache2-utils
                      - apt-transport-https
                      - ca-certificates
                      - curl
                      - gnupg-agent
                      - pigz
                      - software-properties-common
                  sources:
                      - sourceline: "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable"
                        key_url: https://download.docker.com/linux/ubuntu/gpg
          install:
              - echo eyAiZXhwZXJpbWVudGFsIiA6IHRydWUsICJmZWF0dXJlcyIgOiB7ICJidWlsZGtpdCI6IHRydWUgfSB9Cg==|base64 -d|sudo tee /etc/docker/daemon.json
              - sudo apt-get install --only-upgrade docker-ce -y
              - sudo curl -L "https://github.com/docker/compose/releases/download/1.24.0/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
              - sudo chmod +x /usr/local/bin/docker-compose
          script:
              - git clone https://github.com/spryker/docker-sdk.git --single-branch --branch master ./docker
              - docker/sdk boot deploy.ci.functional.yml -v
              - docker/sdk up -t -v
              - docker/sdk testing codecept run -c codeception.ci.functional.yml
          before_install: skip
          before_script: skip
          after_script: skip

        - name: Docker / Alpine / PHP 7.3 / MariaDB / Acceptance
          os: linux
          dist: bionic
          language: shell
          env:
              - PROGRESS_TYPE=plain
              - SPRYKER_PLATFORM_IMAGE=spryker/php:7.3
              - TRAVIS=1
          addons:
              hosts:
                  - yves.de.spryker.local
                  - zed.de.spryker.local
                  - glue.de.spryker.local
              apt:
                  packages:
                      - apache2-utils
                      - apt-transport-https
                      - ca-certificates
                      - curl
                      - gnupg-agent
                      - pigz
                      - software-properties-common
                  sources:
                      - sourceline: "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable"
                        key_url: https://download.docker.com/linux/ubuntu/gpg
          install:
              - echo eyAiZXhwZXJpbWVudGFsIiA6IHRydWUsICJmZWF0dXJlcyIgOiB7ICJidWlsZGtpdCI6IHRydWUgfSB9Cg==|base64 -d|sudo tee /etc/docker/daemon.json
              - sudo apt-get install --only-upgrade docker-ce -y
              - sudo curl -L "https://github.com/docker/compose/releases/download/1.24.0/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
              - sudo chmod +x /usr/local/bin/docker-compose
          script:
              - git clone https://github.com/spryker/docker-sdk.git --single-branch --branch master ./docker
              - docker/sdk boot -v deploy.ci.acceptance.mariadb.yml
              - docker/sdk up -t
              - docker/sdk testing console queue:worker:start --stop-when-empty
              - docker/sdk testing codecept run -c codeception.acceptance.yml
          before_install: skip
          before_script: skip
          after_script: skip

        - name: Docker / Alpine / PHP 7.4 / PostgreSQL / Acceptance
          os: linux
          dist: bionic
          language: shell
          env:
              - PROGRESS_TYPE=plain
              - SPRYKER_PLATFORM_IMAGE=spryker/php:7.4
              - TRAVIS=1
          addons:
              hosts:
                  - yves.de.spryker.local
                  - zed.de.spryker.local
                  - glue.de.spryker.local
              apt:
                  packages:
                      - apache2-utils
                      - apt-transport-https
                      - ca-certificates
                      - curl
                      - gnupg-agent
                      - pigz
                      - software-properties-common
                  sources:
                      - sourceline: "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable"
                        key_url: https://download.docker.com/linux/ubuntu/gpg
          install:
              - echo eyAiZXhwZXJpbWVudGFsIiA6IHRydWUsICJmZWF0dXJlcyIgOiB7ICJidWlsZGtpdCI6IHRydWUgfSB9Cg==|base64 -d|sudo tee /etc/docker/daemon.json
              - sudo apt-get install --only-upgrade docker-ce -y
              - sudo curl -L "https://github.com/docker/compose/releases/download/1.24.0/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
              - sudo chmod +x /usr/local/bin/docker-compose
          script:
              - git clone https://github.com/spryker/docker-sdk.git --single-branch --branch master ./docker
              - docker/sdk boot -v deploy.ci.acceptance.yml
              - docker/sdk up -t
              - docker/sdk testing console queue:worker:start --stop-when-empty
              - docker/sdk testing codecept run -c codeception.acceptance.yml
          before_install: skip
          before_script: skip
          after_script: skip

        - name: Docker / Alpine / PHP 7.4 / Frontend & Assets
          os: linux
          dist: bionic
          language: shell
          env:
              - PROGRESS_TYPE=plain
              - SPRYKER_PLATFORM_IMAGE=spryker/php:7.4
              - TRAVIS=1
          addons:
              hosts:
                  - yves.de.spryker.local
                  - zed.de.spryker.local
                  - glue.de.spryker.local
              apt:
                  packages:
                      - apache2-utils
                      - apt-transport-https
                      - ca-certificates
                      - curl
                      - gnupg-agent
                      - pigz
                      - software-properties-common
                  sources:
                      - sourceline: "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable"
                        key_url: https://download.docker.com/linux/ubuntu/gpg
          install:
              - echo eyAiZXhwZXJpbWVudGFsIiA6IHRydWUsICJmZWF0dXJlcyIgOiB7ICJidWlsZGtpdCI6IHRydWUgfSB9Cg==|base64 -d|sudo tee /etc/docker/daemon.json
              - sudo apt-get install --only-upgrade docker-ce -y
              - sudo curl -L "https://github.com/docker/compose/releases/download/1.24.0/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
              - sudo chmod +x /usr/local/bin/docker-compose
          script:
              - git clone https://github.com/spryker/docker-sdk.git --single-branch --branch master ./docker
              - docker/sdk boot deploy.yml
              - SPRYKER_BUILD_HASH=myhash docker/sdk export images
              - docker run -it --rm -e SPRYKER_NGINX_CGI_HOST_YVES_EU=localhost -e SPRYKER_NGINX_CGI_HOST_ZED_EU=localhost -e SPRYKER_NGINX_CGI_HOST_GLUE_EU=localhost -e SPRYKER_NGINX_CGI_HOST_YVES_US=localhost -e SPRYKER_NGINX_CGI_HOST_GLUE_US=localhost -e SPRYKER_NGINX_CGI_HOST_ZED_US=localhost -e ALLOWED_IP=127.0.0.1 spryker_demo_frontend:1.0-frontend nginx -t
              - docker run -it --rm --entrypoint='' spryker_demo_frontend:1.0-frontend ls -al /data/public/Yves/assets/myhash
              - docker run -it --rm --entrypoint='' spryker_demo_frontend:1.0-frontend ls -al /data/public/Zed/assets/
          before_install: skip
          before_script: skip
          after_script: skip

addons:
    apt:
        update: true
        sources:
            - sourceline: ppa:chris-lea/redis-server
            - sourceline: deb http://dl.bintray.com/rabbitmq-erlang/debian bionic erlang
              key_url: https://github.com/rabbitmq/signing-keys/releases/download/2.0/rabbitmq-release-signing-key.asc
            - sourceline: deb https://dl.bintray.com/rabbitmq/debian bionic main
              key_url: https://github.com/rabbitmq/signing-keys/releases/download/2.0/rabbitmq-release-signing-key.asc
            - sourceline: ppa:ondrej/php
        packages:
            - redis-tools
            - redis-server
            - rabbitmq-server
            - graphviz
            - libzip-dev
            - postgresql-12
            - postgresql-client-12
            - postgresql-server-dev-12
            - rabbitmq-server
            - gnupg
            - libnss3-dev
            - ca-certificates
            - fonts-liberation
            - libappindicator3-1
            - libasound2
            - libatk-bridge2.0-0
            - libatk1.0-0
            - libc6
            - libcairo2
            - libcups2
            - libdbus-1-3
            - libexpat1
            - libfontconfig1
            - libgbm1
            - libgcc1
            - libglib2.0-0
            - libgtk-3-0
            - libnspr4
            - libnss3
            - libpango-1.0-0
            - libpangocairo-1.0-0
            - libstdc++6
            - libx11-6
            - libx11-xcb1
            - libxcb1
            - libxcomposite1
            - libxcursor1
            - libxdamage1
            - libxext6
            - libxfixes3
            - libxi6
            - libxrandr2
            - libxrender1
            - libxss1
            - libxtst6
            - lsb-release
            - xdg-utils
    postgresql: "12"
    mariadb: "10.3"

    hosts:
        - zed.de.spryker.test
        - www.de.spryker.test
        - glue.de.spryker.test

cache:
    directories:
        - $HOME/.composer/cache
        - $HOME/.rvm/gems # Mailcatcher is a ruby gem, takes 5 minutes to install.
        - $HOME/.nvm/.cache
        - /tmp/pear/cache/
        - $HOME/.yarn/cache
        - ./node_modules
        - $HOME/chromium-ecosystem

services:
    - postgresql
    - redis

before_install:
    - phpenv config-add config/Shared/ci/travis/travis.php.ini
    - echo "extension = redis.so" >> ~/.phpenv/versions/$(phpenv version-name)/etc/php.ini
    - phpenv config-rm xdebug.ini
    # Chromedriver section
    - curl -L "https://github.com/spryker/docker-chromedriver/archive/master.zip" -o $HOME/chromium-ecosystem/docker-chromedriver.zip
    - rm -rf $HOME/chromium-ecosystem/docker-chromedriver-master
    - unzip -o $HOME/chromium-ecosystem/docker-chromedriver.zip -d $HOME/chromium-ecosystem/
    - rm -rf $HOME/chromium-ecosystem/*.zip
    - export CHROMEDRIVER_REVISION=814168

install:
    - chmod -R a+x config/Shared/ci/travis/
    - if [[ $PREFER_LOWEST == 1 ]] ; then config/Shared/ci/travis/install_elasticsearch_6_8.sh ; else config/Shared/ci/travis/install_elasticsearch_7_6.sh ; fi
    - if [[ $PREFER_LOWEST == 1 ]] ; then composer update --optimize-autoloader --no-interaction --prefer-lowest ; else composer install --optimize-autoloader --no-interaction ; fi
    - config/Shared/ci/travis/install_mailcatcher.sh
    - if [[ -z $MP_TEST ]] ; then config/Shared/ci/travis/configure_postgres.sh ; fi
    # Exposes ${CHROMEDRIVER_BINARY} and ${CHROMIUM_BINARY}
    - . $HOME/chromium-ecosystem/docker-chromedriver-master/chromium-installer $CHROMEDRIVER_REVISION $HOME/chromium-ecosystem false

before_script:
    - nvm install 12 > /dev/null

    - mkdir -p shared/data/common/jenkins
    - mkdir -p shared/data/common/jenkins/jobs
    - mkdir -p data/cache -m 0777
    - mkdir -p data/logs -m 0777
    - chmod -R 777 data/
    - chmod -R 660 config/Zed/dev_only_private.key
    - chmod -R 660 config/Zed/dev_only_public.key

    - if [[ $TEST_GROUP == 'acceptance' || $TEST_GROUP == 'without-acceptance' ]] ; then config/Shared/ci/travis/acceptance_env.sh ; fi
    - if [[ $TEST_GROUP == 'acceptance' ]] ; then vendor/bin/install DE -r ci ; fi
    - if [[ $TEST_GROUP == 'without-acceptance' ]] ; then vendor/bin/install DE -r ci -x frontend -x fixtures ; fi

    - if [[ $VALIDATION == 1 ]] ; then vendor/bin/install DE -r ci -s generate -s database-migrate ; fi
    - if [[ $VALIDATION == 1 ]] ; then vendor/bin/console propel:install ; fi

script:
    - if [[ $VALIDATION == 1 ]] ; then vendor/bin/psalm.phar --show-info=false ; fi

    - timeout 45m bash -c "${CHROMEDRIVER_BINARY} --port=4444 --whitelisted-ips= --url-base=/wd/hub --log-path=/tmp/chromedriver.log --log-level=DEBUG">/dev/null &
    - if [[ $TEST_GROUP == 'without-acceptance' ]] ; then vendor/bin/codecept run -c codeception.functional.yml --ext DotReporter ; fi
    - if [[ $TEST_GROUP == 'acceptance' ]] ; then vendor/bin/codecept run -g EndToEnd -g Presentation -x DockerOnly --ext DotReporter ; fi

notifications:
    email: false
