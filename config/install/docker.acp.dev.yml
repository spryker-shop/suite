env:
    NEW_RELIC_ENABLED: 0

sections:
    build:
        generate-transfers:
            command: 'vendor/bin/console transfer:generate'

        router-cache-warmup-yves:
            command: 'vendor/bin/yves router:cache:warm-up'

        router-cache-warmup-backoffice:
            command: 'vendor/bin/console router:cache:warm-up:backoffice'

        oms-process-cache-warmup:
            command: 'vendor/bin/console oms:process-cache:warm-up'

        router-cache-warmup-backend-gateway:
            command: 'vendor/bin/console router:cache:warm-up:backend-gateway'

        twig-cache-warmup:
            command: 'vendor/bin/console twig:cache:warmer'

        navigation-cache-warmup:
            command: 'vendor/bin/console navigation:build-cache'

        rest-request-validation-cache-warmup:
            command: 'vendor/bin/console rest-api:build-request-validation-cache'

        propel-copy-schema:
            command: 'vendor/bin/console propel:schema:copy'

        propel-build:
            command: 'vendor/bin/console propel:model:build'

        generate-entity-transfer:
            command: 'vendor/bin/console transfer:entity:generate'

        generate-page-source-map:
            command: 'vendor/bin/console search:setup:source-map'

        translator-generate-cache:
            command: 'vendor/bin/console translator:generate-cache'

        # app-store-suite
        app-store-suite-composer-dependencies:
            command: 'bash acp-toolbox/bin/commands/apps-command.sh composer install -o'

        app-store-suite-build:
            command: 'bash acp-toolbox/bin/commands/apps-command.sh vendor/bin/install -r docker -s build'

        # registry-service
        registry-service-composer-dependencies:
            command: 'bash acp-toolbox/bin/commands/atrs-command.sh composer install -o'

        registry-service-build:
            command: 'bash acp-toolbox/bin/commands/atrs-command.sh vendor/bin/install -r docker -s build'

    build-production:
        excluded: true
        cache-class-resolver-build:
            command: 'vendor/bin/console cache:class-resolver:build'

    build-development:
        generate-transfers:
            command: 'vendor/bin/console transfer:generate'

        generate-transfer-databuilders:
            command: 'vendor/bin/console transfer:databuilder:generate'

        generate-auto-completion:
            command: 'vendor/bin/console dev:ide-auto-completion:generate'

        rest-api-generate-documentation:
            command: 'vendor/bin/console rest-api:generate:documentation'

        # app-store-suite
        app-store-suite-build-development:
            command: 'bash acp-toolbox/bin/commands/apps-command.sh vendor/bin/install -r docker -s build-development'

        # registry-service
        registry-service-build:
            command: 'bash acp-toolbox/bin/commands/atrs-command.sh vendor/bin/install -r docker -s build-development'

    build-static:
        dependencies-install:
            command: 'vendor/bin/console frontend:project:install-dependencies'

        # app-store-suite
        app-store-suite-build-static:
            command: 'bash acp-toolbox/bin/commands/apps-command.sh vendor/bin/install -r docker -s build-static'

        # registry-service
        registry-service-build-static:
            command: 'bash acp-toolbox/bin/commands/atrs-command.sh vendor/bin/install -r docker -s build-static'
            timeout: 1200

    build-static-production:
        excluded: true
        yves-build-frontend:
            command: 'vendor/bin/console frontend:yves:build -e production'

        zed-build-frontend:
            command: 'vendor/bin/console frontend:zed:build -e production'

        date-time-product-configurator:
            command: 'vendor/bin/console frontend:date-time-product-configurator:build'

    build-static-development:
        yves-build-frontend:
            command: 'vendor/bin/console frontend:yves:build'

        zed-build-frontend:
            command: 'vendor/bin/console frontend:zed:build'

        date-time-product-configurator:
            command: 'vendor/bin/console frontend:date-time-product-configurator:build'

        # app-store-suite
        app-store-suite-build-static-development:
            command: 'bash acp-toolbox/bin/commands/apps-command.sh vendor/bin/install -r docker -s build-static-development'

        # registry-service
        registry-service-build-static-development:
            command: 'bash acp-toolbox/bin/commands/atrs-command.sh vendor/bin/install -r docker -s build-static-development'

    scheduler-setup:
        jenkins-setup:
            command: 'bash acp-toolbox/bin/commands/internal-region-console.sh scheduler:setup'

        # app-store-suite
        external-jenkins-setup:
            command: 'bash acp-toolbox/bin/commands/external-region-install.sh -r docker -s scheduler-setup'

    scheduler-suspend:
        excluded: true
        jenkins-suspend:
            command: 'bash acp-toolbox/bin/commands/internal-region-console.sh scheduler:suspend'

        # app-store-suite
        external-jenkins-suspend:
            command: 'bash acp-toolbox/bin/commands/external-region-install.sh -r docker -s scheduler-suspend'

    scheduler-clean:
        excluded: true
        jenkins-clean:
            command: 'vendor/bin/console scheduler:clean'

        # app-store-suite
        external-jenkins-clean:
            command: 'bash acp-toolbox/bin/commands/external-region-install.sh -r docker -s scheduler-clean'

    init-storages-per-store:
        # app-store-suite | registry-service
        external-init-storages-per-store:
            command: 'bash acp-toolbox/bin/commands/external-region-install.sh -r docker -s init-storages-per-store'

        queue-setup:
            command: 'bash acp-toolbox/bin/commands/internal-region-console.sh queue:setup'

        setup-search-create-sources:
            command: 'bash acp-toolbox/bin/commands/internal-region-console.sh search:setup:sources'

    init-storages-per-region:
        # app-store-suite | registry-service
        external-init-storages-per-region:
            command: 'bash acp-toolbox/bin/commands/external-region-install.sh -r docker -s init-storages-per-region'

        propel-copy-schema:
            command: 'bash acp-toolbox/bin/commands/internal-region-console.sh propel:schema:copy'

        propel-postgres-compatibility:
            command: 'bash acp-toolbox/bin/commands/internal-region-console.sh propel:pg-sql-compat'

        propel-migration-delete:
            command: 'bash acp-toolbox/bin/commands/internal-region-console.sh propel:migration:delete'

        propel-tables-drop:
            command: 'bash acp-toolbox/bin/commands/internal-region-console.sh propel:tables:drop'

        propel-diff:
            command: 'bash acp-toolbox/bin/commands/internal-region-console.sh propel:diff'

        propel-migrate:
            command: 'bash acp-toolbox/bin/commands/internal-region-console.sh propel:migrate'

        propel-migration-cleanup:
            command: 'bash acp-toolbox/bin/commands/internal-region-console.sh propel:migration:delete'

        init-database:
            command: 'bash acp-toolbox/bin/commands/internal-region-console.sh setup:init-db'

        # registry-service localstack section execution
        registry-service-localstack:
            command: 'bash acp-toolbox/bin/commands/external-region-install.sh -r docker -s localstack'

    demodata:
        # app-store-suite | registry-service
        external-demodata:
            command: 'bash acp-toolbox/bin/commands/external-region-install.sh -r docker -s demodata'

        import-demodata:
            command: 'bash acp-toolbox/bin/commands/internal-region-console.sh data:import --config=data/import/local/full_${SPRYKER_REGION}.yml'

        update-product-labels:
            command: 'bash acp-toolbox/bin/commands/internal-region-console.sh product-label:relations:update'
