<?xml version="1.0"?>
<statemachine
    xmlns="spryker:state-machine-01"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="spryker:state-machine-01 http://static.spryker.com/state-machine-01.xsd"
>
    <!-- Used as example XML for Pyz\Zed\StateMachineExample implementation -->

    <process name="Invoice01" main="true">

        <states>
            <state name="new"/>
            <state name="invoice created">
                <flag>Flag1</flag>
                <flag>Flag2</flag>
            </state>
            <state name="invoice sent"/>
            <state name="order exported"/>
            <state name="order shipped"/>
            <state name="waiting for payment"/>
            <state name="payment received"/>
            <state name="reminder I sent"/>
            <state name="reminder II sent"/>
            <state name="dunning process started"/>
            <state name="ready for return"/>
            <state name="order export failed"/>
            <state name="completed"/>
        </states>

        <events>
            <event name="create invoice" onEnter="true" command="Test/Command"/>
            <event name="send invoice" onEnter="true"/>
            <event name="export order" onEnter="true"/>
            <event name="ship order" manual="true"/>
            <event name="waiting for payment" onEnter="true"/>
            <event name="payment not received" timeout="1hour"/>
            <event name="payment received" manual="true"/>
            <event name="ready for return" onEnter="true"/>
            <event name="item not returned" timeout="14days"/>
        </events>

        <transitions>
            <transition happy="true">
                <source>new</source>
                <target>invoice created</target>
                <event>create invoice</event>
            </transition>

            <transition happy="true">
                <source>invoice created</source>
                <target>invoice sent</target>
                <event>send invoice</event>
            </transition>

            <transition happy="true" condition="Test/Condition">
                <source>invoice sent</source>
                <target>order exported</target>
                <event>export order</event>
            </transition>

            <transition>
                <source>invoice sent</source>
                <target>order export failed</target>
                <event>export order</event>
            </transition>

            <transition happy="true">
                <source>order exported</source>
                <target>order shipped</target>
                <event>ship order</event>
            </transition>

            <transition happy="true">
                <source>order shipped</source>
                <target>waiting for payment</target>
                <event>waiting for payment</event>
            </transition>

            <transition>
                <source>waiting for payment</source>
                <target>reminder I sent</target>
                <event>payment not received</event>
            </transition>

            <transition happy="true">
                <source>waiting for payment</source>
                <target>payment received</target>
                <event>payment received</event>
            </transition>

            <transition>
                <source>reminder I sent</source>
                <target>reminder II sent</target>
                <event>payment not received</event>
            </transition>

            <transition>
                <source>reminder I sent</source>
                <target>payment received</target>
                <event>payment received</event>
            </transition>

            <transition>
                <source>reminder II sent</source>
                <target>dunning process started</target>
                <event>payment not received</event>
            </transition>

            <transition>
                <source>reminder II sent</source>
                <target>payment received</target>
                <event>payment received</event>
            </transition>

            <transition>
                <source>dunning process started</source>
                <target>payment received</target>
                <event>payment received</event>
            </transition>

            <transition happy="true">
                <source>payment received</source>
                <target>ready for return</target>
                <event>ready for return</event>
            </transition>

            <transition happy="true">
                <source>ready for return</source>
                <target>completed</target>
                <event>item not returned</event>
            </transition>
        </transitions>

    </process>

</statemachine>
